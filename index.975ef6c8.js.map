{"mappings":"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AAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,GAAG,GAAG,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,GAAG,GAAG,CAAC,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,CAAC,GAAG,GAAI,CAAC;QACzB,CAAC,CAAE,CAAC,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,GAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,GAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,GAAI,CAAC;QAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,GAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,GAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,GAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,GAAI,CAAC;QAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,GAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,GAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,GAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,GAAI,CAAC;QAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,GAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,GAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,GAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,GAAI,CAAC;QAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,GAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,GAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,GAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,GAAI,CAAC;QAEzB,CAAC,CAAC,EAAE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AA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,GAAG,GAAG,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,GAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,CAAA,IAAG,EAAE,EAChF,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAI,GAAG,AAAC,CAAA,CAAC,C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AAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACV,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACV,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACV,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACV,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACV,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACV,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QAEf,EAAE,IAAK,EAAE,GAAG,GAAG,CAAC;QAChB,EAAE,IAAK,EAAE,GAAG,GAAG,CAAC;QAChB,EAAE,IAAK,EAAE,GAAG,GAAG,CAAC;QAChB,EAAE,IAAK,EAAE,GAAG,GAAG,CAAC;QAChB,EAAE,IAAK,EAAE,GAAG,GAAG,CAAC;QAChB,EAAE,IAAK,EAAE,GAAG,GAAG,CAAC;QAChB,EAAE,IAAK,EAAE,GAAG,GAAG,CAAC;QAChB,EAAE,IAAK,EAAE,GAAG,GAAG,CAAC;QAChB,EAAE,IAAK,EAAE,GAAG,GAAG,CAAC;QAChB,EAAE,IAAK,EAAE,GAAG,GAAG,CAAC;QAChB,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC;QAChB,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC;QAChB,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC;QAChB,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC;QAChB,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC;QAChB,iBAAiB;QAEjB,YAAY;QACZ,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,EAAE,IAAI,CAAC,GAAC,CAAC,GAAG,EAAE,GAAI,CAAA,CAAC,GAAC,CAAC,CAAA,AAAC,CAAC;QAEvB,aAAa;QACb,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAA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C,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,IAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACvD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QAClD,EAAE,IAAI,QAAS,CAAC;QAChB,WAAW,CACX,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,IAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACvD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QAClD,EAAE,IAAI,QAAS,CAAC;QAChB,WAAW,CACX,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,IAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACvD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QAClD,EAAE,IAAI,QAAS,CAAC;QAChB,WAAW,CACX,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC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AAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,IAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACvD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QAClD,EAAE,IAAI,QAAS,CAAC;QAChB,WAAW,CACX,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,IAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACvD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QAClD,EAAE,IAAI,QAAS,CAAC;QAChB,YAAY,CACZ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,IAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACxD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QACnD,GAAG,IAAI,QAAS,CAAC;QACjB,YAAY,CACZ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE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ACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CA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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-83538b24b50cd5bf.js","src/index.js","node_modules/near-api-js/lib/browser-index.js","node_modules/near-api-js/lib/key_stores/browser-index.js","node_modules/near-api-js/lib/key_stores/keystore.js","node_modules/near-api-js/lib/key_stores/in_memory_key_store.js","node_modules/near-api-js/lib/utils/key_pair.js","node_modules/tweetnacl/nacl-fast.js","node_modules/@parcel/node-resolver-core/lib/_empty.js","node_modules/near-api-js/lib/utils/serialize.js","node_modules/borsh/lib/index.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/bn.js/lib/bn.js","node_modules/bs58/index.js","node_modules/base-x/src/index.js","node_modules/safe-buffer/index.js","node_modules/text-encoding-utf-8/lib/encoding.lib.js","node_modules/near-api-js/lib/utils/enums.js","node_modules/near-api-js/lib/key_stores/browser_local_storage_key_store.js","node_modules/near-api-js/lib/key_stores/merge_key_store.js","node_modules/near-api-js/lib/common-index.js","node_modules/near-api-js/lib/providers/index.js","node_modules/near-api-js/lib/providers/provider.js","node_modules/near-api-js/lib/providers/json-rpc-provider.js","node_modules/depd/lib/browser/index.js","node_modules/near-api-js/lib/utils/web.js","node_modules/http-errors/index.js","node_modules/http-errors/node_modules/depd/lib/browser/index.js","node_modules/setprototypeof/index.js","node_modules/statuses/index.js","node_modules/statuses/codes.json","node_modules/inherits/inherits_browser.js","node_modules/toidentifier/index.js","node_modules/near-api-js/lib/utils/exponential-backoff.js","node_modules/near-api-js/lib/utils/errors.js","node_modules/near-api-js/lib/utils/rpc_errors.js","node_modules/mustache/mustache.js","node_modules/near-api-js/lib/generated/rpc_error_schema.json","node_modules/near-api-js/lib/res/error_messages.json","node_modules/near-api-js/lib/utils/index.js","node_modules/near-api-js/lib/utils/format.js","node_modules/near-api-js/lib/transaction.js","node_modules/js-sha256/src/sha256.js","node_modules/process/browser.js","node_modules/near-api-js/lib/validators.js","node_modules/near-api-js/lib/account.js","node_modules/near-api-js/lib/constants.js","node_modules/near-api-js/lib/account_multisig.js","node_modules/near-api-js/lib/account_creator.js","node_modules/near-api-js/lib/connection.js","node_modules/near-api-js/lib/signer.js","node_modules/near-api-js/lib/contract.js","node_modules/near-api-js/lib/near.js","node_modules/near-api-js/lib/wallet-account.js","node_modules/near-api-js/lib/browser-connect.js","node_modules/error-polyfill/index.js","node_modules/error-polyfill/lib/index.js","node_modules/capability/es5.js","node_modules/capability/index.js","node_modules/capability/lib/definitions.js","node_modules/capability/lib/index.js","node_modules/capability/lib/CapabilityDetector.js","node_modules/error-polyfill/lib/v8.js","node_modules/error-polyfill/lib/prepareStackTrace.js","node_modules/error-polyfill/lib/non-v8/index.js","node_modules/error-polyfill/lib/non-v8/FrameStringSource.js","node_modules/o3/index.js","node_modules/o3/lib/index.js","node_modules/o3/lib/Class.js","node_modules/o3/lib/abstractMethod.js","node_modules/u3/index.js","node_modules/u3/lib/index.js","node_modules/u3/lib/cache.js","node_modules/u3/lib/eachCombination.js","node_modules/error-polyfill/lib/non-v8/FrameStringParser.js","node_modules/error-polyfill/lib/non-v8/Frame.js","node_modules/error-polyfill/lib/unsupported.js","src/monster_constructor.js","src/component_config.js","node_modules/@parcel/runtime-js/lib/runtime-c7445914263f4d69.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-dd3a1408130c2568.js","node_modules/@parcel/runtime-js/lib/runtime-1ac194b97e247103.js","node_modules/@parcel/runtime-js/lib/runtime-29fb585db6163d6f.js","node_modules/@parcel/runtime-js/lib/runtime-857068a2310aee30.js","node_modules/@parcel/runtime-js/lib/runtime-948a87ae4d990bd8.js","node_modules/@parcel/runtime-js/lib/runtime-10ec4e09397ad933.js","node_modules/@parcel/runtime-js/lib/runtime-81660334e167fefc.js","node_modules/@parcel/runtime-js/lib/runtime-58e30e63f609cdea.js","node_modules/@parcel/runtime-js/lib/runtime-dfb4ef78dd6acfe2.js","node_modules/@parcel/runtime-js/lib/runtime-be2dda1791bce8cc.js","node_modules/@parcel/runtime-js/lib/runtime-da2d8c217f5c9da7.js","node_modules/@parcel/runtime-js/lib/runtime-885af29c35d77247.js","node_modules/@parcel/runtime-js/lib/runtime-0684658b2f59bdfd.js","node_modules/@parcel/runtime-js/lib/runtime-3c6b53b11b092adc.js","node_modules/@parcel/runtime-js/lib/runtime-a814bbd0e0811d9b.js","node_modules/web3.storage/dist/bundle.esm.min.js","node_modules/streaming-iterables/dist/index.mjs","node_modules/retry/lib/retry_operation.js","node_modules/retry/lib/retry.js","node_modules/retry/index.js","node_modules/p-retry/index.js","node_modules/it-last/index.js","node_modules/it-pipe/index.js","node_modules/varint/encode.js","node_modules/varint/decode.js","node_modules/varint/length.js","node_modules/varint/index.js","node_modules/multiformats/esm/vendor/varint.js","node_modules/multiformats/esm/src/varint.js","node_modules/multiformats/esm/src/bytes.js","node_modules/multiformats/esm/src/hashes/digest.js","node_modules/multiformats/esm/vendor/base-x.js","node_modules/multiformats/esm/src/bases/base.js","node_modules/multiformats/esm/src/bases/base58.js","node_modules/multiformats/esm/src/bases/base32.js","node_modules/multiformats/esm/src/cid.js","node_modules/cborg/esm/lib/is.js","node_modules/cborg/esm/lib/token.js","node_modules/cborg/esm/lib/byte-utils.js","node_modules/cborg/esm/lib/bl.js","node_modules/cborg/esm/lib/common.js","node_modules/cborg/esm/lib/0uint.js","node_modules/cborg/esm/lib/1negint.js","node_modules/cborg/esm/lib/2bytes.js","node_modules/cborg/esm/lib/3string.js","node_modules/cborg/esm/lib/4array.js","node_modules/cborg/esm/lib/5map.js","node_modules/cborg/esm/lib/6tag.js","node_modules/cborg/esm/lib/7float.js","node_modules/cborg/esm/lib/jump.js","node_modules/cborg/esm/lib/encode.js","node_modules/cborg/esm/lib/decode.js","node_modules/@ipld/dag-cbor/esm/index.js","node_modules/@ipld/car/esm/lib/decoder.js","node_modules/@ipld/car/esm/lib/reader-browser.js","node_modules/@ipld/car/esm/lib/iterator.js","node_modules/@ipld/car/esm/lib/encoder.js","node_modules/@ipld/car/esm/lib/iterator-channel.js","node_modules/@ipld/car/esm/lib/writer-browser.js","node_modules/it-batch/index.js","node_modules/it-parallel-batch/index.js","node_modules/is-plain-obj/index.js","node_modules/merge-options/index.js","node_modules/multiformats/esm/src/hashes/hasher.js","node_modules/multiformats/esm/src/hashes/sha2-browser.js","node_modules/murmurhash3js-revisited/lib/murmurHash3js.js","node_modules/murmurhash3js-revisited/index.js","node_modules/@multiformats/murmur3/esm/index.js","node_modules/ipfs-unixfs-importer/esm/src/options.js","node_modules/err-code/index.js","node_modules/@protobufjs/aspromise/index.js","node_modules/@protobufjs/base64/index.js","node_modules/@protobufjs/eventemitter/index.js","node_modules/@protobufjs/float/index.js","node_modules/@protobufjs/inquire/index.js","node_modules/@protobufjs/utf8/index.js","node_modules/@protobufjs/pool/index.js","node_modules/protobufjs/src/util/longbits.js","node_modules/protobufjs/src/util/minimal.js","node_modules/protobufjs/src/writer.js","node_modules/protobufjs/src/writer_buffer.js","node_modules/protobufjs/src/reader.js","node_modules/protobufjs/src/reader_buffer.js","node_modules/protobufjs/src/rpc/service.js","node_modules/protobufjs/src/rpc.js","node_modules/protobufjs/src/roots.js","node_modules/protobufjs/src/index-minimal.js","node_modules/protobufjs/minimal.js","node_modules/ipfs-unixfs/esm/src/unixfs.js","node_modules/ipfs-unixfs/esm/src/index.js","node_modules/@ipld/dag-pb/esm/src/pb-decode.js","node_modules/@ipld/dag-pb/esm/src/pb-encode.js","node_modules/@ipld/dag-pb/esm/src/util.js","node_modules/@ipld/dag-pb/esm/src/index.js","node_modules/ipfs-unixfs-importer/esm/src/utils/persist.js","node_modules/ipfs-unixfs-importer/esm/src/dag-builder/dir.js","node_modules/multiformats/esm/src/codecs/raw.js","node_modules/it-all/index.js","node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/flat.js","node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/balanced.js","node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/trickle.js","node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/buffer-importer.js","node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/index.js","node_modules/bl/BufferList.js","node_modules/rabin-wasm/src/rabin.js","node_modules/@assemblyscript/loader/index.js","node_modules/rabin-wasm/dist/rabin-wasm.js","node_modules/rabin-wasm/src/index.js","node_modules/ipfs-unixfs-importer/esm/src/chunker/rabin.js","node_modules/ipfs-unixfs-importer/esm/src/chunker/fixed-size.js","node_modules/multiformats/esm/src/bases/identity.js","node_modules/multiformats/esm/src/bases/base2.js","node_modules/multiformats/esm/src/bases/base8.js","node_modules/multiformats/esm/src/bases/base10.js","node_modules/multiformats/esm/src/bases/base16.js","node_modules/multiformats/esm/src/bases/base36.js","node_modules/multiformats/esm/src/bases/base64.js","node_modules/multiformats/esm/src/hashes/identity.js","node_modules/multiformats/esm/src/codecs/json.js","node_modules/multiformats/esm/src/basics.js","node_modules/uint8arrays/esm/src/util/bases.js","node_modules/uint8arrays/esm/src/from-string.js","node_modules/ipfs-unixfs-importer/esm/src/dag-builder/validate-chunks.js","node_modules/ipfs-unixfs-importer/esm/src/dag-builder/index.js","node_modules/ipfs-unixfs-importer/esm/src/dir.js","node_modules/ipfs-unixfs-importer/esm/src/dir-flat.js","node_modules/sparse-array/index.js","node_modules/hamt-sharding/src/bucket.js","node_modules/hamt-sharding/src/consumable-buffer.js","node_modules/uint8arrays/esm/src/concat.js","node_modules/hamt-sharding/src/consumable-hash.js","node_modules/hamt-sharding/src/index.js","node_modules/ipfs-unixfs-importer/esm/src/dir-sharded.js","node_modules/ipfs-unixfs-importer/esm/src/flat-to-shard.js","node_modules/ipfs-unixfs-importer/esm/src/utils/to-path-components.js","node_modules/ipfs-unixfs-importer/esm/src/tree-builder.js","node_modules/ipfs-unixfs-importer/esm/src/index.js","node_modules/browser-readablestream-to-it/index.js","node_modules/blob-to-it/index.js","node_modules/it-peekable/index.js","node_modules/it-map/index.js","node_modules/ipfs-core-utils/esm/src/files/utils.js","node_modules/ipfs-core-utils/esm/src/files/normalise-content.js","node_modules/ipfs-core-utils/esm/src/files/normalise-candidate-single.js","node_modules/ipfs-core-utils/esm/src/files/normalise-input-single.js","node_modules/ipfs-core-utils/esm/src/files/normalise-candidate-multiple.js","node_modules/ipfs-core-utils/esm/src/files/normalise-input-multiple.js","node_modules/web3.storage/node_modules/ipfs-car/dist/esm/pack/utils/normalise-input.js","node_modules/blockstore-core/esm/src/errors.js","node_modules/it-drain/index.js","node_modules/it-filter/index.js","node_modules/it-take/index.js","node_modules/blockstore-core/esm/src/base.js","node_modules/web3.storage/node_modules/ipfs-car/dist/esm/blockstore/memory.js","node_modules/web3.storage/node_modules/ipfs-car/dist/esm/pack/constants.js","node_modules/web3.storage/node_modules/ipfs-car/dist/esm/pack/index.js","node_modules/@web3-storage/parse-link-header/index.js","node_modules/ipfs-unixfs-exporter/node_modules/@ipld/dag-cbor/esm/index.js","node_modules/ipfs-unixfs-exporter/esm/src/utils/find-cid-in-shard.js","node_modules/ipfs-unixfs-exporter/esm/src/utils/extract-data-from-block.js","node_modules/ipfs-unixfs-exporter/esm/src/utils/validate-offset-and-length.js","node_modules/ipfs-unixfs-exporter/esm/src/resolvers/unixfs-v1/content/file.js","node_modules/ipfs-unixfs-exporter/esm/src/resolvers/unixfs-v1/content/directory.js","node_modules/ipfs-unixfs-exporter/esm/src/resolvers/unixfs-v1/content/hamt-sharded-directory.js","node_modules/ipfs-unixfs-exporter/esm/src/resolvers/unixfs-v1/index.js","node_modules/ipfs-unixfs-exporter/esm/src/resolvers/raw.js","node_modules/ipfs-unixfs-exporter/esm/src/resolvers/dag-cbor.js","node_modules/ipfs-unixfs-exporter/esm/src/resolvers/identity.js","node_modules/ipfs-unixfs-exporter/esm/src/resolvers/index.js","node_modules/ipfs-unixfs-exporter/esm/src/index.js","node_modules/uint8arrays/esm/src/equals.js","node_modules/web3.storage/node_modules/ipfs-car/dist/esm/unpack/utils/verifying-get-only-blockstore.js","node_modules/web3.storage/node_modules/ipfs-car/dist/esm/unpack/index.js","node_modules/multiformats/esm/src/block.js","node_modules/carbites/node_modules/@ipld/dag-cbor/esm/index.js","node_modules/carbites/esm/lib/treewalk/splitter.js","node_modules/files-from-path/esm/src/index.browser.js","node_modules/throttled-queue/dist/throttledQueue.js","node_modules/web3.storage/src/platform.web.js","node_modules/web3.storage/src/lib.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"890e741a975ef6c8\";\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        var oldDeps = modules[asset.id][1];\n\n        for (var dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            var id = oldDeps[dep];\n            var parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    var deps = modules[id][1];\n    var orphans = [];\n\n    for (var dep in deps) {\n      var parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(function (id) {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  var parents = getParents(module.bundle.root, id);\n  var accepted = false;\n\n  while (parents.length > 0) {\n    var v = parents.shift();\n    var a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      var p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push.apply(parents, _toConsumableArray(p));\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","const {connect, Contract, WalletAccount, keyStores, utils} = require('near-api-js');\r\n\r\nimport { Web3Storage } from 'web3.storage/dist/bundle.esm.min.js'\r\n\r\n\r\n\r\nconst MONSTER_CONSTRUCTOR = require(\"./monster_constructor\");\r\n\r\nconst monster_constructoror = new MONSTER_CONSTRUCTOR();\r\n\r\nfunction getNearConfig(networkId) {\r\n    return {\r\n        networkId: networkId,\r\n        nodeUrl: `https://rpc.${networkId}.near.org`,\r\n        contractName: `dev-1650561550422-61788933866863`,\r\n        walletUrl: `https://wallet.${networkId}.near.org`,\r\n        helperUrl: `https://helper.${networkId}.near.org`,\r\n    }\r\n}\r\nwindow.nearConfig = getNearConfig('testnet');\r\n\r\nasync function initContract() {\r\n    window.near = await connect(Object.assign({ deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } }, window.nearConfig));\r\n  \r\n    window.walletAccount = new WalletAccount(window.near);\r\n  \r\n    window.accountId = window.walletAccount.getAccountId();\r\n  \r\n    window.contract = new Contract(\r\n        window.walletAccount.account(),\r\n        window.nearConfig.contractName, {\r\n            viewMethods: ['nft_supply_for_owner', 'nft_tokens_for_owner', 'nft_metadata', 'nft_tokens_for_owner_set', 'nft_token'],\r\n            changeMethods: ['nft_mint', 'new_default_meta'],\r\n        }\r\n    );\r\n\r\n}\r\n\r\n\r\nasync function doWork() {\r\n    if (!window.walletAccount.isSignedIn()) {\r\n        signedOutFlow();\r\n    } else {\r\n        signedInFlow();\r\n    }\r\n}\r\n\r\nfunction signedOutFlow() {\r\n    Array.from(document.querySelectorAll('.hide-signed-out')).forEach(el => el.style.visibility = 'hidden');\r\n\r\n    document.getElementById('sign-in').addEventListener('click', () => {\r\n        window.walletAccount.requestSignIn(window.nearConfig.contractName);\r\n    });\r\n}\r\n  \r\n\r\nasync function signedInFlow() {\r\n    Array.from(document.querySelectorAll('.hide-signed-out')).forEach(el => el.style.visibility = 'visible');\r\n\r\n    document.getElementById('sign-in').innerText = window.accountId;\r\n\r\n\r\n    send_answer_button.innerHTML = 'Create';\r\n    send_answer_button.disabled = false;\r\n\r\n\r\n    document.getElementById('sign-in').addEventListener('click', e => {\r\n        e.preventDefault();\r\n        window.walletAccount.signOut();\r\n        window.location.replace(window.location.origin + window.location.pathname);\r\n    });\r\n\r\n}\r\n\r\n\r\n\r\nconst send_answer_button = document.getElementById('send_answer_button');\r\n\r\nsend_answer_button.onclick = async () => {\r\n    send_answer_button.innerHTML = '<span class=\"spinner-border spinner-border-sm mr-2\" role=\"status\" aria-hidden=\"true\" style=\"margin-right: 5px\"></span>Sending image to IPFS...';\r\n    send_answer_button.disabled = true;\r\n\r\n    monster_constructoror.canvas.toBlob(async (blob) => {\r\n\r\n        const files = [\r\n            new File([blob], `${window.accountId}.png`, { type: \"image/png\" })\r\n        ]\r\n\r\n        const client = new Web3Storage({ token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDFGM0Y0NUVDNTNFRWUxOEQ3OGQzRDk5REJlNGVjMGUwYTg3NmQ4NkMiLCJpc3MiOiJ3ZWIzLXN0b3JhZ2UiLCJpYXQiOjE2NTA1NTY2ODExOTEsIm5hbWUiOiJzcHJpbmdfbmVhcl9uZnRfbWludGVyIn0.hHCyxm3rMvmqfH65sY9H37apdfnGyrETpXJMypFiqKc' })\r\n        const cid = await client.put(files);\r\n\r\n        const url = `https://${cid}.ipfs.dweb.link/${window.accountId}.png`;\r\n\r\n        await window.contract.nft_mint({\r\n            args: {\r\n                token_id: window.accountId,\r\n                receiver_id: window.accountId,\r\n                token_metadata: {\r\n\r\n                    media: url\r\n                }\r\n            }, \r\n            gas: \"300000000000000\",\r\n            amount: utils.format.parseNearAmount(\"1\")\r\n        });\r\n        \r\n    }, 'image/png');\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nwindow.onload = async () => {\r\n    await monster_constructoror.load();\r\n    await initContract();\r\n    doWork();\r\n\r\n    const token = await window.contract.nft_token({\r\n        token_id: window.accountId\r\n    });\r\n\r\n    if(token) {\r\n\r\n\r\n        send_answer_button.innerHTML = 'Check in wallet';\r\n        send_answer_button.onclick = () => {\r\n            location.href = 'https://wallet.testnet.near.org/?tab=collectibles';\r\n        }\r\n\r\n        document.getElementById('header').innerHTML = `Load...`;\r\n\r\n        monster_constructoror.setToken(token);\r\n    } else {\r\n        monster_constructoror.draw();\r\n    }\r\n}","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @hidden @module */\nexports.keyStores = __importStar(require(\"./key_stores/browser-index\"));\n__exportStar(require(\"./common-index\"), exports);\n__exportStar(require(\"./browser-connect\"), exports);\nrequire(\"error-polyfill\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MergeKeyStore = exports.BrowserLocalStorageKeyStore = exports.InMemoryKeyStore = exports.KeyStore = void 0;\n/** @hidden @module */\nconst keystore_1 = require(\"./keystore\");\nObject.defineProperty(exports, \"KeyStore\", { enumerable: true, get: function () { return keystore_1.KeyStore; } });\nconst in_memory_key_store_1 = require(\"./in_memory_key_store\");\nObject.defineProperty(exports, \"InMemoryKeyStore\", { enumerable: true, get: function () { return in_memory_key_store_1.InMemoryKeyStore; } });\nconst browser_local_storage_key_store_1 = require(\"./browser_local_storage_key_store\");\nObject.defineProperty(exports, \"BrowserLocalStorageKeyStore\", { enumerable: true, get: function () { return browser_local_storage_key_store_1.BrowserLocalStorageKeyStore; } });\nconst merge_key_store_1 = require(\"./merge_key_store\");\nObject.defineProperty(exports, \"MergeKeyStore\", { enumerable: true, get: function () { return merge_key_store_1.MergeKeyStore; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyStore = void 0;\n/**\n * KeyStores are passed to {@link Near} via {@link NearConfig}\n * and are used by the {@link InMemorySigner} to sign transactions.\n *\n * @example {@link connect}\n */\nclass KeyStore {\n}\nexports.KeyStore = KeyStore;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemoryKeyStore = void 0;\nconst keystore_1 = require(\"./keystore\");\nconst key_pair_1 = require(\"../utils/key_pair\");\n/**\n * Simple in-memory keystore for mainly for testing purposes.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store}\n * @example\n * ```js\n * import { connect, keyStores, utils } from 'near-api-js';\n *\n * const privateKey = '.......';\n * const keyPair = utils.KeyPair.fromString(privateKey);\n *\n * const keyStore = new keyStores.InMemoryKeyStore();\n * keyStore.setKey('testnet', 'example-account.testnet', keyPair);\n *\n * const config = {\n *   keyStore, // instance of InMemoryKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass InMemoryKeyStore extends keystore_1.KeyStore {\n    constructor() {\n        super();\n        this.keys = {};\n    }\n    /**\n     * Stores a {@KeyPair} in in-memory storage item\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair) {\n        this.keys[`${accountId}:${networkId}`] = keyPair.toString();\n    }\n    /**\n     * Gets a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId) {\n        const value = this.keys[`${accountId}:${networkId}`];\n        if (!value) {\n            return null;\n        }\n        return key_pair_1.KeyPair.fromString(value);\n    }\n    /**\n     * Removes a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    async removeKey(networkId, accountId) {\n        delete this.keys[`${accountId}:${networkId}`];\n    }\n    /**\n     * Removes all {@link KeyPairs} from in-memory storage\n     */\n    async clear() {\n        this.keys = {};\n    }\n    /**\n     * Get the network(s) from in-memory storage\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        Object.keys(this.keys).forEach((key) => {\n            const parts = key.split(':');\n            result.add(parts[1]);\n        });\n        return Array.from(result.values());\n    }\n    /**\n     * Gets the account(s) from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    async getAccounts(networkId) {\n        const result = new Array();\n        Object.keys(this.keys).forEach((key) => {\n            const parts = key.split(':');\n            if (parts[parts.length - 1] === networkId) {\n                result.push(parts.slice(0, parts.length - 1).join(':'));\n            }\n        });\n        return result;\n    }\n    /** @hidden */\n    toString() {\n        return 'InMemoryKeyStore';\n    }\n}\nexports.InMemoryKeyStore = InMemoryKeyStore;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyPairEd25519 = exports.KeyPair = exports.PublicKey = exports.KeyType = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst serialize_1 = require(\"./serialize\");\nconst enums_1 = require(\"./enums\");\n/** All supported key types */\nvar KeyType;\n(function (KeyType) {\n    KeyType[KeyType[\"ED25519\"] = 0] = \"ED25519\";\n})(KeyType = exports.KeyType || (exports.KeyType = {}));\nfunction key_type_to_str(keyType) {\n    switch (keyType) {\n        case KeyType.ED25519: return 'ed25519';\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nfunction str_to_key_type(keyType) {\n    switch (keyType.toLowerCase()) {\n        case 'ed25519': return KeyType.ED25519;\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\n/**\n * PublicKey representation that has type and bytes of the key.\n */\nclass PublicKey extends enums_1.Assignable {\n    static from(value) {\n        if (typeof value === 'string') {\n            return PublicKey.fromString(value);\n        }\n        return value;\n    }\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 1) {\n            return new PublicKey({ keyType: KeyType.ED25519, data: serialize_1.base_decode(parts[0]) });\n        }\n        else if (parts.length === 2) {\n            return new PublicKey({ keyType: str_to_key_type(parts[0]), data: serialize_1.base_decode(parts[1]) });\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n    toString() {\n        return `${key_type_to_str(this.keyType)}:${serialize_1.base_encode(this.data)}`;\n    }\n    verify(message, signature) {\n        switch (this.keyType) {\n            case KeyType.ED25519: return tweetnacl_1.default.sign.detached.verify(message, signature, this.data);\n            default: throw new Error(`Unknown key type ${this.keyType}`);\n        }\n    }\n}\nexports.PublicKey = PublicKey;\nclass KeyPair {\n    /**\n     * @param curve Name of elliptical curve, case-insensitive\n     * @returns Random KeyPair based on the curve\n     */\n    static fromRandom(curve) {\n        switch (curve.toUpperCase()) {\n            case 'ED25519': return KeyPairEd25519.fromRandom();\n            default: throw new Error(`Unknown curve ${curve}`);\n        }\n    }\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 1) {\n            return new KeyPairEd25519(parts[0]);\n        }\n        else if (parts.length === 2) {\n            switch (parts[0].toUpperCase()) {\n                case 'ED25519': return new KeyPairEd25519(parts[1]);\n                default: throw new Error(`Unknown curve: ${parts[0]}`);\n            }\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n}\nexports.KeyPair = KeyPair;\n/**\n * This class provides key pair functionality for Ed25519 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n */\nclass KeyPairEd25519 extends KeyPair {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param {string} secretKey\n     */\n    constructor(secretKey) {\n        super();\n        const keyPair = tweetnacl_1.default.sign.keyPair.fromSecretKey(serialize_1.base_decode(secretKey));\n        this.publicKey = new PublicKey({ keyType: KeyType.ED25519, data: keyPair.publicKey });\n        this.secretKey = secretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        const newKeyPair = tweetnacl_1.default.sign.keyPair();\n        return new KeyPairEd25519(serialize_1.base_encode(newKeyPair.secretKey));\n    }\n    sign(message) {\n        const signature = tweetnacl_1.default.sign.detached(message, serialize_1.base_decode(this.secretKey));\n        return { signature, publicKey: this.publicKey };\n    }\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    toString() {\n        return `ed25519:${this.secretKey}`;\n    }\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairEd25519 = KeyPairEd25519;\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","\"use strict\";","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar borsh_1 = require(\"borsh\");\nObject.defineProperty(exports, \"base_encode\", { enumerable: true, get: function () { return borsh_1.baseEncode; } });\nObject.defineProperty(exports, \"base_decode\", { enumerable: true, get: function () { return borsh_1.baseDecode; } });\nObject.defineProperty(exports, \"serialize\", { enumerable: true, get: function () { return borsh_1.serialize; } });\nObject.defineProperty(exports, \"deserialize\", { enumerable: true, get: function () { return borsh_1.deserialize; } });\nObject.defineProperty(exports, \"BorshError\", { enumerable: true, get: function () { return borsh_1.BorshError; } });\nObject.defineProperty(exports, \"BinaryWriter\", { enumerable: true, get: function () { return borsh_1.BinaryWriter; } });\nObject.defineProperty(exports, \"BinaryReader\", { enumerable: true, get: function () { return borsh_1.BinaryReader; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst TextDecoder = (typeof global.TextDecoder !== 'function') ? encoding.TextDecoder : global.TextDecoder;\nconst textDecoder = new TextDecoder('utf-8', { fatal: true });\nfunction baseEncode(value) {\n    if (typeof (value) === 'string') {\n        value = Buffer.from(value, 'utf8');\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + ': ' + this.fieldPath.join('.');\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([Buffer.from(this.buf.subarray(0, this.length)), buffer, Buffer.alloc(INITIAL_LENGTH)]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, 'utf8');\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if (['ERR_BUFFER_OUT_OF_BOUNDS', 'ERR_OUT_OF_RANGE'].indexOf(code) >= 0) {\n                    throw new BorshError('Reached the end of buffer when deserializing');\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readBuffer(len) {\n        if ((this.offset + len) > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === 'string') {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === 'number') {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => { serializeField(schema, fieldName, item, fieldType[0], writer); });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case 'option': {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                default: throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === 'function') {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === 'enum') {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === 'string') {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === 'number') {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === 'option') {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === 'function') {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === 'enum') {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Assignable = exports.Enum = void 0;\n/** @hidden @module */\nclass Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n            this.enum = key;\n        });\n    }\n}\nexports.Enum = Enum;\nclass Assignable {\n    constructor(properties) {\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\nexports.Assignable = Assignable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserLocalStorageKeyStore = void 0;\nconst keystore_1 = require(\"./keystore\");\nconst key_pair_1 = require(\"../utils/key_pair\");\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\n/**\n * This class is used to store keys in the browsers local storage.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store}\n * @example\n * ```js\n * import { connect, keyStores } from 'near-api-js';\n *\n * const keyStore = new keyStores.BrowserLocalStorageKeyStore();\n * const config = {\n *   keyStore, // instance of BrowserLocalStorageKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass BrowserLocalStorageKeyStore extends keystore_1.KeyStore {\n    /**\n     * @param localStorage defaults to window.localStorage\n     * @param prefix defaults to `near-api-js:keystore:`\n     */\n    constructor(localStorage = window.localStorage, prefix = LOCAL_STORAGE_KEY_PREFIX) {\n        super();\n        this.localStorage = localStorage;\n        this.prefix = prefix;\n    }\n    /**\n     * Stores a {@link KeyPair} in local storage.\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair) {\n        this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId), keyPair.toString());\n    }\n    /**\n     * Gets a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId) {\n        const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId));\n        if (!value) {\n            return null;\n        }\n        return key_pair_1.KeyPair.fromString(value);\n    }\n    /**\n     * Removes a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    async removeKey(networkId, accountId) {\n        this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId));\n    }\n    /**\n     * Removes all items that start with `prefix` from local storage\n     */\n    async clear() {\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                this.localStorage.removeItem(key);\n            }\n        }\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                result.add(parts[1]);\n            }\n        }\n        return Array.from(result.values());\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    async getAccounts(networkId) {\n        const result = new Array();\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                if (parts[1] === networkId) {\n                    result.push(parts[0]);\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * @hidden\n     * Helper function to retrieve a local storage key\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the storage keythat's sought\n     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n     */\n    storageKeyForSecretKey(networkId, accountId) {\n        return `${this.prefix}${accountId}:${networkId}`;\n    }\n    /** @hidden */\n    *storageKeys() {\n        for (let i = 0; i < this.localStorage.length; i++) {\n            yield this.localStorage.key(i);\n        }\n    }\n}\nexports.BrowserLocalStorageKeyStore = BrowserLocalStorageKeyStore;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MergeKeyStore = void 0;\nconst keystore_1 = require(\"./keystore\");\nclass MergeKeyStore extends keystore_1.KeyStore {\n    /**\n     * @param keyStores read calls are attempted from start to end of array\n     * @param options.writeKeyStoreIndex the keystore index that will receive all write calls\n     */\n    constructor(keyStores, options = { writeKeyStoreIndex: 0 }) {\n        super();\n        this.options = options;\n        this.keyStores = keyStores;\n    }\n    /**\n     * Store a {@link KeyPain} to the first index of a key store array\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair) {\n        await this.keyStores[this.options.writeKeyStoreIndex].setKey(networkId, accountId, keyPair);\n    }\n    /**\n     * Gets a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId) {\n        for (const keyStore of this.keyStores) {\n            const keyPair = await keyStore.getKey(networkId, accountId);\n            if (keyPair) {\n                return keyPair;\n            }\n        }\n        return null;\n    }\n    /**\n     * Removes a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    async removeKey(networkId, accountId) {\n        for (const keyStore of this.keyStores) {\n            await keyStore.removeKey(networkId, accountId);\n        }\n    }\n    /**\n     * Removes all items from each key store\n     */\n    async clear() {\n        for (const keyStore of this.keyStores) {\n            await keyStore.clear();\n        }\n    }\n    /**\n     * Get the network(s) from the array of key stores\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        for (const keyStore of this.keyStores) {\n            for (const network of await keyStore.getNetworks()) {\n                result.add(network);\n            }\n        }\n        return Array.from(result);\n    }\n    /**\n     * Gets the account(s) from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    async getAccounts(networkId) {\n        const result = new Set();\n        for (const keyStore of this.keyStores) {\n            for (const account of await keyStore.getAccounts(networkId)) {\n                result.add(account);\n            }\n        }\n        return Array.from(result);\n    }\n    /** @hidden */\n    toString() {\n        return `MergeKeyStore(${this.keyStores.join(', ')})`;\n    }\n}\nexports.MergeKeyStore = MergeKeyStore;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnection = exports.WalletAccount = exports.ConnectedWalletAccount = exports.Near = exports.KeyPair = exports.Signer = exports.InMemorySigner = exports.Contract = exports.Connection = exports.Account = exports.multisig = exports.validators = exports.transactions = exports.utils = exports.providers = exports.accountCreator = void 0;\n/** @hidden @module */\nconst providers = __importStar(require(\"./providers\"));\nexports.providers = providers;\nconst utils = __importStar(require(\"./utils\"));\nexports.utils = utils;\nconst transactions = __importStar(require(\"./transaction\"));\nexports.transactions = transactions;\nconst validators = __importStar(require(\"./validators\"));\nexports.validators = validators;\nconst account_1 = require(\"./account\");\nObject.defineProperty(exports, \"Account\", { enumerable: true, get: function () { return account_1.Account; } });\nconst multisig = __importStar(require(\"./account_multisig\"));\nexports.multisig = multisig;\nconst accountCreator = __importStar(require(\"./account_creator\"));\nexports.accountCreator = accountCreator;\nconst connection_1 = require(\"./connection\");\nObject.defineProperty(exports, \"Connection\", { enumerable: true, get: function () { return connection_1.Connection; } });\nconst signer_1 = require(\"./signer\");\nObject.defineProperty(exports, \"Signer\", { enumerable: true, get: function () { return signer_1.Signer; } });\nObject.defineProperty(exports, \"InMemorySigner\", { enumerable: true, get: function () { return signer_1.InMemorySigner; } });\nconst contract_1 = require(\"./contract\");\nObject.defineProperty(exports, \"Contract\", { enumerable: true, get: function () { return contract_1.Contract; } });\nconst key_pair_1 = require(\"./utils/key_pair\");\nObject.defineProperty(exports, \"KeyPair\", { enumerable: true, get: function () { return key_pair_1.KeyPair; } });\nconst near_1 = require(\"./near\");\nObject.defineProperty(exports, \"Near\", { enumerable: true, get: function () { return near_1.Near; } });\n// TODO: Deprecate and remove WalletAccount\nconst wallet_account_1 = require(\"./wallet-account\");\nObject.defineProperty(exports, \"ConnectedWalletAccount\", { enumerable: true, get: function () { return wallet_account_1.ConnectedWalletAccount; } });\nObject.defineProperty(exports, \"WalletAccount\", { enumerable: true, get: function () { return wallet_account_1.WalletAccount; } });\nObject.defineProperty(exports, \"WalletConnection\", { enumerable: true, get: function () { return wallet_account_1.WalletConnection; } });\n","\"use strict\";\n/** @hidden @module */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorContext = exports.TypedError = exports.getTransactionLastResult = exports.FinalExecutionStatusBasic = exports.JsonRpcProvider = exports.Provider = void 0;\nconst provider_1 = require(\"./provider\");\nObject.defineProperty(exports, \"Provider\", { enumerable: true, get: function () { return provider_1.Provider; } });\nObject.defineProperty(exports, \"getTransactionLastResult\", { enumerable: true, get: function () { return provider_1.getTransactionLastResult; } });\nObject.defineProperty(exports, \"FinalExecutionStatusBasic\", { enumerable: true, get: function () { return provider_1.FinalExecutionStatusBasic; } });\nconst json_rpc_provider_1 = require(\"./json-rpc-provider\");\nObject.defineProperty(exports, \"JsonRpcProvider\", { enumerable: true, get: function () { return json_rpc_provider_1.JsonRpcProvider; } });\nObject.defineProperty(exports, \"TypedError\", { enumerable: true, get: function () { return json_rpc_provider_1.TypedError; } });\nObject.defineProperty(exports, \"ErrorContext\", { enumerable: true, get: function () { return json_rpc_provider_1.ErrorContext; } });\n","\"use strict\";\n/**\n * NEAR RPC API request types and responses\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTransactionLastResult = exports.Provider = exports.IdType = exports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = void 0;\nvar ExecutionStatusBasic;\n(function (ExecutionStatusBasic) {\n    ExecutionStatusBasic[\"Unknown\"] = \"Unknown\";\n    ExecutionStatusBasic[\"Pending\"] = \"Pending\";\n    ExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(ExecutionStatusBasic = exports.ExecutionStatusBasic || (exports.ExecutionStatusBasic = {}));\nvar FinalExecutionStatusBasic;\n(function (FinalExecutionStatusBasic) {\n    FinalExecutionStatusBasic[\"NotStarted\"] = \"NotStarted\";\n    FinalExecutionStatusBasic[\"Started\"] = \"Started\";\n    FinalExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(FinalExecutionStatusBasic = exports.FinalExecutionStatusBasic || (exports.FinalExecutionStatusBasic = {}));\nvar IdType;\n(function (IdType) {\n    IdType[\"Transaction\"] = \"transaction\";\n    IdType[\"Receipt\"] = \"receipt\";\n})(IdType = exports.IdType || (exports.IdType = {}));\n/** @hidden */\nclass Provider {\n}\nexports.Provider = Provider;\n/** @hidden */\nfunction getTransactionLastResult(txResult) {\n    if (typeof txResult.status === 'object' && typeof txResult.status.SuccessValue === 'string') {\n        const value = Buffer.from(txResult.status.SuccessValue, 'base64').toString();\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) {\n            return value;\n        }\n    }\n    return null;\n}\nexports.getTransactionLastResult = getTransactionLastResult;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = exports.ErrorContext = exports.TypedError = void 0;\n/**\n * This module contains the {@link JsonRpcProvider} client class\n * which can be used to interact with the NEAR RPC API.\n * @see {@link providers/provider} for a list of request and response types\n */\nconst depd_1 = __importDefault(require(\"depd\"));\nconst provider_1 = require(\"./provider\");\nconst web_1 = require(\"../utils/web\");\nconst errors_1 = require(\"../utils/errors\");\nObject.defineProperty(exports, \"TypedError\", { enumerable: true, get: function () { return errors_1.TypedError; } });\nObject.defineProperty(exports, \"ErrorContext\", { enumerable: true, get: function () { return errors_1.ErrorContext; } });\nconst borsh_1 = require(\"borsh\");\nconst exponential_backoff_1 = __importDefault(require(\"../utils/exponential-backoff\"));\nconst rpc_errors_1 = require(\"../utils/rpc_errors\");\n// Default number of retries before giving up on a request.\nconst REQUEST_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst REQUEST_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst REQUEST_RETRY_WAIT_BACKOFF = 1.5;\n/// Keep ids unique across all connections.\nlet _nextId = 123;\n/**\n * Client class to interact with the NEAR RPC API.\n * @see {@link https://github.com/near/nearcore/tree/master/chain/jsonrpc}\n */\nclass JsonRpcProvider extends provider_1.Provider {\n    /**\n     * @param connectionInfoOrUrl ConnectionInfo or RPC API endpoint URL (deprecated)\n     */\n    constructor(connectionInfoOrUrl) {\n        super();\n        if (connectionInfoOrUrl != null && typeof connectionInfoOrUrl == 'object') {\n            this.connection = connectionInfoOrUrl;\n        }\n        else {\n            const deprecate = depd_1.default('JsonRpcProvider(url?: string)');\n            deprecate('use `JsonRpcProvider(connectionInfo: ConnectionInfo)` instead');\n            this.connection = { url: connectionInfoOrUrl };\n        }\n    }\n    /**\n     * Gets the RPC's status\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#general-validator-status}\n     */\n    async status() {\n        return this.sendJsonRpc('status', []);\n    }\n    /**\n     * Sends a signed transaction to the RPC and waits until transaction is fully complete\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#send-transaction-await}\n     *\n     * @param signedTransaction The signed transaction being sent\n     */\n    async sendTransaction(signedTransaction) {\n        const bytes = signedTransaction.encode();\n        return this.sendJsonRpc('broadcast_tx_commit', [Buffer.from(bytes).toString('base64')]);\n    }\n    /**\n     * Sends a signed transaction to the RPC and immediately returns transaction hash\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#send-transaction-async)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async sendTransactionAsync(signedTransaction) {\n        const bytes = signedTransaction.encode();\n        return this.sendJsonRpc('broadcast_tx_async', [Buffer.from(bytes).toString('base64')]);\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#transaction-status}\n     *\n     * @param txHash A transaction hash as either a Uint8Array or a base58 encoded string\n     * @param accountId The NEAR account that signed the transaction\n     */\n    async txStatus(txHash, accountId) {\n        if (typeof txHash === 'string') {\n            return this.txStatusString(txHash, accountId);\n        }\n        else {\n            return this.txStatusUint8Array(txHash, accountId);\n        }\n    }\n    async txStatusUint8Array(txHash, accountId) {\n        return this.sendJsonRpc('tx', [borsh_1.baseEncode(txHash), accountId]);\n    }\n    async txStatusString(txHash, accountId) {\n        return this.sendJsonRpc('tx', [txHash, accountId]);\n    }\n    /**\n     * Gets a transaction's status from the RPC with receipts\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#transaction-status-with-receipts)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async txStatusReceipts(txHash, accountId) {\n        return this.sendJsonRpc('EXPERIMENTAL_tx_status', [borsh_1.baseEncode(txHash), accountId]);\n    }\n    /**\n     * Query the RPC as [shown in the docs](https://docs.near.org/docs/develop/front-end/rpc#accounts--contracts)\n     * Query the RPC by passing an {@link RpcQueryRequest}\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#accounts--contracts}\n     *\n     * @typeParam T the shape of the returned query response\n     */\n    async query(...args) {\n        let result;\n        if (args.length === 1) {\n            result = await this.sendJsonRpc('query', args[0]);\n        }\n        else {\n            const [path, data] = args;\n            result = await this.sendJsonRpc('query', [path, data]);\n        }\n        if (result && result.error) {\n            throw new errors_1.TypedError(`Querying ${args} failed: ${result.error}.\\n${JSON.stringify(result, null, 2)}`, rpc_errors_1.getErrorTypeFromErrorMessage(result.error));\n        }\n        return result;\n    }\n    /**\n     * Query for block info from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see {@link https://docs.near.org/docs/interaction/rpc#block}\n     *\n     * @param blockQuery {@link BlockReference} (passing a {@link BlockId} is deprecated)\n     */\n    async block(blockQuery) {\n        const { finality } = blockQuery;\n        let { blockId } = blockQuery;\n        if (typeof blockQuery !== 'object') {\n            const deprecate = depd_1.default('JsonRpcProvider.block(blockId)');\n            deprecate('use `block({ blockId })` or `block({ finality })` instead');\n            blockId = blockQuery;\n        }\n        return this.sendJsonRpc('block', { block_id: blockId, finality });\n    }\n    /**\n     * Query changes in block from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#block-details)\n     */\n    async blockChanges(blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes_in_block', { block_id: blockId, finality });\n    }\n    /**\n     * Queries for details about a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * @see {@link https://docs.near.org/docs/interaction/rpc#chunk}\n     *\n     * @param chunkId Hash of a chunk ID or shard ID\n     */\n    async chunk(chunkId) {\n        return this.sendJsonRpc('chunk', [chunkId]);\n    }\n    /**\n     * Query validators of the epoch defined by the given block id.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#detailed-validator-status}\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async validators(blockId) {\n        return this.sendJsonRpc('validators', [blockId]);\n    }\n    /**\n     * @deprecated\n     * Gets the genesis config from RPC\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#genesis-config}\n     */\n    async experimental_genesisConfig() {\n        const deprecate = depd_1.default('JsonRpcProvider.experimental_protocolConfig()');\n        deprecate('use `experimental_protocolConfig({ sync_checkpoint: \\'genesis\\' })` to fetch the up-to-date or genesis protocol config explicitly');\n        return await this.sendJsonRpc('EXPERIMENTAL_protocol_config', { sync_checkpoint: 'genesis' });\n    }\n    /**\n     * Gets the protocol config at a block from RPC\n     * @see {@link }\n     *\n     * @param blockReference specifies the block to get the protocol config for\n     */\n    async experimental_protocolConfig(blockReference) {\n        return await this.sendJsonRpc('EXPERIMENTAL_protocol_config', blockReference);\n    }\n    /**\n     * @deprecated Use {@link lightClientProof} instead\n     */\n    async experimental_lightClientProof(request) {\n        const deprecate = depd_1.default('JsonRpcProvider.experimental_lightClientProof(request)');\n        deprecate('use `lightClientProof` instead');\n        return await this.lightClientProof(request);\n    }\n    /**\n     * Gets a light client execution proof for verifying execution outcomes\n     * @see {@link https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof}\n     */\n    async lightClientProof(request) {\n        return await this.sendJsonRpc('EXPERIMENTAL_light_client_proof', request);\n    }\n    /**\n     * Gets access key changes for a given array of accountIds\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-all)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accessKeyChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'all_access_key_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets single access key changes for a given array of access keys\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-single)\n     * @returns {Promise<ChangeResult>}\n     */\n    async singleAccessKeyChanges(accessKeyArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'single_access_key_changes',\n            keys: accessKeyArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets account changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-account-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accountChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'account_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets contract state changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: If you pass a keyPrefix it must be base64 encoded\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-state-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractStateChanges(accountIdArray, blockQuery, keyPrefix = '') {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'data_changes',\n            account_ids: accountIdArray,\n            key_prefix_base64: keyPrefix,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets contract code changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: Change is returned in a base64 encoded WASM file\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-code-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractCodeChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'contract_code_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Returns gas price for a specific block_height or block_hash.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#gas-price}\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async gasPrice(blockId) {\n        return await this.sendJsonRpc('gas_price', [blockId]);\n    }\n    /**\n     * Directly call the RPC specifying the method and params\n     *\n     * @param method RPC method\n     * @param params Parameters to the method\n     */\n    async sendJsonRpc(method, params) {\n        const response = await exponential_backoff_1.default(REQUEST_RETRY_WAIT, REQUEST_RETRY_NUMBER, REQUEST_RETRY_WAIT_BACKOFF, async () => {\n            try {\n                const request = {\n                    method,\n                    params,\n                    id: (_nextId++),\n                    jsonrpc: '2.0'\n                };\n                const response = await web_1.fetchJson(this.connection, JSON.stringify(request));\n                if (response.error) {\n                    if (typeof response.error.data === 'object') {\n                        if (typeof response.error.data.error_message === 'string' && typeof response.error.data.error_type === 'string') {\n                            // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                            throw new errors_1.TypedError(response.error.data.error_message, response.error.data.error_type);\n                        }\n                        throw rpc_errors_1.parseRpcError(response.error.data);\n                    }\n                    else {\n                        const errorMessage = `[${response.error.code}] ${response.error.message}: ${response.error.data}`;\n                        // NOTE: All this hackery is happening because structured errors not implemented\n                        // TODO: Fix when https://github.com/nearprotocol/nearcore/issues/1839 gets resolved\n                        if (response.error.data === 'Timeout' || errorMessage.includes('Timeout error')\n                            || errorMessage.includes('query has timed out')) {\n                            throw new errors_1.TypedError(errorMessage, 'TimeoutError');\n                        }\n                        throw new errors_1.TypedError(errorMessage, rpc_errors_1.getErrorTypeFromErrorMessage(response.error.data));\n                    }\n                }\n                // Success when response.error is not exist\n                return response;\n            }\n            catch (error) {\n                if (error.type === 'TimeoutError') {\n                    if (!process.env['NEAR_NO_LOGS']) {\n                        console.warn(`Retrying request to ${method} as it has timed out`, params);\n                    }\n                    return null;\n                }\n                throw error;\n            }\n        });\n        const { result } = response;\n        // From jsonrpc spec:\n        // result\n        //   This member is REQUIRED on success.\n        //   This member MUST NOT exist if there was an error invoking the method.\n        if (typeof result === 'undefined') {\n            throw new errors_1.TypedError(`Exceeded ${REQUEST_RETRY_NUMBER} attempts for request to ${method}.`, 'RetriesExceeded');\n        }\n        return result;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","/*!\n * depd\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = depd\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  function deprecate (message) {\n    // no-op in browser\n  }\n\n  deprecate._file = undefined\n  deprecate._ignored = true\n  deprecate._namespace = namespace\n  deprecate._traced = false\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  return fn\n}\n\n/**\n * Wrap property in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchJson = void 0;\nconst http_errors_1 = __importDefault(require(\"http-errors\"));\nconst exponential_backoff_1 = __importDefault(require(\"./exponential-backoff\"));\nconst providers_1 = require(\"../providers\");\nconst errors_1 = require(\"./errors\");\nconst START_WAIT_TIME_MS = 1000;\nconst BACKOFF_MULTIPLIER = 1.5;\nconst RETRY_NUMBER = 10;\nasync function fetchJson(connectionInfoOrUrl, json) {\n    let connectionInfo = { url: null };\n    if (typeof (connectionInfoOrUrl) === 'string') {\n        connectionInfo.url = connectionInfoOrUrl;\n    }\n    else {\n        connectionInfo = connectionInfoOrUrl;\n    }\n    const response = await exponential_backoff_1.default(START_WAIT_TIME_MS, RETRY_NUMBER, BACKOFF_MULTIPLIER, async () => {\n        try {\n            const response = await fetch(connectionInfo.url, {\n                method: json ? 'POST' : 'GET',\n                body: json ? json : undefined,\n                headers: { ...connectionInfo.headers, 'Content-Type': 'application/json' }\n            });\n            if (!response.ok) {\n                if (response.status === 503) {\n                    errors_1.logWarning(`Retrying HTTP request for ${connectionInfo.url} as it's not available now`);\n                    return null;\n                }\n                throw http_errors_1.default(response.status, await response.text());\n            }\n            return response;\n        }\n        catch (error) {\n            if (error.toString().includes('FetchError') || error.toString().includes('Failed to fetch')) {\n                errors_1.logWarning(`Retrying HTTP request for ${connectionInfo.url} because of error: ${error}`);\n                return null;\n            }\n            throw error;\n        }\n    });\n    if (!response) {\n        throw new providers_1.TypedError(`Exceeded ${RETRY_NUMBER} attempts for ${connectionInfo.url}.`, 'RetriesExceeded');\n    }\n    return await response.json();\n}\nexports.fetchJson = fetchJson;\n","/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\nvar toIdentifier = require('toidentifier')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\nmodule.exports.isHttpError = createIsHttpErrorFunction(module.exports.HttpError)\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n      continue\n    }\n    switch (typeof arg) {\n      case 'string':\n        msg = arg\n        break\n      case 'number':\n        status = arg\n        if (i !== 0) {\n          deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)')\n        }\n        break\n      case 'object':\n        props = arg\n        break\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n  nameFunc(ClientError, className)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create function to test is a value is a HttpError.\n * @private\n */\n\nfunction createIsHttpErrorFunction (HttpError) {\n  return function isHttpError (val) {\n    if (!val || typeof val !== 'object') {\n      return false\n    }\n\n    if (val instanceof HttpError) {\n      return true\n    }\n\n    return val instanceof Error &&\n      typeof val.expose === 'boolean' &&\n      typeof val.statusCode === 'number' && val.status === val.statusCode\n  }\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n  nameFunc(ServerError, className)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Set the name of a function, if possible.\n * @private\n */\n\nfunction nameFunc (func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name')\n\n  if (desc && desc.configurable) {\n    desc.value = name\n    Object.defineProperty(func, 'name', desc)\n  }\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n\n  // backwards-compatibility\n  exports[\"I'mateapot\"] = deprecate.function(exports.ImATeapot,\n    '\"I\\'mateapot\"; use \"ImATeapot\" instead')\n}\n\n/**\n * Get a class name from a name identifier.\n * @private\n */\n\nfunction toClassName (name) {\n  return name.substr(-5) !== 'Error'\n    ? name + 'Error'\n    : name\n}\n","/*!\n * depd\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = depd\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  function deprecate (message) {\n    // no-op in browser\n  }\n\n  deprecate._file = undefined\n  deprecate._ignored = true\n  deprecate._namespace = namespace\n  deprecate._traced = false\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  return fn\n}\n\n/**\n * Wrap property in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n}\n","'use strict'\n/* eslint no-proto: 0 */\nmodule.exports = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties)\n\nfunction setProtoOf (obj, proto) {\n  obj.__proto__ = proto\n  return obj\n}\n\nfunction mixinProperties (obj, proto) {\n  for (var prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      obj[prop] = proto[prop]\n    }\n  }\n  return obj\n}\n","/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.STATUS_CODES = codes\n\n// array of status codes\nstatus.codes = populateStatusesMap(status, codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Populate the statuses map for given codes.\n * @private\n */\n\nfunction populateStatusesMap (statuses, codes) {\n  var arr = []\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // Populate properties\n    statuses[status] = message\n    statuses[message] = status\n    statuses[message.toLowerCase()] = status\n\n    // Add to array\n    arr.push(status)\n  })\n\n  return arr\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    if (!status[code]) throw new Error('invalid status code: ' + code)\n    return code\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n)\n    return n\n  }\n\n  n = status[code.toLowerCase()]\n  if (!n) throw new Error('invalid status message: \"' + code + '\"')\n  return n\n}\n","{\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"103\": \"Early Hints\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"306\": \"(Unused)\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/*!\n * toidentifier\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = toIdentifier\n\n/**\n * Trasform the given string into a JavaScript identifier\n *\n * @param {string} str\n * @returns {string}\n * @public\n */\n\nfunction toIdentifier (str) {\n  return str\n    .split(' ')\n    .map(function (token) {\n      return token.slice(0, 1).toUpperCase() + token.slice(1)\n    })\n    .join('')\n    .replace(/[^ _0-9a-z]/gi, '')\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nasync function exponentialBackoff(startWaitTime, retryNumber, waitBackoff, getResult) {\n    // TODO: jitter?\n    let waitTime = startWaitTime;\n    for (let i = 0; i < retryNumber; i++) {\n        const result = await getResult();\n        if (result) {\n            return result;\n        }\n        await sleep(waitTime);\n        waitTime *= waitBackoff;\n    }\n    return null;\n}\nexports.default = exponentialBackoff;\n// Sleep given number of millis.\nfunction sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logWarning = exports.ErrorContext = exports.TypedError = exports.ArgumentTypeError = exports.PositionalArgsError = void 0;\nclass PositionalArgsError extends Error {\n    constructor() {\n        super('Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }');\n    }\n}\nexports.PositionalArgsError = PositionalArgsError;\nclass ArgumentTypeError extends Error {\n    constructor(argName, argType, argValue) {\n        super(`Expected ${argType} for '${argName}' argument, but got '${JSON.stringify(argValue)}'`);\n    }\n}\nexports.ArgumentTypeError = ArgumentTypeError;\nclass TypedError extends Error {\n    constructor(message, type, context) {\n        super(message);\n        this.type = type || 'UntypedError';\n        this.context = context;\n    }\n}\nexports.TypedError = TypedError;\nclass ErrorContext {\n    constructor(transactionHash) {\n        this.transactionHash = transactionHash;\n    }\n}\nexports.ErrorContext = ErrorContext;\nfunction logWarning(...args) {\n    if (!process.env['NEAR_NO_LOGS']) {\n        console.warn(...args);\n    }\n}\nexports.logWarning = logWarning;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorTypeFromErrorMessage = exports.formatError = exports.parseResultError = exports.parseRpcError = exports.ServerError = void 0;\nconst mustache_1 = __importDefault(require(\"mustache\"));\nconst rpc_error_schema_json_1 = __importDefault(require(\"../generated/rpc_error_schema.json\"));\nconst error_messages_json_1 = __importDefault(require(\"../res/error_messages.json\"));\nconst common_index_1 = require(\"../common-index\");\nconst errors_1 = require(\"../utils/errors\");\nconst mustacheHelpers = {\n    formatNear: () => (n, render) => common_index_1.utils.format.formatNearAmount(render(n))\n};\nclass ServerError extends errors_1.TypedError {\n}\nexports.ServerError = ServerError;\nclass ServerTransactionError extends ServerError {\n}\nfunction parseRpcError(errorObj) {\n    const result = {};\n    const errorClassName = walkSubtype(errorObj, rpc_error_schema_json_1.default.schema, result, '');\n    // NOTE: This assumes that all errors extend TypedError\n    const error = new ServerError(formatError(errorClassName, result), errorClassName);\n    Object.assign(error, result);\n    return error;\n}\nexports.parseRpcError = parseRpcError;\nfunction parseResultError(result) {\n    const server_error = parseRpcError(result.status.Failure);\n    const server_tx_error = new ServerTransactionError();\n    Object.assign(server_tx_error, server_error);\n    server_tx_error.type = server_error.type;\n    server_tx_error.message = server_error.message;\n    server_tx_error.transaction_outcome = result.transaction_outcome;\n    return server_tx_error;\n}\nexports.parseResultError = parseResultError;\nfunction formatError(errorClassName, errorData) {\n    if (typeof error_messages_json_1.default[errorClassName] === 'string') {\n        return mustache_1.default.render(error_messages_json_1.default[errorClassName], {\n            ...errorData,\n            ...mustacheHelpers\n        });\n    }\n    return JSON.stringify(errorData);\n}\nexports.formatError = formatError;\n/**\n * Walks through defined schema returning error(s) recursively\n * @param errorObj The error to be parsed\n * @param schema A defined schema in JSON mapping to the RPC errors\n * @param result An object used in recursion or called directly\n * @param typeName The human-readable error type name as defined in the JSON mapping\n */\nfunction walkSubtype(errorObj, schema, result, typeName) {\n    let error;\n    let type;\n    let errorTypeName;\n    for (const errorName in schema) {\n        if (isString(errorObj[errorName])) {\n            // Return early if error type is in a schema\n            return errorObj[errorName];\n        }\n        if (isObject(errorObj[errorName])) {\n            error = errorObj[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else if (isObject(errorObj.kind) && isObject(errorObj.kind[errorName])) {\n            error = errorObj.kind[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else {\n            continue;\n        }\n    }\n    if (error && type) {\n        for (const prop of Object.keys(type.props)) {\n            result[prop] = error[prop];\n        }\n        return walkSubtype(error, schema, result, errorTypeName);\n    }\n    else {\n        // TODO: is this the right thing to do?\n        result.kind = errorObj;\n        return typeName;\n    }\n}\nfunction getErrorTypeFromErrorMessage(errorMessage) {\n    // This function should be removed when JSON RPC starts returning typed errors.\n    switch (true) {\n        case /^account .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^Account .*? doesn't exist$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^access key .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccessKeyDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /Transaction nonce \\d+ must be larger than nonce of the used access key \\d+/.test(errorMessage):\n            return 'InvalidNonce';\n        default:\n            return 'UntypedError';\n    }\n}\nexports.getErrorTypeFromErrorMessage = getErrorTypeFromErrorMessage;\n/**\n * Helper function determining if the argument is an object\n * @param n Value to check\n */\nfunction isObject(n) {\n    return Object.prototype.toString.call(n) === '[object Object]';\n}\n/**\n * Helper function determining if the argument is a string\n * @param n Value to check\n */\nfunction isString(n) {\n    return Object.prototype.toString.call(n) === '[object String]';\n}\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Mustache = factory());\n}(this, (function () { 'use strict';\n\n  /*!\n   * mustache.js - Logic-less {{mustache}} templates with JavaScript\n   * http://github.com/janl/mustache.js\n   */\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  /**\n   * Safe way of detecting whether or not the given thing is a primitive and\n   * whether it has the given property\n   */\n  function primitiveHasOwnProperty (primitive, propName) {\n    return (\n      primitive != null\n      && typeof primitive !== 'object'\n      && primitive.hasOwnProperty\n      && primitive.hasOwnProperty(propName)\n    );\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   *\n   * Tokens for partials also contain two more elements: 1) a string value of\n   * indendation prior to that tag and 2) the index of that tag on that line -\n   * eg a value of 2 indicates the partial is the third tag on this line.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n    var lineHasNonSpace = false;\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n    var indentation = '';  // Tracks indentation for tags that use it\n    var tagIndex = 0;      // Stores a count of number of tags encountered on a line\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n            indentation += chr;\n          } else {\n            nonSpace = true;\n            lineHasNonSpace = true;\n            indentation += ' ';\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') {\n            stripSpace();\n            indentation = '';\n            tagIndex = 0;\n            lineHasNonSpace = false;\n          }\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      if (type == '>') {\n        token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\n      } else {\n        token = [ type, value, start, scanner.pos ];\n      }\n      tagIndex++;\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    stripSpace();\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, intermediateValue, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          intermediateValue = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           *\n           * In the case where dot notation is used, we consider the lookup\n           * to be successful even if the last \"object\" in the path is\n           * not actually an object but a primitive (e.g., a string, or an\n           * integer), because it is sometimes useful to access a property\n           * of an autoboxed primitive, such as the length of a string.\n           **/\n          while (intermediateValue != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = (\n                hasProperty(intermediateValue, names[index])\n                || primitiveHasOwnProperty(intermediateValue, names[index])\n              );\n\n            intermediateValue = intermediateValue[names[index++]];\n          }\n        } else {\n          intermediateValue = context.view[name];\n\n          /**\n           * Only checking against `hasProperty`, which always returns `false` if\n           * `context.view` is not an object. Deliberately omitting the check\n           * against `primitiveHasOwnProperty` if dot notation is not used.\n           *\n           * Consider this example:\n           * ```\n           * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n           * ```\n           *\n           * If we were to check also against `primitiveHasOwnProperty`, as we do\n           * in the dot notation case, then render call would return:\n           *\n           * \"The length of a football field is 9.\"\n           *\n           * rather than the expected:\n           *\n           * \"The length of a football field is 100 yards.\"\n           **/\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit) {\n          value = intermediateValue;\n          break;\n        }\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.templateCache = {\n      _cache: {},\n      set: function set (key, value) {\n        this._cache[key] = value;\n      },\n      get: function get (key) {\n        return this._cache[key];\n      },\n      clear: function clear () {\n        this._cache = {};\n      }\n    };\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    if (typeof this.templateCache !== 'undefined') {\n      this.templateCache.clear();\n    }\n  };\n\n  /**\n   * Parses and caches the given `template` according to the given `tags` or\n   * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.templateCache;\n    var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n    var isCacheEnabled = typeof cache !== 'undefined';\n    var tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;\n\n    if (tokens == undefined) {\n      tokens = parseTemplate(template, tags);\n      isCacheEnabled && cache.set(cacheKey, tokens);\n    }\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   *\n   * If the optional `config` argument is given here, then it should be an\n   * object with a `tags` attribute or an `escape` attribute or both.\n   * If an array is passed, then it will be interpreted the same way as\n   * a `tags` attribute on a `config` object.\n   *\n   * The `tags` attribute of a `config` object must be an array with two\n   * string values: the opening and closing tags used in the template (e.g.\n   * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   *\n   * The `escape` attribute of a `config` object must be a function which\n   * accepts a string as input and outputs a safely escaped string.\n   * If an `escape` function is not provided, then an HTML-safe string\n   * escaping function is used as the default.\n   */\n  Writer.prototype.render = function render (template, view, partials, config) {\n    var tags = this.getConfigTags(config);\n    var tokens = this.parse(template, tags);\n    var context = (view instanceof Context) ? view : new Context(view, undefined);\n    return this.renderTokens(tokens, context, partials, template, config);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, config) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate, config);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate, config);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, config);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context, config);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate, config) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials, config);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate, config);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate, config);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate, config);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate, config) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate, config);\n  };\n\n  Writer.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\n    var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n    var partialByNl = partial.split('\\n');\n    for (var i = 0; i < partialByNl.length; i++) {\n      if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n        partialByNl[i] = filteredIndentation + partialByNl[i];\n      }\n    }\n    return partialByNl.join('\\n');\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials, config) {\n    if (!partials) return;\n    var tags = this.getConfigTags(config);\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null) {\n      var lineHasNonSpace = token[6];\n      var tagIndex = token[5];\n      var indentation = token[4];\n      var indentedValue = value;\n      if (tagIndex == 0 && indentation) {\n        indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n      }\n      var tokens = this.parse(indentedValue, tags);\n      return this.renderTokens(tokens, context, partials, indentedValue, config);\n    }\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context, config) {\n    var escape = this.getConfigEscape(config) || mustache.escape;\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return (typeof value === 'number' && escape === mustache.escape) ? String(value) : escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  Writer.prototype.getConfigTags = function getConfigTags (config) {\n    if (isArray(config)) {\n      return config;\n    }\n    else if (config && typeof config === 'object') {\n      return config.tags;\n    }\n    else {\n      return undefined;\n    }\n  };\n\n  Writer.prototype.getConfigEscape = function getConfigEscape (config) {\n    if (config && typeof config === 'object' && !isArray(config)) {\n      return config.escape;\n    }\n    else {\n      return undefined;\n    }\n  };\n\n  var mustache = {\n    name: 'mustache.js',\n    version: '4.2.0',\n    tags: [ '{{', '}}' ],\n    clearCache: undefined,\n    escape: undefined,\n    parse: undefined,\n    render: undefined,\n    Scanner: undefined,\n    Context: undefined,\n    Writer: undefined,\n    /**\n     * Allows a user to override the default caching strategy, by providing an\n     * object with set, get and clear methods. This can also be used to disable\n     * the cache by setting it to the literal `undefined`.\n     */\n    set templateCache (cache) {\n      defaultWriter.templateCache = cache;\n    },\n    /**\n     * Gets the default or overridden caching object from the default writer.\n     */\n    get templateCache () {\n      return defaultWriter.templateCache;\n    }\n  };\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view`, `partials`, and `config`\n   * using the default writer.\n   */\n  mustache.render = function render (template, view, partials, config) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials, config);\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n\n})));\n","{\n    \"schema\": {\n        \"BadUTF16\": {\n            \"name\": \"BadUTF16\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"BadUTF8\": {\n            \"name\": \"BadUTF8\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"BalanceExceeded\": {\n            \"name\": \"BalanceExceeded\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"BreakpointTrap\": {\n            \"name\": \"BreakpointTrap\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"CacheError\": {\n            \"name\": \"CacheError\",\n            \"subtypes\": [\n                \"ReadError\",\n                \"WriteError\",\n                \"DeserializationError\",\n                \"SerializationError\"\n            ],\n            \"props\": {}\n        },\n        \"CallIndirectOOB\": {\n            \"name\": \"CallIndirectOOB\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"CannotAppendActionToJointPromise\": {\n            \"name\": \"CannotAppendActionToJointPromise\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"CannotReturnJointPromise\": {\n            \"name\": \"CannotReturnJointPromise\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"CodeDoesNotExist\": {\n            \"name\": \"CodeDoesNotExist\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"CompilationError\": {\n            \"name\": \"CompilationError\",\n            \"subtypes\": [\n                \"CodeDoesNotExist\",\n                \"PrepareError\",\n                \"WasmerCompileError\"\n            ],\n            \"props\": {}\n        },\n        \"ContractSizeExceeded\": {\n            \"name\": \"ContractSizeExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"limit\": \"\",\n                \"size\": \"\"\n            }\n        },\n        \"Deprecated\": {\n            \"name\": \"Deprecated\",\n            \"subtypes\": [],\n            \"props\": {\n                \"method_name\": \"\"\n            }\n        },\n        \"Deserialization\": {\n            \"name\": \"Deserialization\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"DeserializationError\": {\n            \"name\": \"DeserializationError\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"EmptyMethodName\": {\n            \"name\": \"EmptyMethodName\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"FunctionCallError\": {\n            \"name\": \"FunctionCallError\",\n            \"subtypes\": [\n                \"CompilationError\",\n                \"LinkError\",\n                \"MethodResolveError\",\n                \"WasmTrap\",\n                \"WasmUnknownError\",\n                \"HostError\",\n                \"EvmError\"\n            ],\n            \"props\": {}\n        },\n        \"GasExceeded\": {\n            \"name\": \"GasExceeded\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"GasInstrumentation\": {\n            \"name\": \"GasInstrumentation\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"GasLimitExceeded\": {\n            \"name\": \"GasLimitExceeded\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"GenericTrap\": {\n            \"name\": \"GenericTrap\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"GuestPanic\": {\n            \"name\": \"GuestPanic\",\n            \"subtypes\": [],\n            \"props\": {\n                \"panic_msg\": \"\"\n            }\n        },\n        \"HostError\": {\n            \"name\": \"HostError\",\n            \"subtypes\": [\n                \"BadUTF16\",\n                \"BadUTF8\",\n                \"GasExceeded\",\n                \"GasLimitExceeded\",\n                \"BalanceExceeded\",\n                \"EmptyMethodName\",\n                \"GuestPanic\",\n                \"IntegerOverflow\",\n                \"InvalidPromiseIndex\",\n                \"CannotAppendActionToJointPromise\",\n                \"CannotReturnJointPromise\",\n                \"InvalidPromiseResultIndex\",\n                \"InvalidRegisterId\",\n                \"IteratorWasInvalidated\",\n                \"MemoryAccessViolation\",\n                \"InvalidReceiptIndex\",\n                \"InvalidIteratorIndex\",\n                \"InvalidAccountId\",\n                \"InvalidMethodName\",\n                \"InvalidPublicKey\",\n                \"ProhibitedInView\",\n                \"NumberOfLogsExceeded\",\n                \"KeyLengthExceeded\",\n                \"ValueLengthExceeded\",\n                \"TotalLogLengthExceeded\",\n                \"NumberPromisesExceeded\",\n                \"NumberInputDataDependenciesExceeded\",\n                \"ReturnedValueLengthExceeded\",\n                \"ContractSizeExceeded\",\n                \"Deprecated\"\n            ],\n            \"props\": {}\n        },\n        \"IllegalArithmetic\": {\n            \"name\": \"IllegalArithmetic\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"IncorrectCallIndirectSignature\": {\n            \"name\": \"IncorrectCallIndirectSignature\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"Instantiate\": {\n            \"name\": \"Instantiate\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"IntegerOverflow\": {\n            \"name\": \"IntegerOverflow\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"InternalMemoryDeclared\": {\n            \"name\": \"InternalMemoryDeclared\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"InvalidAccountId\": {\n            \"name\": \"InvalidAccountId\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"InvalidIteratorIndex\": {\n            \"name\": \"InvalidIteratorIndex\",\n            \"subtypes\": [],\n            \"props\": {\n                \"iterator_index\": \"\"\n            }\n        },\n        \"InvalidMethodName\": {\n            \"name\": \"InvalidMethodName\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"InvalidPromiseIndex\": {\n            \"name\": \"InvalidPromiseIndex\",\n            \"subtypes\": [],\n            \"props\": {\n                \"promise_idx\": \"\"\n            }\n        },\n        \"InvalidPromiseResultIndex\": {\n            \"name\": \"InvalidPromiseResultIndex\",\n            \"subtypes\": [],\n            \"props\": {\n                \"result_idx\": \"\"\n            }\n        },\n        \"InvalidPublicKey\": {\n            \"name\": \"InvalidPublicKey\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"InvalidReceiptIndex\": {\n            \"name\": \"InvalidReceiptIndex\",\n            \"subtypes\": [],\n            \"props\": {\n                \"receipt_index\": \"\"\n            }\n        },\n        \"InvalidRegisterId\": {\n            \"name\": \"InvalidRegisterId\",\n            \"subtypes\": [],\n            \"props\": {\n                \"register_id\": \"\"\n            }\n        },\n        \"IteratorWasInvalidated\": {\n            \"name\": \"IteratorWasInvalidated\",\n            \"subtypes\": [],\n            \"props\": {\n                \"iterator_index\": \"\"\n            }\n        },\n        \"KeyLengthExceeded\": {\n            \"name\": \"KeyLengthExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"length\": \"\",\n                \"limit\": \"\"\n            }\n        },\n        \"LinkError\": {\n            \"name\": \"LinkError\",\n            \"subtypes\": [],\n            \"props\": {\n                \"msg\": \"\"\n            }\n        },\n        \"Memory\": {\n            \"name\": \"Memory\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"MemoryAccessViolation\": {\n            \"name\": \"MemoryAccessViolation\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"MemoryOutOfBounds\": {\n            \"name\": \"MemoryOutOfBounds\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"MethodEmptyName\": {\n            \"name\": \"MethodEmptyName\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"MethodInvalidSignature\": {\n            \"name\": \"MethodInvalidSignature\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"MethodNotFound\": {\n            \"name\": \"MethodNotFound\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"MethodResolveError\": {\n            \"name\": \"MethodResolveError\",\n            \"subtypes\": [\n                \"MethodEmptyName\",\n                \"MethodUTF8Error\",\n                \"MethodNotFound\",\n                \"MethodInvalidSignature\"\n            ],\n            \"props\": {}\n        },\n        \"MethodUTF8Error\": {\n            \"name\": \"MethodUTF8Error\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"MisalignedAtomicAccess\": {\n            \"name\": \"MisalignedAtomicAccess\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"NumberInputDataDependenciesExceeded\": {\n            \"name\": \"NumberInputDataDependenciesExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"limit\": \"\",\n                \"number_of_input_data_dependencies\": \"\"\n            }\n        },\n        \"NumberOfLogsExceeded\": {\n            \"name\": \"NumberOfLogsExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"limit\": \"\"\n            }\n        },\n        \"NumberPromisesExceeded\": {\n            \"name\": \"NumberPromisesExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"limit\": \"\",\n                \"number_of_promises\": \"\"\n            }\n        },\n        \"PrepareError\": {\n            \"name\": \"PrepareError\",\n            \"subtypes\": [\n                \"Serialization\",\n                \"Deserialization\",\n                \"InternalMemoryDeclared\",\n                \"GasInstrumentation\",\n                \"StackHeightInstrumentation\",\n                \"Instantiate\",\n                \"Memory\"\n            ],\n            \"props\": {}\n        },\n        \"ProhibitedInView\": {\n            \"name\": \"ProhibitedInView\",\n            \"subtypes\": [],\n            \"props\": {\n                \"method_name\": \"\"\n            }\n        },\n        \"ReadError\": {\n            \"name\": \"ReadError\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"ReturnedValueLengthExceeded\": {\n            \"name\": \"ReturnedValueLengthExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"length\": \"\",\n                \"limit\": \"\"\n            }\n        },\n        \"Serialization\": {\n            \"name\": \"Serialization\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"SerializationError\": {\n            \"name\": \"SerializationError\",\n            \"subtypes\": [],\n            \"props\": {\n                \"hash\": \"\"\n            }\n        },\n        \"StackHeightInstrumentation\": {\n            \"name\": \"StackHeightInstrumentation\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"StackOverflow\": {\n            \"name\": \"StackOverflow\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"TotalLogLengthExceeded\": {\n            \"name\": \"TotalLogLengthExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"length\": \"\",\n                \"limit\": \"\"\n            }\n        },\n        \"Unreachable\": {\n            \"name\": \"Unreachable\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"ValueLengthExceeded\": {\n            \"name\": \"ValueLengthExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"length\": \"\",\n                \"limit\": \"\"\n            }\n        },\n        \"WasmTrap\": {\n            \"name\": \"WasmTrap\",\n            \"subtypes\": [\n                \"Unreachable\",\n                \"IncorrectCallIndirectSignature\",\n                \"MemoryOutOfBounds\",\n                \"CallIndirectOOB\",\n                \"IllegalArithmetic\",\n                \"MisalignedAtomicAccess\",\n                \"BreakpointTrap\",\n                \"StackOverflow\",\n                \"GenericTrap\"\n            ],\n            \"props\": {}\n        },\n        \"WasmUnknownError\": {\n            \"name\": \"WasmUnknownError\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"WasmerCompileError\": {\n            \"name\": \"WasmerCompileError\",\n            \"subtypes\": [],\n            \"props\": {\n                \"msg\": \"\"\n            }\n        },\n        \"WriteError\": {\n            \"name\": \"WriteError\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"AccessKeyNotFound\": {\n            \"name\": \"AccessKeyNotFound\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"public_key\": \"\"\n            }\n        },\n        \"AccountAlreadyExists\": {\n            \"name\": \"AccountAlreadyExists\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"AccountDoesNotExist\": {\n            \"name\": \"AccountDoesNotExist\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"ActionError\": {\n            \"name\": \"ActionError\",\n            \"subtypes\": [\n                \"AccountAlreadyExists\",\n                \"AccountDoesNotExist\",\n                \"CreateAccountOnlyByRegistrar\",\n                \"CreateAccountNotAllowed\",\n                \"ActorNoPermission\",\n                \"DeleteKeyDoesNotExist\",\n                \"AddKeyAlreadyExists\",\n                \"DeleteAccountStaking\",\n                \"LackBalanceForState\",\n                \"TriesToUnstake\",\n                \"TriesToStake\",\n                \"InsufficientStake\",\n                \"FunctionCallError\",\n                \"NewReceiptValidationError\",\n                \"OnlyImplicitAccountCreationAllowed\"\n            ],\n            \"props\": {\n                \"index\": \"\"\n            }\n        },\n        \"ActionsValidationError\": {\n            \"name\": \"ActionsValidationError\",\n            \"subtypes\": [\n                \"DeleteActionMustBeFinal\",\n                \"TotalPrepaidGasExceeded\",\n                \"TotalNumberOfActionsExceeded\",\n                \"AddKeyMethodNamesNumberOfBytesExceeded\",\n                \"AddKeyMethodNameLengthExceeded\",\n                \"IntegerOverflow\",\n                \"InvalidAccountId\",\n                \"ContractSizeExceeded\",\n                \"FunctionCallMethodNameLengthExceeded\",\n                \"FunctionCallArgumentsLengthExceeded\",\n                \"UnsuitableStakingKey\",\n                \"FunctionCallZeroAttachedGas\"\n            ],\n            \"props\": {}\n        },\n        \"ActorNoPermission\": {\n            \"name\": \"ActorNoPermission\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"actor_id\": \"\"\n            }\n        },\n        \"AddKeyAlreadyExists\": {\n            \"name\": \"AddKeyAlreadyExists\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"public_key\": \"\"\n            }\n        },\n        \"AddKeyMethodNameLengthExceeded\": {\n            \"name\": \"AddKeyMethodNameLengthExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"length\": \"\",\n                \"limit\": \"\"\n            }\n        },\n        \"AddKeyMethodNamesNumberOfBytesExceeded\": {\n            \"name\": \"AddKeyMethodNamesNumberOfBytesExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"limit\": \"\",\n                \"total_number_of_bytes\": \"\"\n            }\n        },\n        \"BalanceMismatchError\": {\n            \"name\": \"BalanceMismatchError\",\n            \"subtypes\": [],\n            \"props\": {\n                \"final_accounts_balance\": \"\",\n                \"final_postponed_receipts_balance\": \"\",\n                \"incoming_receipts_balance\": \"\",\n                \"incoming_validator_rewards\": \"\",\n                \"initial_accounts_balance\": \"\",\n                \"initial_postponed_receipts_balance\": \"\",\n                \"new_delayed_receipts_balance\": \"\",\n                \"other_burnt_amount\": \"\",\n                \"outgoing_receipts_balance\": \"\",\n                \"processed_delayed_receipts_balance\": \"\",\n                \"slashed_burnt_amount\": \"\",\n                \"tx_burnt_amount\": \"\"\n            }\n        },\n        \"CostOverflow\": {\n            \"name\": \"CostOverflow\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"CreateAccountNotAllowed\": {\n            \"name\": \"CreateAccountNotAllowed\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"predecessor_id\": \"\"\n            }\n        },\n        \"CreateAccountOnlyByRegistrar\": {\n            \"name\": \"CreateAccountOnlyByRegistrar\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"predecessor_id\": \"\",\n                \"registrar_account_id\": \"\"\n            }\n        },\n        \"DeleteAccountStaking\": {\n            \"name\": \"DeleteAccountStaking\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"DeleteActionMustBeFinal\": {\n            \"name\": \"DeleteActionMustBeFinal\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"DeleteKeyDoesNotExist\": {\n            \"name\": \"DeleteKeyDoesNotExist\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"public_key\": \"\"\n            }\n        },\n        \"DepositWithFunctionCall\": {\n            \"name\": \"DepositWithFunctionCall\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"Expired\": {\n            \"name\": \"Expired\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"FunctionCallArgumentsLengthExceeded\": {\n            \"name\": \"FunctionCallArgumentsLengthExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"length\": \"\",\n                \"limit\": \"\"\n            }\n        },\n        \"FunctionCallMethodNameLengthExceeded\": {\n            \"name\": \"FunctionCallMethodNameLengthExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"length\": \"\",\n                \"limit\": \"\"\n            }\n        },\n        \"FunctionCallZeroAttachedGas\": {\n            \"name\": \"FunctionCallZeroAttachedGas\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"InsufficientStake\": {\n            \"name\": \"InsufficientStake\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"minimum_stake\": \"\",\n                \"stake\": \"\"\n            }\n        },\n        \"InvalidAccessKeyError\": {\n            \"name\": \"InvalidAccessKeyError\",\n            \"subtypes\": [\n                \"AccessKeyNotFound\",\n                \"ReceiverMismatch\",\n                \"MethodNameMismatch\",\n                \"RequiresFullAccess\",\n                \"NotEnoughAllowance\",\n                \"DepositWithFunctionCall\"\n            ],\n            \"props\": {}\n        },\n        \"InvalidChain\": {\n            \"name\": \"InvalidChain\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"InvalidDataReceiverId\": {\n            \"name\": \"InvalidDataReceiverId\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"InvalidNonce\": {\n            \"name\": \"InvalidNonce\",\n            \"subtypes\": [],\n            \"props\": {\n                \"ak_nonce\": \"\",\n                \"tx_nonce\": \"\"\n            }\n        },\n        \"InvalidPredecessorId\": {\n            \"name\": \"InvalidPredecessorId\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"InvalidReceiverId\": {\n            \"name\": \"InvalidReceiverId\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"InvalidSignature\": {\n            \"name\": \"InvalidSignature\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"InvalidSignerId\": {\n            \"name\": \"InvalidSignerId\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"InvalidTxError\": {\n            \"name\": \"InvalidTxError\",\n            \"subtypes\": [\n                \"InvalidAccessKeyError\",\n                \"InvalidSignerId\",\n                \"SignerDoesNotExist\",\n                \"InvalidNonce\",\n                \"InvalidReceiverId\",\n                \"InvalidSignature\",\n                \"NotEnoughBalance\",\n                \"LackBalanceForState\",\n                \"CostOverflow\",\n                \"InvalidChain\",\n                \"Expired\",\n                \"ActionsValidation\"\n            ],\n            \"props\": {}\n        },\n        \"LackBalanceForState\": {\n            \"name\": \"LackBalanceForState\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"amount\": \"\"\n            }\n        },\n        \"MethodNameMismatch\": {\n            \"name\": \"MethodNameMismatch\",\n            \"subtypes\": [],\n            \"props\": {\n                \"method_name\": \"\"\n            }\n        },\n        \"NotEnoughAllowance\": {\n            \"name\": \"NotEnoughAllowance\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"allowance\": \"\",\n                \"cost\": \"\",\n                \"public_key\": \"\"\n            }\n        },\n        \"NotEnoughBalance\": {\n            \"name\": \"NotEnoughBalance\",\n            \"subtypes\": [],\n            \"props\": {\n                \"balance\": \"\",\n                \"cost\": \"\",\n                \"signer_id\": \"\"\n            }\n        },\n        \"OnlyImplicitAccountCreationAllowed\": {\n            \"name\": \"OnlyImplicitAccountCreationAllowed\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"ReceiptValidationError\": {\n            \"name\": \"ReceiptValidationError\",\n            \"subtypes\": [\n                \"InvalidPredecessorId\",\n                \"InvalidReceiverId\",\n                \"InvalidSignerId\",\n                \"InvalidDataReceiverId\",\n                \"ReturnedValueLengthExceeded\",\n                \"NumberInputDataDependenciesExceeded\",\n                \"ActionsValidation\"\n            ],\n            \"props\": {}\n        },\n        \"ReceiverMismatch\": {\n            \"name\": \"ReceiverMismatch\",\n            \"subtypes\": [],\n            \"props\": {\n                \"ak_receiver\": \"\",\n                \"tx_receiver\": \"\"\n            }\n        },\n        \"RequiresFullAccess\": {\n            \"name\": \"RequiresFullAccess\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"SignerDoesNotExist\": {\n            \"name\": \"SignerDoesNotExist\",\n            \"subtypes\": [],\n            \"props\": {\n                \"signer_id\": \"\"\n            }\n        },\n        \"TotalNumberOfActionsExceeded\": {\n            \"name\": \"TotalNumberOfActionsExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"limit\": \"\",\n                \"total_number_of_actions\": \"\"\n            }\n        },\n        \"TotalPrepaidGasExceeded\": {\n            \"name\": \"TotalPrepaidGasExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"limit\": \"\",\n                \"total_prepaid_gas\": \"\"\n            }\n        },\n        \"TriesToStake\": {\n            \"name\": \"TriesToStake\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"balance\": \"\",\n                \"locked\": \"\",\n                \"stake\": \"\"\n            }\n        },\n        \"TriesToUnstake\": {\n            \"name\": \"TriesToUnstake\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"TxExecutionError\": {\n            \"name\": \"TxExecutionError\",\n            \"subtypes\": [\n                \"ActionError\",\n                \"InvalidTxError\"\n            ],\n            \"props\": {}\n        },\n        \"UnsuitableStakingKey\": {\n            \"name\": \"UnsuitableStakingKey\",\n            \"subtypes\": [],\n            \"props\": {\n                \"public_key\": \"\"\n            }\n        },\n        \"Closed\": {\n            \"name\": \"Closed\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"InternalError\": {\n            \"name\": \"InternalError\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"ServerError\": {\n            \"name\": \"ServerError\",\n            \"subtypes\": [\n                \"TxExecutionError\",\n                \"Timeout\",\n                \"Closed\",\n                \"InternalError\"\n            ],\n            \"props\": {}\n        },\n        \"Timeout\": {\n            \"name\": \"Timeout\",\n            \"subtypes\": [],\n            \"props\": {}\n        }\n    }\n}\n","{\n    \"GasLimitExceeded\": \"Exceeded the maximum amount of gas allowed to burn per contract\",\n    \"MethodEmptyName\": \"Method name is empty\",\n    \"WasmerCompileError\": \"Wasmer compilation error: {{msg}}\",\n    \"GuestPanic\": \"Smart contract panicked: {{panic_msg}}\",\n    \"Memory\": \"Error creating Wasm memory\",\n    \"GasExceeded\": \"Exceeded the prepaid gas\",\n    \"MethodUTF8Error\": \"Method name is not valid UTF8 string\",\n    \"BadUTF16\": \"String encoding is bad UTF-16 sequence\",\n    \"WasmTrap\": \"WebAssembly trap: {{msg}}\",\n    \"GasInstrumentation\": \"Gas instrumentation failed or contract has denied instructions.\",\n    \"InvalidPromiseIndex\": \"{{promise_idx}} does not correspond to existing promises\",\n    \"InvalidPromiseResultIndex\": \"Accessed invalid promise result index: {{result_idx}}\",\n    \"Deserialization\": \"Error happened while deserializing the module\",\n    \"MethodNotFound\": \"Contract method is not found\",\n    \"InvalidRegisterId\": \"Accessed invalid register id: {{register_id}}\",\n    \"InvalidReceiptIndex\": \"VM Logic returned an invalid receipt index: {{receipt_index}}\",\n    \"EmptyMethodName\": \"Method name is empty in contract call\",\n    \"CannotReturnJointPromise\": \"Returning joint promise is currently prohibited\",\n    \"StackHeightInstrumentation\": \"Stack instrumentation failed\",\n    \"CodeDoesNotExist\": \"Cannot find contract code for account {{account_id}}\",\n    \"MethodInvalidSignature\": \"Invalid method signature\",\n    \"IntegerOverflow\": \"Integer overflow happened during contract execution\",\n    \"MemoryAccessViolation\": \"MemoryAccessViolation\",\n    \"InvalidIteratorIndex\": \"Iterator index {{iterator_index}} does not exist\",\n    \"IteratorWasInvalidated\": \"Iterator {{iterator_index}} was invalidated after its creation by performing a mutable operation on trie\",\n    \"InvalidAccountId\": \"VM Logic returned an invalid account id\",\n    \"Serialization\": \"Error happened while serializing the module\",\n    \"CannotAppendActionToJointPromise\": \"Actions can only be appended to non-joint promise.\",\n    \"InternalMemoryDeclared\": \"Internal memory declaration has been found in the module\",\n    \"Instantiate\": \"Error happened during instantiation\",\n    \"ProhibitedInView\": \"{{method_name}} is not allowed in view calls\",\n    \"InvalidMethodName\": \"VM Logic returned an invalid method name\",\n    \"BadUTF8\": \"String encoding is bad UTF-8 sequence\",\n    \"BalanceExceeded\": \"Exceeded the account balance\",\n    \"LinkError\": \"Wasm contract link error: {{msg}}\",\n    \"InvalidPublicKey\": \"VM Logic provided an invalid public key\",\n    \"ActorNoPermission\": \"Actor {{actor_id}} doesn't have permission to account {{account_id}} to complete the action\",\n    \"LackBalanceForState\": \"The account {{account_id}} wouldn't have enough balance to cover storage, required to have {{amount}} yoctoNEAR more\",\n    \"ReceiverMismatch\": \"Wrong AccessKey used for transaction: transaction is sent to receiver_id={{tx_receiver}}, but is signed with function call access key that restricted to only use with receiver_id={{ak_receiver}}. Either change receiver_id in your transaction or switch to use a FullAccessKey.\",\n    \"CostOverflow\": \"Transaction gas or balance cost is too high\",\n    \"InvalidSignature\": \"Transaction is not signed with the given public key\",\n    \"AccessKeyNotFound\": \"Signer \\\"{{account_id}}\\\" doesn't have access key with the given public_key {{public_key}}\",\n    \"NotEnoughBalance\": \"Sender {{signer_id}} does not have enough balance {{#formatNear}}{{balance}}{{/formatNear}} for operation costing {{#formatNear}}{{cost}}{{/formatNear}}\",\n    \"NotEnoughAllowance\": \"Access Key {account_id}:{public_key} does not have enough balance {{#formatNear}}{{allowance}}{{/formatNear}} for transaction costing {{#formatNear}}{{cost}}{{/formatNear}}\",\n    \"Expired\": \"Transaction has expired\",\n    \"DeleteAccountStaking\": \"Account {{account_id}} is staking and can not be deleted\",\n    \"SignerDoesNotExist\": \"Signer {{signer_id}} does not exist\",\n    \"TriesToStake\": \"Account {{account_id}} tried to stake {{#formatNear}}{{stake}}{{/formatNear}}, but has staked {{#formatNear}}{{locked}}{{/formatNear}} and only has {{#formatNear}}{{balance}}{{/formatNear}}\",\n    \"AddKeyAlreadyExists\": \"The public key {{public_key}} is already used for an existing access key\",\n    \"InvalidSigner\": \"Invalid signer account ID {{signer_id}} according to requirements\",\n    \"CreateAccountNotAllowed\": \"The new account_id {{account_id}} can't be created by {{predecessor_id}}\",\n    \"RequiresFullAccess\": \"The transaction contains more then one action, but it was signed with an access key which allows transaction to apply only one specific action. To apply more then one actions TX must be signed with a full access key\",\n    \"TriesToUnstake\": \"Account {{account_id}} is not yet staked, but tried to unstake\",\n    \"InvalidNonce\": \"Transaction nonce {{tx_nonce}} must be larger than nonce of the used access key {{ak_nonce}}\",\n    \"AccountAlreadyExists\": \"Can't create a new account {{account_id}}, because it already exists\",\n    \"InvalidChain\": \"Transaction parent block hash doesn't belong to the current chain\",\n    \"AccountDoesNotExist\": \"Can't complete the action because account {{account_id}} doesn't exist\",\n    \"MethodNameMismatch\": \"Transaction method name {{method_name}} isn't allowed by the access key\",\n    \"DeleteAccountHasRent\": \"Account {{account_id}} can't be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover the rent\",\n    \"DeleteAccountHasEnoughBalance\": \"Account {{account_id}} can't be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover it's storage\",\n    \"InvalidReceiver\": \"Invalid receiver account ID {{receiver_id}} according to requirements\",\n    \"DeleteKeyDoesNotExist\": \"Account {{account_id}} tries to remove an access key that doesn't exist\",\n    \"Timeout\": \"Timeout exceeded\",\n    \"Closed\": \"Connection closed\"\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logWarning = exports.rpc_errors = exports.KeyPairEd25519 = exports.KeyPair = exports.PublicKey = exports.format = exports.enums = exports.web = exports.serialize = exports.key_pair = void 0;\nconst key_pair = __importStar(require(\"./key_pair\"));\nexports.key_pair = key_pair;\nconst serialize = __importStar(require(\"./serialize\"));\nexports.serialize = serialize;\nconst web = __importStar(require(\"./web\"));\nexports.web = web;\nconst enums = __importStar(require(\"./enums\"));\nexports.enums = enums;\nconst format = __importStar(require(\"./format\"));\nexports.format = format;\nconst rpc_errors = __importStar(require(\"./rpc_errors\"));\nexports.rpc_errors = rpc_errors;\nconst key_pair_1 = require(\"./key_pair\");\nObject.defineProperty(exports, \"PublicKey\", { enumerable: true, get: function () { return key_pair_1.PublicKey; } });\nObject.defineProperty(exports, \"KeyPair\", { enumerable: true, get: function () { return key_pair_1.KeyPair; } });\nObject.defineProperty(exports, \"KeyPairEd25519\", { enumerable: true, get: function () { return key_pair_1.KeyPairEd25519; } });\nconst errors_1 = require(\"./errors\");\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return errors_1.logWarning; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseNearAmount = exports.formatNearAmount = exports.NEAR_NOMINATION = exports.NEAR_NOMINATION_EXP = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n/**\n * Exponent for calculating how many indivisible units are there in one NEAR. See {@link NEAR_NOMINATION}.\n */\nexports.NEAR_NOMINATION_EXP = 24;\n/**\n * Number of indivisible units in one NEAR. Derived from {@link NEAR_NOMINATION_EXP}.\n */\nexports.NEAR_NOMINATION = new bn_js_1.default('10', 10).pow(new bn_js_1.default(exports.NEAR_NOMINATION_EXP, 10));\n// Pre-calculate offests used for rounding to different number of digits\nconst ROUNDING_OFFSETS = [];\nconst BN10 = new bn_js_1.default(10);\nfor (let i = 0, offset = new bn_js_1.default(5); i < exports.NEAR_NOMINATION_EXP; i++, offset = offset.mul(BN10)) {\n    ROUNDING_OFFSETS[i] = offset;\n}\n/**\n * Convert account balance value from internal indivisible units to NEAR. 1 NEAR is defined by {@link NEAR_NOMINATION}.\n * Effectively this divides given amount by {@link NEAR_NOMINATION}.\n *\n * @param balance decimal string representing balance in smallest non-divisible NEAR units (as specified by {@link NEAR_NOMINATION})\n * @param fracDigits number of fractional digits to preserve in formatted string. Balance is rounded to match given number of digits.\n * @returns Value in Ⓝ\n */\nfunction formatNearAmount(balance, fracDigits = exports.NEAR_NOMINATION_EXP) {\n    const balanceBN = new bn_js_1.default(balance, 10);\n    if (fracDigits !== exports.NEAR_NOMINATION_EXP) {\n        // Adjust balance for rounding at given number of digits\n        const roundingExp = exports.NEAR_NOMINATION_EXP - fracDigits - 1;\n        if (roundingExp > 0) {\n            balanceBN.iadd(ROUNDING_OFFSETS[roundingExp]);\n        }\n    }\n    balance = balanceBN.toString();\n    const wholeStr = balance.substring(0, balance.length - exports.NEAR_NOMINATION_EXP) || '0';\n    const fractionStr = balance.substring(balance.length - exports.NEAR_NOMINATION_EXP)\n        .padStart(exports.NEAR_NOMINATION_EXP, '0').substring(0, fracDigits);\n    return trimTrailingZeroes(`${formatWithCommas(wholeStr)}.${fractionStr}`);\n}\nexports.formatNearAmount = formatNearAmount;\n/**\n * Convert human readable NEAR amount to internal indivisible units.\n * Effectively this multiplies given amount by {@link NEAR_NOMINATION}.\n *\n * @param amt decimal string (potentially fractional) denominated in NEAR.\n * @returns The parsed yoctoⓃ amount or null if no amount was passed in\n */\nfunction parseNearAmount(amt) {\n    if (!amt) {\n        return null;\n    }\n    amt = cleanupAmount(amt);\n    const split = amt.split('.');\n    const wholePart = split[0];\n    const fracPart = split[1] || '';\n    if (split.length > 2 || fracPart.length > exports.NEAR_NOMINATION_EXP) {\n        throw new Error(`Cannot parse '${amt}' as NEAR amount`);\n    }\n    return trimLeadingZeroes(wholePart + fracPart.padEnd(exports.NEAR_NOMINATION_EXP, '0'));\n}\nexports.parseNearAmount = parseNearAmount;\n/**\n * Removes commas from the input\n * @param amount A value or amount that may contain commas\n * @returns string The cleaned value\n */\nfunction cleanupAmount(amount) {\n    return amount.replace(/,/g, '').trim();\n}\n/**\n * Removes .000… from an input\n * @param value A value that may contain trailing zeroes in the decimals place\n * @returns string The value without the trailing zeros\n */\nfunction trimTrailingZeroes(value) {\n    return value.replace(/\\.?0*$/, '');\n}\n/**\n * Removes leading zeroes from an input\n * @param value A value that may contain leading zeroes\n * @returns string The value without the leading zeroes\n */\nfunction trimLeadingZeroes(value) {\n    value = value.replace(/^0+/, '');\n    if (value === '') {\n        return '0';\n    }\n    return value;\n}\n/**\n * Returns a human-readable value with commas\n * @param value A value that may not contain commas\n * @returns string A value with commas\n */\nfunction formatWithCommas(value) {\n    const pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(value)) {\n        value = value.replace(pattern, '$1,$2');\n    }\n    return value;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signTransaction = exports.createTransaction = exports.SCHEMA = exports.Action = exports.SignedTransaction = exports.Transaction = exports.Signature = exports.deleteAccount = exports.deleteKey = exports.addKey = exports.stake = exports.transfer = exports.functionCall = exports.stringifyJsonOrBytes = exports.deployContract = exports.createAccount = exports.DeleteAccount = exports.DeleteKey = exports.AddKey = exports.Stake = exports.Transfer = exports.FunctionCall = exports.DeployContract = exports.CreateAccount = exports.IAction = exports.functionCallAccessKey = exports.fullAccessKey = exports.AccessKey = exports.AccessKeyPermission = exports.FullAccessPermission = exports.FunctionCallPermission = void 0;\nconst js_sha256_1 = __importDefault(require(\"js-sha256\"));\nconst enums_1 = require(\"./utils/enums\");\nconst borsh_1 = require(\"borsh\");\nconst key_pair_1 = require(\"./utils/key_pair\");\nclass FunctionCallPermission extends enums_1.Assignable {\n}\nexports.FunctionCallPermission = FunctionCallPermission;\nclass FullAccessPermission extends enums_1.Assignable {\n}\nexports.FullAccessPermission = FullAccessPermission;\nclass AccessKeyPermission extends enums_1.Enum {\n}\nexports.AccessKeyPermission = AccessKeyPermission;\nclass AccessKey extends enums_1.Assignable {\n}\nexports.AccessKey = AccessKey;\nfunction fullAccessKey() {\n    return new AccessKey({ nonce: 0, permission: new AccessKeyPermission({ fullAccess: new FullAccessPermission({}) }) });\n}\nexports.fullAccessKey = fullAccessKey;\nfunction functionCallAccessKey(receiverId, methodNames, allowance) {\n    return new AccessKey({ nonce: 0, permission: new AccessKeyPermission({ functionCall: new FunctionCallPermission({ receiverId, allowance, methodNames }) }) });\n}\nexports.functionCallAccessKey = functionCallAccessKey;\nclass IAction extends enums_1.Assignable {\n}\nexports.IAction = IAction;\nclass CreateAccount extends IAction {\n}\nexports.CreateAccount = CreateAccount;\nclass DeployContract extends IAction {\n}\nexports.DeployContract = DeployContract;\nclass FunctionCall extends IAction {\n}\nexports.FunctionCall = FunctionCall;\nclass Transfer extends IAction {\n}\nexports.Transfer = Transfer;\nclass Stake extends IAction {\n}\nexports.Stake = Stake;\nclass AddKey extends IAction {\n}\nexports.AddKey = AddKey;\nclass DeleteKey extends IAction {\n}\nexports.DeleteKey = DeleteKey;\nclass DeleteAccount extends IAction {\n}\nexports.DeleteAccount = DeleteAccount;\nfunction createAccount() {\n    return new Action({ createAccount: new CreateAccount({}) });\n}\nexports.createAccount = createAccount;\nfunction deployContract(code) {\n    return new Action({ deployContract: new DeployContract({ code }) });\n}\nexports.deployContract = deployContract;\nfunction stringifyJsonOrBytes(args) {\n    const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n    const serializedArgs = isUint8Array ? args : Buffer.from(JSON.stringify(args));\n    return serializedArgs;\n}\nexports.stringifyJsonOrBytes = stringifyJsonOrBytes;\n/**\n * Constructs {@link Action} instance representing contract method call.\n *\n * @param methodName the name of the method to call\n * @param args arguments to pass to method. Can be either plain JS object which gets serialized as JSON automatically\n *  or `Uint8Array` instance which represents bytes passed as is.\n * @param gas max amount of gas that method call can use\n * @param deposit amount of NEAR (in yoctoNEAR) to send together with the call\n * @param stringify Convert input arguments into bytes array.\n */\nfunction functionCall(methodName, args, gas, deposit, stringify = stringifyJsonOrBytes) {\n    return new Action({ functionCall: new FunctionCall({ methodName, args: stringify(args), gas, deposit }) });\n}\nexports.functionCall = functionCall;\nfunction transfer(deposit) {\n    return new Action({ transfer: new Transfer({ deposit }) });\n}\nexports.transfer = transfer;\nfunction stake(stake, publicKey) {\n    return new Action({ stake: new Stake({ stake, publicKey }) });\n}\nexports.stake = stake;\nfunction addKey(publicKey, accessKey) {\n    return new Action({ addKey: new AddKey({ publicKey, accessKey }) });\n}\nexports.addKey = addKey;\nfunction deleteKey(publicKey) {\n    return new Action({ deleteKey: new DeleteKey({ publicKey }) });\n}\nexports.deleteKey = deleteKey;\nfunction deleteAccount(beneficiaryId) {\n    return new Action({ deleteAccount: new DeleteAccount({ beneficiaryId }) });\n}\nexports.deleteAccount = deleteAccount;\nclass Signature extends enums_1.Assignable {\n}\nexports.Signature = Signature;\nclass Transaction extends enums_1.Assignable {\n    encode() {\n        return borsh_1.serialize(exports.SCHEMA, this);\n    }\n    static decode(bytes) {\n        return borsh_1.deserialize(exports.SCHEMA, Transaction, bytes);\n    }\n}\nexports.Transaction = Transaction;\nclass SignedTransaction extends enums_1.Assignable {\n    encode() {\n        return borsh_1.serialize(exports.SCHEMA, this);\n    }\n    static decode(bytes) {\n        return borsh_1.deserialize(exports.SCHEMA, SignedTransaction, bytes);\n    }\n}\nexports.SignedTransaction = SignedTransaction;\n/**\n * Contains a list of the valid transaction Actions available with this API\n * @see {@link https://nomicon.io/RuntimeSpec/Actions.html | Actions Spec}\n */\nclass Action extends enums_1.Enum {\n}\nexports.Action = Action;\nexports.SCHEMA = new Map([\n    [Signature, { kind: 'struct', fields: [\n                ['keyType', 'u8'],\n                ['data', [64]]\n            ] }],\n    [SignedTransaction, { kind: 'struct', fields: [\n                ['transaction', Transaction],\n                ['signature', Signature]\n            ] }],\n    [Transaction, { kind: 'struct', fields: [\n                ['signerId', 'string'],\n                ['publicKey', key_pair_1.PublicKey],\n                ['nonce', 'u64'],\n                ['receiverId', 'string'],\n                ['blockHash', [32]],\n                ['actions', [Action]]\n            ] }],\n    [key_pair_1.PublicKey, { kind: 'struct', fields: [\n                ['keyType', 'u8'],\n                ['data', [32]]\n            ] }],\n    [AccessKey, { kind: 'struct', fields: [\n                ['nonce', 'u64'],\n                ['permission', AccessKeyPermission],\n            ] }],\n    [AccessKeyPermission, { kind: 'enum', field: 'enum', values: [\n                ['functionCall', FunctionCallPermission],\n                ['fullAccess', FullAccessPermission],\n            ] }],\n    [FunctionCallPermission, { kind: 'struct', fields: [\n                ['allowance', { kind: 'option', type: 'u128' }],\n                ['receiverId', 'string'],\n                ['methodNames', ['string']],\n            ] }],\n    [FullAccessPermission, { kind: 'struct', fields: [] }],\n    [Action, { kind: 'enum', field: 'enum', values: [\n                ['createAccount', CreateAccount],\n                ['deployContract', DeployContract],\n                ['functionCall', FunctionCall],\n                ['transfer', Transfer],\n                ['stake', Stake],\n                ['addKey', AddKey],\n                ['deleteKey', DeleteKey],\n                ['deleteAccount', DeleteAccount],\n            ] }],\n    [CreateAccount, { kind: 'struct', fields: [] }],\n    [DeployContract, { kind: 'struct', fields: [\n                ['code', ['u8']]\n            ] }],\n    [FunctionCall, { kind: 'struct', fields: [\n                ['methodName', 'string'],\n                ['args', ['u8']],\n                ['gas', 'u64'],\n                ['deposit', 'u128']\n            ] }],\n    [Transfer, { kind: 'struct', fields: [\n                ['deposit', 'u128']\n            ] }],\n    [Stake, { kind: 'struct', fields: [\n                ['stake', 'u128'],\n                ['publicKey', key_pair_1.PublicKey]\n            ] }],\n    [AddKey, { kind: 'struct', fields: [\n                ['publicKey', key_pair_1.PublicKey],\n                ['accessKey', AccessKey]\n            ] }],\n    [DeleteKey, { kind: 'struct', fields: [\n                ['publicKey', key_pair_1.PublicKey]\n            ] }],\n    [DeleteAccount, { kind: 'struct', fields: [\n                ['beneficiaryId', 'string']\n            ] }],\n]);\nfunction createTransaction(signerId, publicKey, receiverId, nonce, actions, blockHash) {\n    return new Transaction({ signerId, publicKey, nonce, receiverId, actions, blockHash });\n}\nexports.createTransaction = createTransaction;\n/**\n * Signs a given transaction from an account with given keys, applied to the given network\n * @param transaction The Transaction object to sign\n * @param signer The {Signer} object that assists with signing keys\n * @param accountId The human-readable NEAR account name\n * @param networkId The targeted network. (ex. default, betanet, etc…)\n */\nasync function signTransactionObject(transaction, signer, accountId, networkId) {\n    const message = borsh_1.serialize(exports.SCHEMA, transaction);\n    const hash = new Uint8Array(js_sha256_1.default.sha256.array(message));\n    const signature = await signer.signMessage(message, accountId, networkId);\n    const signedTx = new SignedTransaction({\n        transaction,\n        signature: new Signature({ keyType: transaction.publicKey.keyType, data: signature.signature })\n    });\n    return [hash, signedTx];\n}\nasync function signTransaction(...args) {\n    if (args[0].constructor === Transaction) {\n        const [transaction, signer, accountId, networkId] = args;\n        return signTransactionObject(transaction, signer, accountId, networkId);\n    }\n    else {\n        const [receiverId, nonce, actions, blockHash, signer, accountId, networkId] = args;\n        const publicKey = await signer.getPublicKey(accountId, networkId);\n        const transaction = createTransaction(accountId, publicKey, receiverId, nonce, actions, blockHash);\n        return signTransactionObject(transaction, signer, accountId, networkId);\n    }\n}\nexports.signTransaction = signTransaction;\n","/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\n      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\n      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\n      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\n      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\n      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\n      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\n        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\n        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\n        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.diffEpochValidators = exports.findSeatPrice = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @params validators: current or next epoch validators.\n * @params maxNumberOfSeats: maximum number of seats in the network.\n * @params minimumStakeRatio: minimum stake ratio\n * @params protocolVersion: version of the protocol from genesis config\n */\nfunction findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio, protocolVersion) {\n    if (protocolVersion && protocolVersion < 49) {\n        return findSeatPriceForProtocolBefore49(validators, maxNumberOfSeats);\n    }\n    if (!minimumStakeRatio) {\n        const deprecate = depd_1.default('findSeatPrice(validators, maxNumberOfSeats)');\n        deprecate('`use `findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio)` instead');\n        minimumStakeRatio = [1, 6250]; // harcoded minimumStakeRation from 12/7/21\n    }\n    return findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio);\n}\nexports.findSeatPrice = findSeatPrice;\nfunction findSeatPriceForProtocolBefore49(validators, numSeats) {\n    const stakes = validators.map(v => new bn_js_1.default(v.stake, 10)).sort((a, b) => a.cmp(b));\n    const num = new bn_js_1.default(numSeats);\n    const stakesSum = stakes.reduce((a, b) => a.add(b));\n    if (stakesSum.lt(num)) {\n        throw new Error('Stakes are below seats');\n    }\n    // assert stakesSum >= numSeats\n    let left = new bn_js_1.default(1), right = stakesSum.add(new bn_js_1.default(1));\n    while (!left.eq(right.sub(new bn_js_1.default(1)))) {\n        const mid = left.add(right).div(new bn_js_1.default(2));\n        let found = false;\n        let currentSum = new bn_js_1.default(0);\n        for (let i = 0; i < stakes.length; ++i) {\n            currentSum = currentSum.add(stakes[i].div(mid));\n            if (currentSum.gte(num)) {\n                left = mid;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            right = mid;\n        }\n    }\n    return left;\n}\n// nearcore reference: https://github.com/near/nearcore/blob/5a8ae263ec07930cd34d0dcf5bcee250c67c02aa/chain/epoch_manager/src/validator_selection.rs#L308;L315\nfunction findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio) {\n    if (minimumStakeRatio.length != 2) {\n        throw Error('minimumStakeRatio should have 2 elements');\n    }\n    const stakes = validators.map(v => new bn_js_1.default(v.stake, 10)).sort((a, b) => a.cmp(b));\n    const stakesSum = stakes.reduce((a, b) => a.add(b));\n    if (validators.length < maxNumberOfSeats) {\n        return stakesSum.mul(new bn_js_1.default(minimumStakeRatio[0])).div(new bn_js_1.default(minimumStakeRatio[1]));\n    }\n    else {\n        return stakes[0].add(new bn_js_1.default(1));\n    }\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @params currentValidators: list of current validators.\n * @params nextValidators: list of next validators.\n */\nfunction diffEpochValidators(currentValidators, nextValidators) {\n    const validatorsMap = new Map();\n    currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n    const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n    return {\n        newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n        removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n        changedValidators: nextValidators.filter(v => (validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake))\n            .map(v => ({ current: validatorsMap.get(v.account_id), next: v }))\n    };\n}\nexports.diffEpochValidators = diffEpochValidators;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst transaction_1 = require(\"./transaction\");\nconst providers_1 = require(\"./providers\");\nconst borsh_1 = require(\"borsh\");\nconst key_pair_1 = require(\"./utils/key_pair\");\nconst errors_1 = require(\"./utils/errors\");\nconst rpc_errors_1 = require(\"./utils/rpc_errors\");\nconst constants_1 = require(\"./constants\");\nconst exponential_backoff_1 = __importDefault(require(\"./utils/exponential-backoff\"));\n// Default number of retries with different nonce before giving up on a transaction.\nconst TX_NONCE_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst TX_NONCE_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst TX_NONCE_RETRY_WAIT_BACKOFF = 1.5;\nfunction parseJsonFromRawResponse(response) {\n    return JSON.parse(Buffer.from(response).toString());\n}\nfunction bytesJsonStringify(input) {\n    return Buffer.from(JSON.stringify(input));\n}\n/**\n * This class provides common account related RPC calls including signing transactions with a {@link KeyPair}.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}\n * @hint Use {@link WalletConnection} in the browser to redirect to {@link https://docs.near.org/docs/tools/near-wallet | NEAR Wallet} for Account/key management using the {@link BrowserLocalStorageKeyStore}.\n * @see {@link https://nomicon.io/DataStructures/Account.html | Account Spec}\n */\nclass Account {\n    constructor(connection, accountId) {\n        /** @hidden */\n        this.accessKeyByPublicKeyCache = {};\n        this.connection = connection;\n        this.accountId = accountId;\n    }\n    /** @hidden */\n    get ready() {\n        const deprecate = depd_1.default('Account.ready()');\n        deprecate('not needed anymore, always ready');\n        return Promise.resolve();\n    }\n    async fetchState() {\n        const deprecate = depd_1.default('Account.fetchState()');\n        deprecate('use `Account.state()` instead');\n    }\n    /**\n     * Returns basic NEAR account information via the `view_account` RPC query method\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-account}\n     */\n    async state() {\n        return this.connection.provider.query({\n            request_type: 'view_account',\n            account_id: this.accountId,\n            finality: 'optimistic'\n        });\n    }\n    /** @hidden */\n    printLogsAndFailures(contractId, results) {\n        if (!process.env[\"NEAR_NO_LOGS\"]) {\n            for (const result of results) {\n                console.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);\n                this.printLogs(contractId, result.logs, '\\t');\n                if (result.failure) {\n                    console.warn(`\\tFailure [${contractId}]: ${result.failure}`);\n                }\n            }\n        }\n    }\n    /** @hidden */\n    printLogs(contractId, logs, prefix = '') {\n        if (!process.env[\"NEAR_NO_LOGS\"]) {\n            for (const log of logs) {\n                console.log(`${prefix}Log [${contractId}]: ${log}`);\n            }\n        }\n    }\n    /**\n     * Create a signed transaction which can be broadcast to the network\n     * @param receiverId NEAR account receiving the transaction\n     * @param actions list of actions to perform as part of the transaction\n     * @see {@link JsonRpcProvider.sendTransaction}\n     */\n    async signTransaction(receiverId, actions) {\n        const accessKeyInfo = await this.findAccessKey(receiverId, actions);\n        if (!accessKeyInfo) {\n            throw new providers_1.TypedError(`Can not sign transactions for account ${this.accountId} on network ${this.connection.networkId}, no matching key pair found in ${this.connection.signer}.`, 'KeyNotFound');\n        }\n        const { accessKey } = accessKeyInfo;\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockHash = block.header.hash;\n        const nonce = ++accessKey.nonce;\n        return await transaction_1.signTransaction(receiverId, nonce, actions, borsh_1.baseDecode(blockHash), this.connection.signer, this.accountId, this.connection.networkId);\n    }\n    signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            return this.signAndSendTransactionV1(args[0], args[1]);\n        }\n        else {\n            return this.signAndSendTransactionV2(args[0]);\n        }\n    }\n    signAndSendTransactionV1(receiverId, actions) {\n        const deprecate = depd_1.default('Account.signAndSendTransaction(receiverId, actions');\n        deprecate('use `Account.signAndSendTransaction(SignAndSendTransactionOptions)` instead');\n        return this.signAndSendTransactionV2({ receiverId, actions });\n    }\n    async signAndSendTransactionV2({ receiverId, actions, returnError }) {\n        let txHash, signedTx;\n        // TODO: TX_NONCE (different constants for different uses of exponentialBackoff?)\n        const result = await exponential_backoff_1.default(TX_NONCE_RETRY_WAIT, TX_NONCE_RETRY_NUMBER, TX_NONCE_RETRY_WAIT_BACKOFF, async () => {\n            [txHash, signedTx] = await this.signTransaction(receiverId, actions);\n            const publicKey = signedTx.transaction.publicKey;\n            try {\n                return await this.connection.provider.sendTransaction(signedTx);\n            }\n            catch (error) {\n                if (error.type === 'InvalidNonce') {\n                    errors_1.logWarning(`Retrying transaction ${receiverId}:${borsh_1.baseEncode(txHash)} with new nonce.`);\n                    delete this.accessKeyByPublicKeyCache[publicKey.toString()];\n                    return null;\n                }\n                if (error.type === 'Expired') {\n                    errors_1.logWarning(`Retrying transaction ${receiverId}:${borsh_1.baseEncode(txHash)} due to expired block hash`);\n                    return null;\n                }\n                error.context = new providers_1.ErrorContext(borsh_1.baseEncode(txHash));\n                throw error;\n            }\n        });\n        if (!result) {\n            // TODO: This should have different code actually, as means \"transaction not submitted for sure\"\n            throw new providers_1.TypedError('nonce retries exceeded for transaction. This usually means there are too many parallel requests with the same access key.', 'RetriesExceeded');\n        }\n        const flatLogs = [result.transaction_outcome, ...result.receipts_outcome].reduce((acc, it) => {\n            if (it.outcome.logs.length ||\n                (typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object')) {\n                return acc.concat({\n                    'receiptIds': it.outcome.receipt_ids,\n                    'logs': it.outcome.logs,\n                    'failure': typeof it.outcome.status.Failure != 'undefined' ? rpc_errors_1.parseRpcError(it.outcome.status.Failure) : null\n                });\n            }\n            else\n                return acc;\n        }, []);\n        this.printLogsAndFailures(signedTx.transaction.receiverId, flatLogs);\n        if (!returnError && typeof result.status === 'object' && typeof result.status.Failure === 'object') {\n            // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n            if (result.status.Failure.error_message && result.status.Failure.error_type) {\n                throw new providers_1.TypedError(`Transaction ${result.transaction_outcome.id} failed. ${result.status.Failure.error_message}`, result.status.Failure.error_type);\n            }\n            else {\n                throw rpc_errors_1.parseResultError(result);\n            }\n        }\n        // TODO: if Tx is Unknown or Started.\n        return result;\n    }\n    /**\n     * Finds the {@link AccessKeyView} associated with the accounts {@link PublicKey} stored in the {@link KeyStore}.\n     *\n     * @todo Find matching access key based on transaction (i.e. receiverId and actions)\n     *\n     * @param receiverId currently unused (see todo)\n     * @param actions currently unused (see todo)\n     * @returns `{ publicKey PublicKey; accessKey: AccessKeyView }`\n     */\n    async findAccessKey(receiverId, actions) {\n        // TODO: Find matching access key based on transaction (i.e. receiverId and actions)\n        const publicKey = await this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n        if (!publicKey) {\n            return null;\n        }\n        const cachedAccessKey = this.accessKeyByPublicKeyCache[publicKey.toString()];\n        if (cachedAccessKey !== undefined) {\n            return { publicKey, accessKey: cachedAccessKey };\n        }\n        try {\n            const accessKey = await this.connection.provider.query({\n                request_type: 'view_access_key',\n                account_id: this.accountId,\n                public_key: publicKey.toString(),\n                finality: 'optimistic'\n            });\n            // this function can be called multiple times and retrieve the same access key\n            // this checks to see if the access key was already retrieved and cached while\n            // the above network call was in flight. To keep nonce values in line, we return\n            // the cached access key.\n            if (this.accessKeyByPublicKeyCache[publicKey.toString()]) {\n                return { publicKey, accessKey: this.accessKeyByPublicKeyCache[publicKey.toString()] };\n            }\n            this.accessKeyByPublicKeyCache[publicKey.toString()] = accessKey;\n            return { publicKey, accessKey };\n        }\n        catch (e) {\n            if (e.type == 'AccessKeyDoesNotExist') {\n                return null;\n            }\n            throw e;\n        }\n    }\n    /**\n     * Create a new account and deploy a contract to it\n     *\n     * @param contractId NEAR account where the contract is deployed\n     * @param publicKey The public key to add to the created contract account\n     * @param data The compiled contract code\n     * @param amount of NEAR to transfer to the created contract account. Transfer enough to pay for storage https://docs.near.org/docs/concepts/storage-staking\n     */\n    async createAndDeployContract(contractId, publicKey, data, amount) {\n        const accessKey = transaction_1.fullAccessKey();\n        await this.signAndSendTransaction({\n            receiverId: contractId,\n            actions: [transaction_1.createAccount(), transaction_1.transfer(amount), transaction_1.addKey(key_pair_1.PublicKey.from(publicKey), accessKey), transaction_1.deployContract(data)]\n        });\n        const contractAccount = new Account(this.connection, contractId);\n        return contractAccount;\n    }\n    /**\n     * @param receiverId NEAR account receiving Ⓝ\n     * @param amount Amount to send in yoctoⓃ\n     */\n    async sendMoney(receiverId, amount) {\n        return this.signAndSendTransaction({\n            receiverId,\n            actions: [transaction_1.transfer(amount)]\n        });\n    }\n    /**\n     * @param newAccountId NEAR account name to be created\n     * @param publicKey A public key created from the masterAccount\n     */\n    async createAccount(newAccountId, publicKey, amount) {\n        const accessKey = transaction_1.fullAccessKey();\n        return this.signAndSendTransaction({\n            receiverId: newAccountId,\n            actions: [transaction_1.createAccount(), transaction_1.transfer(amount), transaction_1.addKey(key_pair_1.PublicKey.from(publicKey), accessKey)]\n        });\n    }\n    /**\n     * @param beneficiaryId The NEAR account that will receive the remaining Ⓝ balance from the account being deleted\n     */\n    async deleteAccount(beneficiaryId) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.deleteAccount(beneficiaryId)]\n        });\n    }\n    /**\n     * @param data The compiled contract code\n     */\n    async deployContract(data) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.deployContract(data)]\n        });\n    }\n    async functionCall(...args) {\n        if (typeof args[0] === 'string') {\n            return this.functionCallV1(args[0], args[1], args[2], args[3], args[4]);\n        }\n        else {\n            return this.functionCallV2(args[0]);\n        }\n    }\n    functionCallV1(contractId, methodName, args, gas, amount) {\n        const deprecate = depd_1.default('Account.functionCall(contractId, methodName, args, gas, amount)');\n        deprecate('use `Account.functionCall(FunctionCallOptions)` instead');\n        args = args || {};\n        this.validateArgs(args);\n        return this.signAndSendTransaction({\n            receiverId: contractId,\n            actions: [transaction_1.functionCall(methodName, args, gas || constants_1.DEFAULT_FUNCTION_CALL_GAS, amount)]\n        });\n    }\n    functionCallV2({ contractId, methodName, args = {}, gas = constants_1.DEFAULT_FUNCTION_CALL_GAS, attachedDeposit, walletMeta, walletCallbackUrl, stringify }) {\n        this.validateArgs(args);\n        const stringifyArg = stringify === undefined ? transaction_1.stringifyJsonOrBytes : stringify;\n        return this.signAndSendTransaction({\n            receiverId: contractId,\n            actions: [transaction_1.functionCall(methodName, args, gas, attachedDeposit, stringifyArg)],\n            walletMeta,\n            walletCallbackUrl\n        });\n    }\n    /**\n     * @see {@link https://docs.near.org/docs/concepts/account#access-keys}\n     * @todo expand this API to support more options.\n     * @param publicKey A public key to be associated with the contract\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodNames The method names on the contract that should be allowed to be called. Pass null for no method names and '' or [] for any method names.\n     * @param amount Payment in yoctoⓃ that is sent to the contract during this function call\n     */\n    async addKey(publicKey, contractId, methodNames, amount) {\n        if (!methodNames) {\n            methodNames = [];\n        }\n        if (!Array.isArray(methodNames)) {\n            methodNames = [methodNames];\n        }\n        let accessKey;\n        if (!contractId) {\n            accessKey = transaction_1.fullAccessKey();\n        }\n        else {\n            accessKey = transaction_1.functionCallAccessKey(contractId, methodNames, amount);\n        }\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.addKey(key_pair_1.PublicKey.from(publicKey), accessKey)]\n        });\n    }\n    /**\n     * @param publicKey The public key to be deleted\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async deleteKey(publicKey) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.deleteKey(key_pair_1.PublicKey.from(publicKey))]\n        });\n    }\n    /**\n     * @see {@link https://docs.near.org/docs/validator/staking-overview}\n     *\n     * @param publicKey The public key for the account that's staking\n     * @param amount The account to stake in yoctoⓃ\n     */\n    async stake(publicKey, amount) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [transaction_1.stake(amount, key_pair_1.PublicKey.from(publicKey))]\n        });\n    }\n    /** @hidden */\n    validateArgs(args) {\n        const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n        if (isUint8Array) {\n            return;\n        }\n        if (Array.isArray(args) || typeof args !== 'object') {\n            throw new errors_1.PositionalArgsError();\n        }\n    }\n    /**\n     * Invoke a contract view function using the RPC API.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#call-a-contract-function}\n     *\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n     * @param args Any arguments to the view contract method, wrapped in JSON\n     * @param options.parse Parse the result of the call. Receives a Buffer (bytes array) and converts it to any object. By default result will be treated as json.\n     * @param options.stringify Convert input arguments into a bytes array. By default the input is treated as a JSON.\n     * @returns {Promise<any>}\n     */\n    async viewFunction(contractId, methodName, args = {}, { parse = parseJsonFromRawResponse, stringify = bytesJsonStringify } = {}) {\n        this.validateArgs(args);\n        const serializedArgs = stringify(args).toString('base64');\n        const result = await this.connection.provider.query({\n            request_type: 'call_function',\n            account_id: contractId,\n            method_name: methodName,\n            args_base64: serializedArgs,\n            finality: 'optimistic'\n        });\n        if (result.logs) {\n            this.printLogs(contractId, result.logs);\n        }\n        return result.result && result.result.length > 0 && parse(Buffer.from(result.result));\n    }\n    /**\n     * Returns the state (key value pairs) of this account's contract based on the key prefix.\n     * Pass an empty string for prefix if you would like to return the entire state.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-contract-state}\n     *\n     * @param prefix allows to filter which keys should be returned. Empty prefix means all keys. String prefix is utf-8 encoded.\n     * @param blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n     */\n    async viewState(prefix, blockQuery = { finality: 'optimistic' }) {\n        const { values } = await this.connection.provider.query({\n            request_type: 'view_state',\n            ...blockQuery,\n            account_id: this.accountId,\n            prefix_base64: Buffer.from(prefix).toString('base64')\n        });\n        return values.map(({ key, value }) => ({\n            key: Buffer.from(key, 'base64'),\n            value: Buffer.from(value, 'base64')\n        }));\n    }\n    /**\n     * Get all access keys for the account\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-access-key-list}\n     */\n    async getAccessKeys() {\n        const response = await this.connection.provider.query({\n            request_type: 'view_access_key_list',\n            account_id: this.accountId,\n            finality: 'optimistic'\n        });\n        // A breaking API change introduced extra information into the\n        // response, so it now returns an object with a `keys` field instead\n        // of an array: https://github.com/nearprotocol/nearcore/pull/1789\n        if (Array.isArray(response)) {\n            return response;\n        }\n        return response.keys;\n    }\n    /**\n     * Returns a list of authorized apps\n     * @todo update the response value to return all the different keys, not just app keys.\n     */\n    async getAccountDetails() {\n        // TODO: update the response value to return all the different keys, not just app keys.\n        // Also if we need this function, or getAccessKeys is good enough.\n        const accessKeys = await this.getAccessKeys();\n        const authorizedApps = accessKeys\n            .filter(item => item.access_key.permission !== 'FullAccess')\n            .map(item => {\n            const perm = item.access_key.permission;\n            return {\n                contractId: perm.FunctionCall.receiver_id,\n                amount: perm.FunctionCall.allowance,\n                publicKey: item.public_key,\n            };\n        });\n        return { authorizedApps };\n    }\n    /**\n     * Returns calculated account balance\n     */\n    async getAccountBalance() {\n        const protocolConfig = await this.connection.provider.experimental_protocolConfig({ finality: 'final' });\n        const state = await this.state();\n        const costPerByte = new bn_js_1.default(protocolConfig.runtime_config.storage_amount_per_byte);\n        const stateStaked = new bn_js_1.default(state.storage_usage).mul(costPerByte);\n        const staked = new bn_js_1.default(state.locked);\n        const totalBalance = new bn_js_1.default(state.amount).add(staked);\n        const availableBalance = totalBalance.sub(bn_js_1.default.max(staked, stateStaked));\n        return {\n            total: totalBalance.toString(),\n            stateStaked: stateStaked.toString(),\n            staked: staked.toString(),\n            available: availableBalance.toString()\n        };\n    }\n}\nexports.Account = Account;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_FUNCTION_CALL_GAS = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n// Default amount of gas to be sent with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to\n// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.\n// For discussion see https://github.com/nearprotocol/NEPs/issues/67\nexports.DEFAULT_FUNCTION_CALL_GAS = new bn_js_1.default('30000000000000');\n","'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account2FA = exports.AccountMultisig = exports.MULTISIG_CONFIRM_METHODS = exports.MULTISIG_CHANGE_METHODS = exports.MULTISIG_DEPOSIT = exports.MULTISIG_GAS = exports.MULTISIG_ALLOWANCE = exports.MULTISIG_STORAGE_KEY = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst account_1 = require(\"./account\");\nconst format_1 = require(\"./utils/format\");\nconst key_pair_1 = require(\"./utils/key_pair\");\nconst transaction_1 = require(\"./transaction\");\nconst web_1 = require(\"./utils/web\");\nexports.MULTISIG_STORAGE_KEY = '__multisigRequest';\nexports.MULTISIG_ALLOWANCE = new bn_js_1.default(format_1.parseNearAmount('1'));\n// TODO: Different gas value for different requests (can reduce gas usage dramatically)\nexports.MULTISIG_GAS = new bn_js_1.default('100000000000000');\nexports.MULTISIG_DEPOSIT = new bn_js_1.default('0');\nexports.MULTISIG_CHANGE_METHODS = ['add_request', 'add_request_and_confirm', 'delete_request', 'confirm'];\nexports.MULTISIG_CONFIRM_METHODS = ['confirm'];\n// in memory request cache for node w/o localStorage\nconst storageFallback = {\n    [exports.MULTISIG_STORAGE_KEY]: null\n};\nclass AccountMultisig extends account_1.Account {\n    constructor(connection, accountId, options) {\n        super(connection, accountId);\n        this.storage = options.storage;\n        this.onAddRequestResult = options.onAddRequestResult;\n    }\n    async signAndSendTransactionWithAccount(receiverId, actions) {\n        return super.signAndSendTransaction({ receiverId, actions });\n    }\n    signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            return this._signAndSendTransaction({ receiverId: args[0], actions: args[1] });\n        }\n        return this._signAndSendTransaction(args[0]);\n    }\n    async _signAndSendTransaction({ receiverId, actions }) {\n        const { accountId } = this;\n        const args = Buffer.from(JSON.stringify({\n            request: {\n                receiver_id: receiverId,\n                actions: convertActions(actions, accountId, receiverId)\n            }\n        }));\n        let result;\n        try {\n            result = await super.signAndSendTransaction({\n                receiverId: accountId,\n                actions: [\n                    transaction_1.functionCall('add_request_and_confirm', args, exports.MULTISIG_GAS, exports.MULTISIG_DEPOSIT)\n                ]\n            });\n        }\n        catch (e) {\n            if (e.toString().includes('Account has too many active requests. Confirm or delete some')) {\n                await this.deleteUnconfirmedRequests();\n                return await this.signAndSendTransaction(receiverId, actions);\n            }\n            throw e;\n        }\n        // TODO: Are following even needed? Seems like it throws on error already\n        if (!result.status) {\n            throw new Error('Request failed');\n        }\n        const status = { ...result.status };\n        if (!status.SuccessValue || typeof status.SuccessValue !== 'string') {\n            throw new Error('Request failed');\n        }\n        this.setRequest({\n            accountId,\n            actions,\n            requestId: parseInt(Buffer.from(status.SuccessValue, 'base64').toString('ascii'), 10)\n        });\n        if (this.onAddRequestResult) {\n            await this.onAddRequestResult(result);\n        }\n        // NOTE there is no await on purpose to avoid blocking for 2fa\n        this.deleteUnconfirmedRequests();\n        return result;\n    }\n    async deleteUnconfirmedRequests() {\n        // TODO: Delete in batch, don't delete unexpired\n        // TODO: Delete in batch, don't delete unexpired (can reduce gas usage dramatically)\n        const request_ids = await this.getRequestIds();\n        const { requestId } = this.getRequest();\n        for (const requestIdToDelete of request_ids) {\n            if (requestIdToDelete == requestId) {\n                continue;\n            }\n            try {\n                await super.signAndSendTransaction({\n                    receiverId: this.accountId,\n                    actions: [transaction_1.functionCall('delete_request', { request_id: requestIdToDelete }, exports.MULTISIG_GAS, exports.MULTISIG_DEPOSIT)]\n                });\n            }\n            catch (e) {\n                console.warn('Attempt to delete an earlier request before 15 minutes failed. Will try again.');\n            }\n        }\n    }\n    // helpers\n    async getRequestIds() {\n        // TODO: Read requests from state to allow filtering by expiration time\n        // TODO: https://github.com/near/core-contracts/blob/305d1db4f4f2cf5ce4c1ef3479f7544957381f11/multisig/src/lib.rs#L84\n        return this.viewFunction(this.accountId, 'list_request_ids');\n    }\n    getRequest() {\n        if (this.storage) {\n            return JSON.parse(this.storage.getItem(exports.MULTISIG_STORAGE_KEY) || '{}');\n        }\n        return storageFallback[exports.MULTISIG_STORAGE_KEY];\n    }\n    setRequest(data) {\n        if (this.storage) {\n            return this.storage.setItem(exports.MULTISIG_STORAGE_KEY, JSON.stringify(data));\n        }\n        storageFallback[exports.MULTISIG_STORAGE_KEY] = data;\n    }\n}\nexports.AccountMultisig = AccountMultisig;\nclass Account2FA extends AccountMultisig {\n    constructor(connection, accountId, options) {\n        super(connection, accountId, options);\n        this.helperUrl = 'https://helper.testnet.near.org';\n        this.helperUrl = options.helperUrl || this.helperUrl;\n        this.storage = options.storage;\n        this.sendCode = options.sendCode || this.sendCodeDefault;\n        this.getCode = options.getCode || this.getCodeDefault;\n        this.verifyCode = options.verifyCode || this.verifyCodeDefault;\n        this.onConfirmResult = options.onConfirmResult;\n    }\n    async signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            const deprecate = depd_1.default('Account.signAndSendTransaction(receiverId, actions');\n            deprecate('use `Account2FA.signAndSendTransaction(SignAndSendTransactionOptions)` instead');\n            return this.__signAndSendTransaction({ receiverId: args[0], actions: args[1] });\n        }\n        else {\n            return this.__signAndSendTransaction(args[0]);\n        }\n    }\n    async __signAndSendTransaction({ receiverId, actions }) {\n        await super.signAndSendTransaction({ receiverId, actions });\n        // TODO: Should following override onRequestResult in superclass instead of doing custom signAndSendTransaction?\n        await this.sendCode();\n        const result = await this.promptAndVerify();\n        if (this.onConfirmResult) {\n            await this.onConfirmResult(result);\n        }\n        return result;\n    }\n    // default helpers for CH deployments of multisig\n    async deployMultisig(contractBytes) {\n        const { accountId } = this;\n        const seedOrLedgerKey = (await this.getRecoveryMethods()).data\n            .filter(({ kind, publicKey }) => (kind === 'phrase' || kind === 'ledger') && publicKey !== null)\n            .map((rm) => rm.publicKey);\n        const fak2lak = (await this.getAccessKeys())\n            .filter(({ public_key, access_key: { permission } }) => permission === 'FullAccess' && !seedOrLedgerKey.includes(public_key))\n            .map((ak) => ak.public_key)\n            .map(toPK);\n        const confirmOnlyKey = toPK((await this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n        const newArgs = Buffer.from(JSON.stringify({ 'num_confirmations': 2 }));\n        const actions = [\n            ...fak2lak.map((pk) => transaction_1.deleteKey(pk)),\n            ...fak2lak.map((pk) => transaction_1.addKey(pk, transaction_1.functionCallAccessKey(accountId, exports.MULTISIG_CHANGE_METHODS, null))),\n            transaction_1.addKey(confirmOnlyKey, transaction_1.functionCallAccessKey(accountId, exports.MULTISIG_CONFIRM_METHODS, null)),\n            transaction_1.deployContract(contractBytes),\n        ];\n        if ((await this.state()).code_hash === '11111111111111111111111111111111') {\n            actions.push(transaction_1.functionCall('new', newArgs, exports.MULTISIG_GAS, exports.MULTISIG_DEPOSIT));\n        }\n        console.log('deploying multisig contract for', accountId);\n        return await super.signAndSendTransactionWithAccount(accountId, actions);\n    }\n    async disable(contractBytes) {\n        const { accountId } = this;\n        const accessKeys = await this.getAccessKeys();\n        const lak2fak = accessKeys\n            .filter(({ access_key }) => access_key.permission !== 'FullAccess')\n            .filter(({ access_key }) => {\n            const perm = access_key.permission.FunctionCall;\n            return perm.receiver_id === accountId &&\n                perm.method_names.length === 4 &&\n                perm.method_names.includes('add_request_and_confirm');\n        });\n        const confirmOnlyKey = key_pair_1.PublicKey.from((await this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n        const actions = [\n            transaction_1.deleteKey(confirmOnlyKey),\n            ...lak2fak.map(({ public_key }) => transaction_1.deleteKey(key_pair_1.PublicKey.from(public_key))),\n            ...lak2fak.map(({ public_key }) => transaction_1.addKey(key_pair_1.PublicKey.from(public_key), null)),\n            transaction_1.deployContract(contractBytes),\n        ];\n        console.log('disabling 2fa for', accountId);\n        return await this.signAndSendTransaction({\n            receiverId: accountId,\n            actions\n        });\n    }\n    async sendCodeDefault() {\n        const { accountId } = this;\n        const { requestId } = this.getRequest();\n        const method = await this.get2faMethod();\n        await this.postSignedJson('/2fa/send', {\n            accountId,\n            method,\n            requestId,\n        });\n        return requestId;\n    }\n    async getCodeDefault(method) {\n        throw new Error('There is no getCode callback provided. Please provide your own in AccountMultisig constructor options. It has a parameter method where method.kind is \"email\" or \"phone\".');\n    }\n    async promptAndVerify() {\n        const method = await this.get2faMethod();\n        const securityCode = await this.getCode(method);\n        try {\n            const result = await this.verifyCode(securityCode);\n            // TODO: Parse error from result for real (like in normal account.signAndSendTransaction)\n            return result;\n        }\n        catch (e) {\n            console.warn('Error validating security code:', e);\n            if (e.toString().includes('invalid 2fa code provided') || e.toString().includes('2fa code not valid')) {\n                return await this.promptAndVerify();\n            }\n            throw e;\n        }\n    }\n    async verifyCodeDefault(securityCode) {\n        const { accountId } = this;\n        const request = this.getRequest();\n        if (!request) {\n            throw new Error('no request pending');\n        }\n        const { requestId } = request;\n        return await this.postSignedJson('/2fa/verify', {\n            accountId,\n            securityCode,\n            requestId\n        });\n    }\n    async getRecoveryMethods() {\n        const { accountId } = this;\n        return {\n            accountId,\n            data: await this.postSignedJson('/account/recoveryMethods', { accountId })\n        };\n    }\n    async get2faMethod() {\n        let { data } = await this.getRecoveryMethods();\n        if (data && data.length) {\n            data = data.find((m) => m.kind.indexOf('2fa-') === 0);\n        }\n        if (!data)\n            return null;\n        const { kind, detail } = data;\n        return { kind, detail };\n    }\n    async signatureFor() {\n        const { accountId } = this;\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockNumber = block.header.height.toString();\n        const signed = await this.connection.signer.signMessage(Buffer.from(blockNumber), accountId, this.connection.networkId);\n        const blockNumberSignature = Buffer.from(signed.signature).toString('base64');\n        return { blockNumber, blockNumberSignature };\n    }\n    async postSignedJson(path, body) {\n        return await web_1.fetchJson(this.helperUrl + path, JSON.stringify({\n            ...body,\n            ...(await this.signatureFor())\n        }));\n    }\n}\nexports.Account2FA = Account2FA;\n// helpers\nconst toPK = (pk) => key_pair_1.PublicKey.from(pk);\nconst convertPKForContract = (pk) => pk.toString().replace('ed25519:', '');\nconst convertActions = (actions, accountId, receiverId) => actions.map((a) => {\n    const type = a.enum;\n    const { gas, publicKey, methodName, args, deposit, accessKey, code } = a[type];\n    const action = {\n        type: type[0].toUpperCase() + type.substr(1),\n        gas: (gas && gas.toString()) || undefined,\n        public_key: (publicKey && convertPKForContract(publicKey)) || undefined,\n        method_name: methodName,\n        args: (args && Buffer.from(args).toString('base64')) || undefined,\n        code: (code && Buffer.from(code).toString('base64')) || undefined,\n        amount: (deposit && deposit.toString()) || undefined,\n        deposit: (deposit && deposit.toString()) || '0',\n        permission: undefined,\n    };\n    if (accessKey) {\n        if (receiverId === accountId && accessKey.permission.enum !== 'fullAccess') {\n            action.permission = {\n                receiver_id: accountId,\n                allowance: exports.MULTISIG_ALLOWANCE.toString(),\n                method_names: exports.MULTISIG_CHANGE_METHODS,\n            };\n        }\n        if (accessKey.permission.enum === 'functionCall') {\n            const { receiverId: receiver_id, methodNames: method_names, allowance } = accessKey.permission.functionCall;\n            action.permission = {\n                receiver_id,\n                allowance: (allowance && allowance.toString()) || undefined,\n                method_names\n            };\n        }\n    }\n    return action;\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UrlAccountCreator = exports.LocalAccountCreator = exports.AccountCreator = void 0;\nconst web_1 = require(\"./utils/web\");\n/**\n * Account creator provides an interface for implementations to actually create accounts\n */\nclass AccountCreator {\n}\nexports.AccountCreator = AccountCreator;\nclass LocalAccountCreator extends AccountCreator {\n    constructor(masterAccount, initialBalance) {\n        super();\n        this.masterAccount = masterAccount;\n        this.initialBalance = initialBalance;\n    }\n    /**\n     * Creates an account using a masterAccount, meaning the new account is created from an existing account\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    async createAccount(newAccountId, publicKey) {\n        await this.masterAccount.createAccount(newAccountId, publicKey, this.initialBalance);\n    }\n}\nexports.LocalAccountCreator = LocalAccountCreator;\nclass UrlAccountCreator extends AccountCreator {\n    constructor(connection, helperUrl) {\n        super();\n        this.connection = connection;\n        this.helperUrl = helperUrl;\n    }\n    /**\n     * Creates an account using a helperUrl\n     * This is [hosted here](https://helper.nearprotocol.com) or set up locally with the [near-contract-helper](https://github.com/nearprotocol/near-contract-helper) repository\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    async createAccount(newAccountId, publicKey) {\n        await web_1.fetchJson(`${this.helperUrl}/account`, JSON.stringify({ newAccountId, newAccountPublicKey: publicKey.toString() }));\n    }\n}\nexports.UrlAccountCreator = UrlAccountCreator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connection = void 0;\nconst providers_1 = require(\"./providers\");\nconst signer_1 = require(\"./signer\");\n/**\n * @param config Contains connection info details\n * @returns {Provider}\n */\nfunction getProvider(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'JsonRpcProvider': return new providers_1.JsonRpcProvider({ ...config.args });\n        default: throw new Error(`Unknown provider type ${config.type}`);\n    }\n}\n/**\n * @param config Contains connection info details\n * @returns {Signer}\n */\nfunction getSigner(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'InMemorySigner': {\n            return new signer_1.InMemorySigner(config.keyStore);\n        }\n        default: throw new Error(`Unknown signer type ${config.type}`);\n    }\n}\n/**\n * Connects an account to a given network via a given provider\n */\nclass Connection {\n    constructor(networkId, provider, signer) {\n        this.networkId = networkId;\n        this.provider = provider;\n        this.signer = signer;\n    }\n    /**\n     * @param config Contains connection info details\n     */\n    static fromConfig(config) {\n        const provider = getProvider(config.provider);\n        const signer = getSigner(config.signer);\n        return new Connection(config.networkId, provider, signer);\n    }\n}\nexports.Connection = Connection;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemorySigner = exports.Signer = void 0;\nconst js_sha256_1 = __importDefault(require(\"js-sha256\"));\nconst key_pair_1 = require(\"./utils/key_pair\");\nconst in_memory_key_store_1 = require(\"./key_stores/in_memory_key_store\");\n/**\n * General signing interface, can be used for in memory signing, RPC singing, external wallet, HSM, etc.\n */\nclass Signer {\n}\nexports.Signer = Signer;\n/**\n * Signs using in memory key store.\n */\nclass InMemorySigner extends Signer {\n    constructor(keyStore) {\n        super();\n        this.keyStore = keyStore;\n    }\n    /**\n     * Creates a single account Signer instance with account, network and keyPair provided.\n     *\n     * Intended to be useful for temporary keys (e.g. claiming a Linkdrop).\n     *\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account to assign the key pair to\n     * @param keyPair The keyPair to use for signing\n     */\n    static async fromKeyPair(networkId, accountId, keyPair) {\n        const keyStore = new in_memory_key_store_1.InMemoryKeyStore();\n        await keyStore.setKey(networkId, accountId, keyPair);\n        return new InMemorySigner(keyStore);\n    }\n    /**\n     * Creates a public key for the account given\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>}\n     */\n    async createKey(accountId, networkId) {\n        const keyPair = key_pair_1.KeyPair.fromRandom('ed25519');\n        await this.keyStore.setKey(networkId, accountId, keyPair);\n        return keyPair.getPublicKey();\n    }\n    /**\n     * Gets the existing public key for a given account\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>} Returns the public key or null if not found\n     */\n    async getPublicKey(accountId, networkId) {\n        const keyPair = await this.keyStore.getKey(networkId, accountId);\n        if (keyPair === null) {\n            return null;\n        }\n        return keyPair.getPublicKey();\n    }\n    /**\n     * @param message A message to be signed, typically a serialized transaction\n     * @param accountId the NEAR account signing the message\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<Signature>}\n     */\n    async signMessage(message, accountId, networkId) {\n        const hash = new Uint8Array(js_sha256_1.default.sha256.array(message));\n        if (!accountId) {\n            throw new Error('InMemorySigner requires provided account id');\n        }\n        const keyPair = await this.keyStore.getKey(networkId, accountId);\n        if (keyPair === null) {\n            throw new Error(`Key for ${accountId} not found in ${networkId}`);\n        }\n        return keyPair.sign(hash);\n    }\n    toString() {\n        return `InMemorySigner(${this.keyStore})`;\n    }\n}\nexports.InMemorySigner = InMemorySigner;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst providers_1 = require(\"./providers\");\nconst errors_1 = require(\"./utils/errors\");\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        }\n    }[name];\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === '[object Object]';\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#contract}\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\nclass Contract {\n    /**\n     * @param account NEAR account to sign change method transactions\n     * @param contractId NEAR account id where the contract is deployed\n     * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n     */\n    constructor(account, contractId, options) {\n        this.account = account;\n        this.contractId = contractId;\n        const { viewMethods = [], changeMethods = [] } = options;\n        viewMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, async (args = {}, options = {}, ...ignored) => {\n                    if (ignored.length || !(isObject(args) || isUint8Array(args)) || !isObject(options)) {\n                        throw new errors_1.PositionalArgsError();\n                    }\n                    return this.account.viewFunction(this.contractId, methodName, args, options);\n                })\n            });\n        });\n        changeMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, async (...args) => {\n                    if (args.length && (args.length > 3 || !(isObject(args[0]) || isUint8Array(args[0])))) {\n                        throw new errors_1.PositionalArgsError();\n                    }\n                    if (args.length > 1 || !(args[0] && args[0].args)) {\n                        const deprecate = depd_1.default('contract.methodName(args, gas, amount)');\n                        deprecate('use `contract.methodName({ args, gas?, amount?, callbackUrl?, meta? })` instead');\n                        return this._changeMethod({\n                            methodName,\n                            args: args[0],\n                            gas: args[1],\n                            amount: args[2]\n                        });\n                    }\n                    return this._changeMethod({ methodName, ...args[0] });\n                })\n            });\n        });\n    }\n    async _changeMethod({ args, methodName, gas, amount, meta, callbackUrl }) {\n        validateBNLike({ gas, amount });\n        const rawResult = await this.account.functionCall({\n            contractId: this.contractId,\n            methodName,\n            args,\n            gas,\n            attachedDeposit: amount,\n            walletMeta: meta,\n            walletCallbackUrl: callbackUrl\n        });\n        return providers_1.getTransactionLastResult(rawResult);\n    }\n}\nexports.Contract = Contract;\n/**\n * Validation on arguments being a big number from bn.js\n * Throws if an argument is not in BN format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = 'number, decimal string or BN';\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && !bn_js_1.default.isBN(argValue) && isNaN(argValue)) {\n            throw new errors_1.ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Near = void 0;\n/**\n * This module contains the main class developers will use to interact with NEAR.\n * The {@link Near} class is used to interact with {@link Account | Accounts} through the {@link JsonRpcProvider.JsonRpcProvider | JsonRpcProvider}.\n * It is configured via the {@link NearConfig}.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}\n *\n * @module near\n */\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst account_1 = require(\"./account\");\nconst connection_1 = require(\"./connection\");\nconst contract_1 = require(\"./contract\");\nconst account_creator_1 = require(\"./account_creator\");\n/**\n * This is the main class developers should use to interact with NEAR.\n * @example\n * ```js\n * const near = new Near(config);\n * ```\n */\nclass Near {\n    constructor(config) {\n        this.config = config;\n        this.connection = connection_1.Connection.fromConfig({\n            networkId: config.networkId,\n            provider: { type: 'JsonRpcProvider', args: { url: config.nodeUrl, headers: config.headers } },\n            signer: config.signer || { type: 'InMemorySigner', keyStore: config.keyStore || config.deps.keyStore }\n        });\n        if (config.masterAccount) {\n            // TODO: figure out better way of specifiying initial balance.\n            // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n            const initialBalance = config.initialBalance ? new bn_js_1.default(config.initialBalance) : new bn_js_1.default('500000000000000000000000000');\n            this.accountCreator = new account_creator_1.LocalAccountCreator(new account_1.Account(this.connection, config.masterAccount), initialBalance);\n        }\n        else if (config.helperUrl) {\n            this.accountCreator = new account_creator_1.UrlAccountCreator(this.connection, config.helperUrl);\n        }\n        else {\n            this.accountCreator = null;\n        }\n    }\n    /**\n     * @param accountId near accountId used to interact with the network.\n     */\n    async account(accountId) {\n        const account = new account_1.Account(this.connection, accountId);\n        return account;\n    }\n    /**\n     * Create an account using the {@link AccountCreator}. Either:\n     * * using a masterAccount with {@link LocalAccountCreator}\n     * * using the helperUrl with {@link UrlAccountCreator}\n     * @see {@link NearConfig.masterAccount} and {@link NearConfig.helperUrl}-\n     *\n     * @param accountId\n     * @param publicKey\n     */\n    async createAccount(accountId, publicKey) {\n        if (!this.accountCreator) {\n            throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n        }\n        await this.accountCreator.createAccount(accountId, publicKey);\n        return new account_1.Account(this.connection, accountId);\n    }\n    /**\n     * @deprecated Use {@link Contract} instead.\n     * @param contractId\n     * @param options\n     */\n    async loadContract(contractId, options) {\n        const account = new account_1.Account(this.connection, options.sender);\n        return new contract_1.Contract(account, contractId, options);\n    }\n    /**\n     * @deprecated Use {@link Account.sendMoney} instead.\n     * @param amount\n     * @param originator\n     * @param receiver\n     */\n    async sendTokens(amount, originator, receiver) {\n        console.warn('near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead.');\n        const account = new account_1.Account(this.connection, originator);\n        const result = await account.sendMoney(receiver, amount);\n        return result.transaction_outcome.id;\n    }\n}\nexports.Near = Near;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectedWalletAccount = exports.WalletAccount = exports.WalletConnection = void 0;\n/**\n * The classes in this module are used in conjunction with the {@link BrowserLocalStorageKeyStore}. This module exposes two classes:\n * * {@link WalletConnection} which redirects users to {@link https://docs.near.org/docs/tools/near-wallet | NEAR Wallet} for key management.\n * * {@link ConnectedWalletAccount} is an {@link Account} implementation that uses {@link WalletConnection} to get keys\n *\n * @module walletAccount\n */\nconst depd_1 = __importDefault(require(\"depd\"));\nconst account_1 = require(\"./account\");\nconst transaction_1 = require(\"./transaction\");\nconst utils_1 = require(\"./utils\");\nconst borsh_1 = require(\"borsh\");\nconst borsh_2 = require(\"borsh\");\nconst LOGIN_WALLET_URL_SUFFIX = '/login/';\nconst MULTISIG_HAS_METHOD = 'add_request_and_confirm';\nconst LOCAL_STORAGE_KEY_SUFFIX = '_wallet_auth_key';\nconst PENDING_ACCESS_KEY_PREFIX = 'pending_key'; // browser storage key for a pending access key (i.e. key has been generated but we are not sure it was added yet)\n/**\n * This class is used in conjunction with the {@link BrowserLocalStorageKeyStore}.\n * It redirects users to {@link https://docs.near.org/docs/tools/near-wallet | NEAR Wallet} for key management.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#wallet}\n * @example\n * ```js\n * // create new WalletConnection instance\n * const wallet = new WalletConnection(near, 'my-app');\n *\n * // If not signed in redirect to the NEAR wallet to sign in\n * // keys will be stored in the BrowserLocalStorageKeyStore\n * if(!wallet.isSingnedIn()) return wallet.requestSignIn()\n * ```\n */\nclass WalletConnection {\n    constructor(near, appKeyPrefix) {\n        this._near = near;\n        const authDataKey = appKeyPrefix + LOCAL_STORAGE_KEY_SUFFIX;\n        const authData = JSON.parse(window.localStorage.getItem(authDataKey));\n        this._networkId = near.config.networkId;\n        this._walletBaseUrl = near.config.walletUrl;\n        appKeyPrefix = appKeyPrefix || near.config.contractName || 'default';\n        this._keyStore = near.connection.signer.keyStore;\n        this._authData = authData || { allKeys: [] };\n        this._authDataKey = authDataKey;\n        if (!this.isSignedIn()) {\n            this._completeSignInWithAccessKey();\n        }\n    }\n    /**\n     * Returns true, if this WalletAccount is authorized with the wallet.\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * wallet.isSignedIn();\n     * ```\n     */\n    isSignedIn() {\n        return !!this._authData.accountId;\n    }\n    /**\n     * Returns authorized Account ID.\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * wallet.getAccountId();\n     * ```\n     */\n    getAccountId() {\n        return this._authData.accountId || '';\n    }\n    /**\n     * Redirects current page to the wallet authentication page.\n     * @param options An optional options object\n     * @param options.contractId The NEAR account where the contract is deployed\n     * @param options.successUrl URL to redirect upon success. Default: current url\n     * @param options.failureUrl URL to redirect upon failure. Default: current url\n     *\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * // redirects to the NEAR Wallet\n     * wallet.requestSignIn({ contractId: 'account-with-deploy-contract.near' });\n     * ```\n     */\n    async requestSignIn(contractIdOrOptions = {}, title, successUrl, failureUrl) {\n        let options;\n        if (typeof contractIdOrOptions === 'string') {\n            const deprecate = depd_1.default('requestSignIn(contractId, title)');\n            deprecate('`title` ignored; use `requestSignIn({ contractId, methodNames, successUrl, failureUrl })` instead');\n            options = { contractId: contractIdOrOptions, successUrl, failureUrl };\n        }\n        else {\n            options = contractIdOrOptions;\n        }\n        const currentUrl = new URL(window.location.href);\n        const newUrl = new URL(this._walletBaseUrl + LOGIN_WALLET_URL_SUFFIX);\n        newUrl.searchParams.set('success_url', options.successUrl || currentUrl.href);\n        newUrl.searchParams.set('failure_url', options.failureUrl || currentUrl.href);\n        if (options.contractId) {\n            /* Throws exception if contract account does not exist */\n            const contractAccount = await this._near.account(options.contractId);\n            await contractAccount.state();\n            newUrl.searchParams.set('contract_id', options.contractId);\n            const accessKey = utils_1.KeyPair.fromRandom('ed25519');\n            newUrl.searchParams.set('public_key', accessKey.getPublicKey().toString());\n            await this._keyStore.setKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + accessKey.getPublicKey(), accessKey);\n        }\n        if (options.methodNames) {\n            options.methodNames.forEach(methodName => {\n                newUrl.searchParams.append('methodNames', methodName);\n            });\n        }\n        window.location.assign(newUrl.toString());\n    }\n    async requestSignTransactions(...args) {\n        if (Array.isArray(args[0])) {\n            const deprecate = depd_1.default('WalletConnection.requestSignTransactions(transactions, callbackUrl, meta)');\n            deprecate('use `WalletConnection.requestSignTransactions(RequestSignTransactionsOptions)` instead');\n            return this._requestSignTransactions({\n                transactions: args[0],\n                callbackUrl: args[1],\n                meta: args[2]\n            });\n        }\n        return this._requestSignTransactions(args[0]);\n    }\n    async _requestSignTransactions({ transactions, meta, callbackUrl }) {\n        const currentUrl = new URL(window.location.href);\n        const newUrl = new URL('sign', this._walletBaseUrl);\n        newUrl.searchParams.set('transactions', transactions\n            .map(transaction => borsh_2.serialize(transaction_1.SCHEMA, transaction))\n            .map(serialized => Buffer.from(serialized).toString('base64'))\n            .join(','));\n        newUrl.searchParams.set('callbackUrl', callbackUrl || currentUrl.href);\n        if (meta)\n            newUrl.searchParams.set('meta', meta);\n        window.location.assign(newUrl.toString());\n    }\n    /**\n     * @hidden\n     * Complete sign in for a given account id and public key. To be invoked by the app when getting a callback from the wallet.\n     */\n    async _completeSignInWithAccessKey() {\n        const currentUrl = new URL(window.location.href);\n        const publicKey = currentUrl.searchParams.get('public_key') || '';\n        const allKeys = (currentUrl.searchParams.get('all_keys') || '').split(',');\n        const accountId = currentUrl.searchParams.get('account_id') || '';\n        // TODO: Handle errors during login\n        if (accountId) {\n            this._authData = {\n                accountId,\n                allKeys\n            };\n            window.localStorage.setItem(this._authDataKey, JSON.stringify(this._authData));\n            if (publicKey) {\n                await this._moveKeyFromTempToPermanent(accountId, publicKey);\n            }\n        }\n        currentUrl.searchParams.delete('public_key');\n        currentUrl.searchParams.delete('all_keys');\n        currentUrl.searchParams.delete('account_id');\n        currentUrl.searchParams.delete('meta');\n        currentUrl.searchParams.delete('transactionHashes');\n        window.history.replaceState({}, document.title, currentUrl.toString());\n    }\n    /**\n     * @hidden\n     * @param accountId The NEAR account owning the given public key\n     * @param publicKey The public key being set to the key store\n     */\n    async _moveKeyFromTempToPermanent(accountId, publicKey) {\n        const keyPair = await this._keyStore.getKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n        await this._keyStore.setKey(this._networkId, accountId, keyPair);\n        await this._keyStore.removeKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n    }\n    /**\n     * Sign out from the current account\n     * @example\n     * walletAccount.signOut();\n     */\n    signOut() {\n        this._authData = {};\n        window.localStorage.removeItem(this._authDataKey);\n    }\n    /**\n     * Returns the current connected wallet account\n     */\n    account() {\n        if (!this._connectedAccount) {\n            this._connectedAccount = new ConnectedWalletAccount(this, this._near.connection, this._authData.accountId);\n        }\n        return this._connectedAccount;\n    }\n}\nexports.WalletConnection = WalletConnection;\nexports.WalletAccount = WalletConnection;\n/**\n * {@link Account} implementation which redirects to wallet using {@link WalletConnection} when no local key is available.\n */\nclass ConnectedWalletAccount extends account_1.Account {\n    constructor(walletConnection, connection, accountId) {\n        super(connection, accountId);\n        this.walletConnection = walletConnection;\n    }\n    // Overriding Account methods\n    /**\n     * Sign a transaction by redirecting to the NEAR Wallet\n     * @see {@link WalletConnection.requestSignTransactions}\n     */\n    signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            return this._signAndSendTransaction({ receiverId: args[0], actions: args[1] });\n        }\n        return this._signAndSendTransaction(args[0]);\n    }\n    async _signAndSendTransaction({ receiverId, actions, walletMeta, walletCallbackUrl = window.location.href }) {\n        const localKey = await this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n        let accessKey = await this.accessKeyForTransaction(receiverId, actions, localKey);\n        if (!accessKey) {\n            throw new Error(`Cannot find matching key for transaction sent to ${receiverId}`);\n        }\n        if (localKey && localKey.toString() === accessKey.public_key) {\n            try {\n                return await super.signAndSendTransaction({ receiverId, actions });\n            }\n            catch (e) {\n                if (e.type === 'NotEnoughAllowance') {\n                    accessKey = await this.accessKeyForTransaction(receiverId, actions);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockHash = borsh_1.baseDecode(block.header.hash);\n        const publicKey = utils_1.PublicKey.from(accessKey.public_key);\n        // TODO: Cache & listen for nonce updates for given access key\n        const nonce = accessKey.access_key.nonce + 1;\n        const transaction = transaction_1.createTransaction(this.accountId, publicKey, receiverId, nonce, actions, blockHash);\n        await this.walletConnection.requestSignTransactions({\n            transactions: [transaction],\n            meta: walletMeta,\n            callbackUrl: walletCallbackUrl\n        });\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                reject(new Error('Failed to redirect to sign transaction'));\n            }, 1000);\n        });\n        // TODO: Aggregate multiple transaction request with \"debounce\".\n        // TODO: Introduce TrasactionQueue which also can be used to watch for status?\n    }\n    /**\n     * Check if given access key allows the function call or method attempted in transaction\n     * @param accessKey Array of {access_key: AccessKey, public_key: PublicKey} items\n     * @param receiverId The NEAR account attempting to have access\n     * @param actions The action(s) needed to be checked for access\n     */\n    async accessKeyMatchesTransaction(accessKey, receiverId, actions) {\n        const { access_key: { permission } } = accessKey;\n        if (permission === 'FullAccess') {\n            return true;\n        }\n        if (permission.FunctionCall) {\n            const { receiver_id: allowedReceiverId, method_names: allowedMethods } = permission.FunctionCall;\n            /********************************\n            Accept multisig access keys and let wallets attempt to signAndSendTransaction\n            If an access key has itself as receiverId and method permission add_request_and_confirm, then it is being used in a wallet with multisig contract: https://github.com/near/core-contracts/blob/671c05f09abecabe7a7e58efe942550a35fc3292/multisig/src/lib.rs#L149-L153\n            ********************************/\n            if (allowedReceiverId === this.accountId && allowedMethods.includes(MULTISIG_HAS_METHOD)) {\n                return true;\n            }\n            if (allowedReceiverId === receiverId) {\n                if (actions.length !== 1) {\n                    return false;\n                }\n                const [{ functionCall }] = actions;\n                return functionCall &&\n                    (!functionCall.deposit || functionCall.deposit.toString() === '0') && // TODO: Should support charging amount smaller than allowance?\n                    (allowedMethods.length === 0 || allowedMethods.includes(functionCall.methodName));\n                // TODO: Handle cases when allowance doesn't have enough to pay for gas\n            }\n        }\n        // TODO: Support other permissions than FunctionCall\n        return false;\n    }\n    /**\n     * Helper function returning the access key (if it exists) to the receiver that grants the designated permission\n     * @param receiverId The NEAR account seeking the access key for a transaction\n     * @param actions The action(s) sought to gain access to\n     * @param localKey A local public key provided to check for access\n     * @returns Promise<any>\n     */\n    async accessKeyForTransaction(receiverId, actions, localKey) {\n        const accessKeys = await this.getAccessKeys();\n        if (localKey) {\n            const accessKey = accessKeys.find(key => key.public_key.toString() === localKey.toString());\n            if (accessKey && await this.accessKeyMatchesTransaction(accessKey, receiverId, actions)) {\n                return accessKey;\n            }\n        }\n        const walletKeys = this.walletConnection._authData.allKeys;\n        for (const accessKey of accessKeys) {\n            if (walletKeys.indexOf(accessKey.public_key) !== -1 && await this.accessKeyMatchesTransaction(accessKey, receiverId, actions)) {\n                return accessKey;\n            }\n        }\n        return null;\n    }\n}\nexports.ConnectedWalletAccount = ConnectedWalletAccount;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connect = void 0;\n/**\n * Connect to NEAR using the provided configuration.\n *\n * {@link ConnectConfig.networkId} and {@link ConnectConfig.nodeUrl} are required.\n *\n * To sign transactions you can also pass: {@link ConnectConfig.keyStore}\n *\n * Both are passed they are prioritize in that order.\n *\n * @see {@link ConnectConfig}\n * @example\n * ```js\n * async function initNear() {\n *   const near = await connect({\n *      networkId: 'testnet',\n *      nodeUrl: 'https://rpc.testnet.near.org'\n *   })\n * }\n * ```\n *\n * @module browserConnect\n */\nconst near_1 = require(\"./near\");\n/**\n * Initialize connection to Near network.\n */\nasync function connect(config) {\n    return new near_1.Near(config);\n}\nexports.connect = connect;\n","module.exports = require(\"./lib\");","require(\"capability/es5\");\r\n\r\nvar capability = require(\"capability\");\r\n\r\nvar polyfill;\r\nif (capability(\"Error.captureStackTrace\"))\r\n    polyfill = require(\"./v8\");\r\nelse if (capability(\"Error.prototype.stack\"))\r\n    polyfill = require(\"./non-v8/index\");\r\nelse\r\n    polyfill = require(\"./unsupported\");\r\n\r\nmodule.exports = polyfill();","require(\".\").check(\"es5\");","require(\"./lib/definitions\");\r\nmodule.exports = require(\"./lib\");\r\n","var capability = require(\".\"),\r\n    define = capability.define,\r\n    test = capability.test;\r\n\r\ndefine(\"strict mode\", function () {\r\n    return (this === undefined);\r\n});\r\n\r\ndefine(\"arguments.callee.caller\", function () {\r\n    try {\r\n        return (function () {\r\n                return arguments.callee.caller;\r\n            })() === arguments.callee;\r\n    } catch (strictModeIsEnforced) {\r\n        return false;\r\n    }\r\n});\r\n\r\ndefine(\"es5\", function () {\r\n    return test(\"Array.prototype.forEach\") &&\r\n        test(\"Array.prototype.map\") &&\r\n        test(\"Function.prototype.bind\") &&\r\n        test(\"Object.create\") &&\r\n        test(\"Object.defineProperties\") &&\r\n        test(\"Object.defineProperty\") &&\r\n        test(\"Object.prototype.hasOwnProperty\");\r\n});\r\n\r\ndefine(\"Array.prototype.forEach\", function () {\r\n    return Array.prototype.forEach;\r\n});\r\n\r\ndefine(\"Array.prototype.map\", function () {\r\n    return Array.prototype.map;\r\n});\r\n\r\ndefine(\"Function.prototype.bind\", function () {\r\n    return Function.prototype.bind;\r\n});\r\n\r\ndefine(\"Object.create\", function () {\r\n    return Object.create;\r\n});\r\n\r\ndefine(\"Object.defineProperties\", function () {\r\n    return Object.defineProperties;\r\n});\r\n\r\ndefine(\"Object.defineProperty\", function () {\r\n    return Object.defineProperty;\r\n});\r\n\r\ndefine(\"Object.prototype.hasOwnProperty\", function () {\r\n    return Object.prototype.hasOwnProperty;\r\n});\r\n\r\ndefine(\"Error.captureStackTrace\", function () {\r\n    return Error.captureStackTrace;\r\n});\r\n\r\ndefine(\"Error.prototype.stack\", function () {\r\n    try {\r\n        throw new Error();\r\n    }\r\n    catch (e) {\r\n        return e.stack || e.stacktrace;\r\n    }\r\n});","var CapabilityDetector = require(\"./CapabilityDetector\");\r\n\r\nvar detector = new CapabilityDetector();\r\n\r\nvar capability = function (name) {\r\n    return detector.test(name);\r\n};\r\ncapability.define = function (name, test) {\r\n    detector.define(name, test);\r\n};\r\ncapability.check = function (name) {\r\n    detector.check(name);\r\n};\r\ncapability.test = capability;\r\n\r\nmodule.exports = capability;","var CapabilityDetector = function () {\r\n    this.tests = {};\r\n    this.cache = {};\r\n};\r\nCapabilityDetector.prototype = {\r\n    constructor: CapabilityDetector,\r\n    define: function (name, test) {\r\n        if (typeof (name) != \"string\" || !(test instanceof Function))\r\n            throw new Error(\"Invalid capability definition.\");\r\n        if (this.tests[name])\r\n            throw new Error('Duplicated capability definition by \"' + name + '\".');\r\n        this.tests[name] = test;\r\n    },\r\n    check: function (name) {\r\n        if (!this.test(name))\r\n            throw new Error('The current environment does not support \"' + name + '\", therefore we cannot continue.');\r\n    },\r\n    test: function (name) {\r\n        if (this.cache[name] !== undefined)\r\n            return this.cache[name];\r\n        if (!this.tests[name])\r\n            throw new Error('Unknown capability with name \"' + name + '\".');\r\n        var test = this.tests[name];\r\n        this.cache[name] = !!test();\r\n        return this.cache[name];\r\n    }\r\n};\r\n\r\nmodule.exports = CapabilityDetector;","var prepareStackTrace = require(\"./prepareStackTrace\");\r\n\r\nmodule.exports = function () {\r\n    Error.getStackTrace = function (throwable) {\r\n        return throwable.stack;\r\n    };\r\n\r\n    return {\r\n        prepareStackTrace: prepareStackTrace\r\n    };\r\n};","var prepareStackTrace = function (throwable, frames, warnings) {\r\n    var string = \"\";\r\n    string += throwable.name || \"Error\";\r\n    string += \": \" + (throwable.message || \"\");\r\n    if (warnings instanceof Array)\r\n        for (var warningIndex in warnings) {\r\n            var warning = warnings[warningIndex];\r\n            string += \"\\n   # \" + warning;\r\n        }\r\n    for (var frameIndex in frames) {\r\n        var frame = frames[frameIndex];\r\n        string += \"\\n   at \" + frame.toString();\r\n    }\r\n    return string;\r\n};\r\n\r\nmodule.exports = prepareStackTrace;","var FrameStringSource = require(\"./FrameStringSource\"),\r\n    FrameStringParser = require(\"./FrameStringParser\"),\r\n    cache = require(\"u3\").cache,\r\n    prepareStackTrace = require(\"../prepareStackTrace\");\r\n\r\nmodule.exports = function () {\r\n\r\n    Error.captureStackTrace = function captureStackTrace(throwable, terminator) {\r\n        var warnings;\r\n        var frameShifts = [\r\n            captureStackTrace\r\n        ];\r\n        if (terminator) {\r\n            // additional frames can come here if arguments.callee.caller is supported\r\n            // otherwise it is hard to identify the terminator\r\n            frameShifts.push(terminator);\r\n        }\r\n        var captured = FrameStringSource.getInstance().captureFrameStrings(frameShifts);\r\n        Object.defineProperties(throwable, {\r\n            stack: {\r\n                configurable: true,\r\n                get: cache(function () {\r\n                    var frames = FrameStringParser.getInstance().getFrames(captured.frameStrings, captured.functionValues);\r\n                    return (Error.prepareStackTrace || prepareStackTrace)(throwable, frames, warnings);\r\n                })\r\n            },\r\n            cachedStack: {\r\n                configurable: true,\r\n                writable: true,\r\n                enumerable: false,\r\n                value: true\r\n            }\r\n        });\r\n    };\r\n\r\n    Error.getStackTrace = function (throwable) {\r\n        if (throwable.cachedStack)\r\n            return throwable.stack;\r\n        var frameStrings = FrameStringSource.getInstance().getFrameStrings(throwable),\r\n            frames = [],\r\n            warnings;\r\n        if (frameStrings)\r\n            frames = FrameStringParser.getInstance().getFrames(frameStrings, []);\r\n        else\r\n            warnings = [\r\n                \"The stack is not readable by unthrown errors in this environment.\"\r\n            ];\r\n        var stack = (Error.prepareStackTrace || prepareStackTrace)(throwable, frames, warnings);\r\n        if (frameStrings)\r\n            try {\r\n                Object.defineProperties(throwable, {\r\n                    stack: {\r\n                        configurable: true,\r\n                        writable: true,\r\n                        enumerable: false,\r\n                        value: stack\r\n                    },\r\n                    cachedStack: {\r\n                        configurable: true,\r\n                        writable: true,\r\n                        enumerable: false,\r\n                        value: true\r\n                    }\r\n                });\r\n            } catch (nonConfigurableError) {\r\n            }\r\n        return stack;\r\n    };\r\n\r\n    return {\r\n        prepareStackTrace: prepareStackTrace\r\n    };\r\n};","var Class = require(\"o3\").Class,\r\n    abstractMethod = require(\"o3\").abstractMethod,\r\n    eachCombination = require(\"u3\").eachCombination,\r\n    cache = require(\"u3\").cache,\r\n    capability = require(\"capability\");\r\n\r\nvar AbstractFrameStringSource = Class(Object, {\r\n    prototype: {\r\n        captureFrameStrings: function (frameShifts) {\r\n            var error = this.createError();\r\n            frameShifts.unshift(this.captureFrameStrings);\r\n            frameShifts.unshift(this.createError);\r\n            var capturedFrameStrings = this.getFrameStrings(error);\r\n\r\n            var frameStrings = capturedFrameStrings.slice(frameShifts.length),\r\n                functionValues = [];\r\n\r\n            if (capability(\"arguments.callee.caller\")) {\r\n                var capturedFunctionValues = [\r\n                    this.createError,\r\n                    this.captureFrameStrings\r\n                ];\r\n                try {\r\n                    var aCaller = arguments.callee;\r\n                    while (aCaller = aCaller.caller)\r\n                        capturedFunctionValues.push(aCaller);\r\n                }\r\n                catch (useStrictError) {\r\n                }\r\n                functionValues = capturedFunctionValues.slice(frameShifts.length);\r\n            }\r\n            return {\r\n                frameStrings: frameStrings,\r\n                functionValues: functionValues\r\n            };\r\n        },\r\n        getFrameStrings: function (error) {\r\n            var message = error.message || \"\";\r\n            var name = error.name || \"\";\r\n            var stackString = this.getStackString(error);\r\n            if (stackString === undefined)\r\n                return;\r\n            var stackStringChunks = stackString.split(\"\\n\");\r\n            var fromPosition = 0;\r\n            var toPosition = stackStringChunks.length;\r\n            if (this.hasHeader)\r\n                fromPosition += name.split(\"\\n\").length + message.split(\"\\n\").length - 1;\r\n            if (this.hasFooter)\r\n                toPosition -= 1;\r\n            return stackStringChunks.slice(fromPosition, toPosition);\r\n        },\r\n        createError: abstractMethod,\r\n        getStackString: abstractMethod,\r\n        hasHeader: undefined,\r\n        hasFooter: undefined\r\n    }\r\n});\r\n\r\nvar FrameStringSourceCalibrator = Class(Object, {\r\n    prototype: {\r\n        calibrateClass: function (FrameStringSource) {\r\n            return this.calibrateMethods(FrameStringSource) && this.calibrateEnvelope(FrameStringSource);\r\n        },\r\n        calibrateMethods: function (FrameStringSource) {\r\n            try {\r\n                eachCombination([[\r\n                    function (message) {\r\n                        return new Error(message);\r\n                    },\r\n                    function (message) {\r\n                        try {\r\n                            throw new Error(message);\r\n                        }\r\n                        catch (error) {\r\n                            return error;\r\n                        }\r\n                    }\r\n                ], [\r\n                    function (error) {\r\n                        return error.stack;\r\n                    },\r\n                    function (error) {\r\n                        return error.stacktrace;\r\n                    }\r\n                ]], function (createError, getStackString) {\r\n                    if (getStackString(createError()))\r\n                        throw {\r\n                            getStackString: getStackString,\r\n                            createError: createError\r\n                        };\r\n                });\r\n            } catch (workingImplementation) {\r\n                Class.merge.call(FrameStringSource, {\r\n                    prototype: workingImplementation\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        calibrateEnvelope: function (FrameStringSource) {\r\n            var getStackString = FrameStringSource.prototype.getStackString;\r\n            var createError = FrameStringSource.prototype.createError;\r\n            var calibratorStackString = getStackString(createError(\"marker\"));\r\n            var calibratorFrameStrings = calibratorStackString.split(\"\\n\");\r\n            Class.merge.call(FrameStringSource, {\r\n                prototype: {\r\n                    hasHeader: /marker/.test(calibratorFrameStrings[0]),\r\n                    hasFooter: calibratorFrameStrings[calibratorFrameStrings.length - 1] === \"\"\r\n                }\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n});\r\n\r\n\r\nmodule.exports = {\r\n    getClass: cache(function () {\r\n        var FrameStringSource;\r\n        if (FrameStringSource)\r\n            return FrameStringSource;\r\n        FrameStringSource = Class(AbstractFrameStringSource, {});\r\n        var calibrator = new FrameStringSourceCalibrator();\r\n        if (!calibrator.calibrateClass(FrameStringSource))\r\n            throw new Error(\"Cannot read Error.prototype.stack in this environment.\");\r\n        return FrameStringSource;\r\n    }),\r\n    getInstance: cache(function () {\r\n        var FrameStringSource = this.getClass();\r\n        var instance = new FrameStringSource();\r\n        return instance;\r\n    })\r\n};","require(\"capability/es5\");\r\n\r\nmodule.exports = require(\"./lib\");","module.exports = {\r\n    Class: require(\"./Class\"),\r\n    abstractMethod: require(\"./abstractMethod\")\r\n};","var Class = function () {\r\n    var options = Object.create({\r\n        Source: Object,\r\n        config: {},\r\n        buildArgs: []\r\n    });\r\n\r\n    function checkOption(option) {\r\n        var key = \"config\";\r\n        if (option instanceof Function)\r\n            key = \"Source\";\r\n        else if (option instanceof Array)\r\n            key = \"buildArgs\";\r\n        else if (option instanceof Object)\r\n            key = \"config\";\r\n        else\r\n            throw new Error(\"Invalid configuration option.\");\r\n        if (options.hasOwnProperty(key))\r\n            throw new Error(\"Duplicated configuration option: \" + key + \".\");\r\n        options[key] = option;\r\n    }\r\n\r\n    for (var index = 0, length = arguments.length; index < length; ++index)\r\n        checkOption(arguments[index]);\r\n\r\n    var Source = options.Source,\r\n        config = options.config,\r\n        buildArgs = options.buildArgs;\r\n\r\n    return (Source.extend || Class.extend).call(Source, config, buildArgs);\r\n};\r\n\r\nClass.factory = function () {\r\n    var Source = this;\r\n    return function () {\r\n        var instance = this;\r\n        if (instance.build instanceof Function)\r\n            instance.build.apply(instance, arguments);\r\n        if (instance.init instanceof Function)\r\n            instance.init.apply(instance, arguments);\r\n    };\r\n};\r\n\r\nClass.extend = function (config, buildArgs) {\r\n    var Source = this;\r\n    if (!config)\r\n        config = {};\r\n    var Subject;\r\n    if ((config.prototype instanceof Object) && config.prototype.constructor !== Object)\r\n        Subject = config.prototype.constructor;\r\n    else if (config.factory instanceof Function)\r\n        Subject = config.factory.call(Source);\r\n    Subject = (Source.clone || Class.clone).call(Source, Subject, buildArgs);\r\n    (Subject.merge || Class.merge).call(Subject, config);\r\n    return Subject;\r\n};\r\n\r\nClass.prototype.extend = function (config, buildArgs) {\r\n    var subject = this;\r\n    var instance = (subject.clone || Class.prototype.clone).apply(subject, buildArgs);\r\n    (instance.merge || Class.prototype.merge).call(instance, config);\r\n    return instance;\r\n};\r\n\r\nClass.clone = function (Subject, buildArgs) {\r\n    var Source = this;\r\n    if (!(Subject instanceof Function))\r\n        Subject = (Source.factory || Class.factory).call(Source);\r\n    Subject.prototype = (Source.prototype.clone || Class.prototype.clone).apply(Source.prototype, buildArgs || []);\r\n    Subject.prototype.constructor = Subject;\r\n    for (var staticProperty in Source)\r\n        if (staticProperty !== \"prototype\")\r\n            Subject[staticProperty] = Source[staticProperty];\r\n    return Subject;\r\n};\r\n\r\nClass.prototype.clone = function () {\r\n    var subject = this;\r\n    var instance = Object.create(subject);\r\n    if (instance.build instanceof Function)\r\n        instance.build.apply(instance, arguments);\r\n    return instance;\r\n};\r\n\r\nClass.merge = function (config) {\r\n    var Subject = this;\r\n    for (var staticProperty in config)\r\n        if (staticProperty !== \"prototype\")\r\n            Subject[staticProperty] = config[staticProperty];\r\n    if (config.prototype instanceof Object)\r\n        (Subject.prototype.merge || Class.prototype.merge).call(Subject.prototype, config.prototype);\r\n    return Subject;\r\n};\r\n\r\nClass.prototype.merge = function (config) {\r\n    var subject = this;\r\n    for (var property in config)\r\n        if (property !== \"constructor\")\r\n            subject[property] = config[property];\r\n    return subject;\r\n};\r\n\r\nClass.absorb = function (config) {\r\n    var Subject = this;\r\n    for (var staticProperty in config)\r\n        if (staticProperty !== \"prototype\" && (Subject[staticProperty] === undefined || Subject[staticProperty] === Function.prototype[staticProperty]))\r\n            Subject[staticProperty] = config[staticProperty];\r\n    if (config.prototype instanceof Object)\r\n        (Subject.prototype.absorb || Class.prototype.absorb).call(Subject.prototype, config.prototype);\r\n    return Subject;\r\n};\r\n\r\nClass.prototype.absorb = function (config) {\r\n    var subject = this;\r\n    for (var property in config)\r\n        if (property !== \"constructor\" && (subject[property] === undefined || subject[property] === Object.prototype[property]))\r\n            subject[property] = config[property];\r\n    return subject;\r\n};\r\n\r\nClass.getAncestor = function () {\r\n    var Source = this;\r\n    if (Source !== Source.prototype.constructor)\r\n        return Source.prototype.constructor;\r\n};\r\n\r\nClass.newInstance = function () {\r\n    var Subject = this;\r\n    var instance = Object.create(this.prototype);\r\n    Subject.apply(instance, arguments);\r\n    return instance;\r\n};\r\n\r\nmodule.exports = Class;","module.exports = function () {\r\n    throw new Error(\"Not implemented.\");\r\n};","module.exports = require(\"./lib\");","module.exports = {\r\n    cache: require(\"./cache\"),\r\n    eachCombination: require(\"./eachCombination\")\r\n};","var cache = function (fn) {\r\n    var called = false,\r\n        store;\r\n\r\n    if (!(fn instanceof Function)) {\r\n        called = true;\r\n        store = fn;\r\n        fn = null;\r\n    }\r\n\r\n    return function () {\r\n        if (!called) {\r\n            called = true;\r\n            store = fn.apply(this, arguments);\r\n            fn = null;\r\n        }\r\n        return store;\r\n    };\r\n};\r\n\r\nmodule.exports = cache;","module.exports = function eachCombination(alternativesByDimension, callback, combination) {\r\n    if (!combination)\r\n        combination = [];\r\n    if (combination.length < alternativesByDimension.length) {\r\n        var alternatives = alternativesByDimension[combination.length];\r\n        for (var index in alternatives) {\r\n            combination[combination.length] = alternatives[index];\r\n            eachCombination(alternativesByDimension, callback, combination);\r\n            --combination.length;\r\n        }\r\n    }\r\n    else\r\n        callback.apply(null, combination);\r\n};","var Class = require(\"o3\").Class,\r\n    Frame = require(\"./Frame\"),\r\n    cache = require(\"u3\").cache;\r\n\r\nvar FrameStringParser = Class(Object, {\r\n    prototype: {\r\n        stackParser: null,\r\n        frameParser: null,\r\n        locationParsers: null,\r\n        constructor: function (options) {\r\n            Class.prototype.merge.call(this, options);\r\n        },\r\n        getFrames: function (frameStrings, functionValues) {\r\n            var frames = [];\r\n            for (var index = 0, length = frameStrings.length; index < length; ++index)\r\n                frames[index] = this.getFrame(frameStrings[index], functionValues[index]);\r\n            return frames;\r\n        },\r\n        getFrame: function (frameString, functionValue) {\r\n            var config = {\r\n                frameString: frameString,\r\n                functionValue: functionValue\r\n            };\r\n            return new Frame(config);\r\n        }\r\n    }\r\n});\r\n\r\nmodule.exports = {\r\n    getClass: cache(function () {\r\n        return FrameStringParser;\r\n    }),\r\n    getInstance: cache(function () {\r\n        var FrameStringParser = this.getClass();\r\n        var instance = new FrameStringParser();\r\n        return instance;\r\n    })\r\n};","var Class = require(\"o3\").Class,\r\n    abstractMethod = require(\"o3\").abstractMethod;\r\n\r\nvar Frame = Class(Object, {\r\n    prototype: {\r\n        init: Class.prototype.merge,\r\n        frameString: undefined,\r\n        toString: function () {\r\n            return this.frameString;\r\n        },\r\n        functionValue: undefined,\r\n        getThis: abstractMethod,\r\n        getTypeName: abstractMethod,\r\n        getFunction: function () {\r\n            return this.functionValue;\r\n        },\r\n        getFunctionName: abstractMethod,\r\n        getMethodName: abstractMethod,\r\n        getFileName: abstractMethod,\r\n        getLineNumber: abstractMethod,\r\n        getColumnNumber: abstractMethod,\r\n        getEvalOrigin: abstractMethod,\r\n        isTopLevel: abstractMethod,\r\n        isEval: abstractMethod,\r\n        isNative: abstractMethod,\r\n        isConstructor: abstractMethod\r\n    }\r\n});\r\n\r\nmodule.exports = Frame;","var cache = require(\"u3\").cache,\r\n    prepareStackTrace = require(\"./prepareStackTrace\");\r\n\r\nmodule.exports = function () {\r\n\r\n    Error.captureStackTrace = function (throwable, terminator) {\r\n        Object.defineProperties(throwable, {\r\n            stack: {\r\n                configurable: true,\r\n                get: cache(function () {\r\n                    return (Error.prepareStackTrace || prepareStackTrace)(throwable, []);\r\n                })\r\n            },\r\n            cachedStack: {\r\n                configurable: true,\r\n                writable: true,\r\n                enumerable: false,\r\n                value: true\r\n            }\r\n        });\r\n    };\r\n\r\n    Error.getStackTrace = function (throwable) {\r\n        if (throwable.cachedStack)\r\n            return throwable.stack;\r\n        var stack = (Error.prepareStackTrace || prepareStackTrace)(throwable, []);\r\n        try {\r\n            Object.defineProperties(throwable, {\r\n                stack: {\r\n                    configurable: true,\r\n                    writable: true,\r\n                    enumerable: false,\r\n                    value: stack\r\n                },\r\n                cachedStack: {\r\n                    configurable: true,\r\n                    writable: true,\r\n                    enumerable: false,\r\n                    value: true\r\n                }\r\n            });\r\n        } catch (nonConfigurableError) {\r\n        }\r\n        return stack;\r\n    };\r\n\r\n    return {\r\n        prepareStackTrace: prepareStackTrace\r\n    };\r\n};","const component_config = require('./component_config.js');\r\n\r\n\r\nconst sel_l_0 = document.getElementById('sel_l_0');\r\nconst sel_l_1 = document.getElementById('sel_l_1');\r\nconst sel_l_2 = document.getElementById('sel_l_2');\r\nconst sel_l_3 = document.getElementById('sel_l_3');\r\n\r\nconst sel_r_0 = document.getElementById('sel_r_0');\r\nconst sel_r_1 = document.getElementById('sel_r_1');\r\nconst sel_r_2 = document.getElementById('sel_r_2');\r\nconst sel_r_3 = document.getElementById('sel_r_3');\r\n\r\n\r\nmodule.exports = class MONSTER_CONSTRUCTOR {\r\n\r\n    constructor() {\r\n        this.canvas = document.getElementById('monster');\r\n        this.ctx = this.canvas.getContext('2d');\r\n\r\n        this.sprites = {};\r\n\r\n        this.robot = {}\r\n\r\n        sel_l_0.onclick = () => {\r\n            this.prev('eye');\r\n            this.draw();\r\n        }\r\n        sel_l_1.onclick = () => {\r\n            this.prev('arm');\r\n            this.draw();\r\n        }\r\n        sel_l_2.onclick = () => {\r\n            this.prev('body');\r\n            this.draw();\r\n        }\r\n        sel_l_3.onclick = () => {\r\n            this.prev('leg');\r\n            this.draw();\r\n        }\r\n\r\n        sel_r_0.onclick = () => {\r\n            this.next('eye');\r\n            this.draw();\r\n        }\r\n        sel_r_1.onclick = () => {\r\n            this.next('arm');\r\n            this.draw();\r\n        }\r\n        sel_r_2.onclick = () => {\r\n            this.next('body');\r\n            this.draw();\r\n        }\r\n        sel_r_3.onclick = () => {\r\n            this.next('leg');\r\n            this.draw();\r\n        }\r\n    }\r\n\r\n    async setToken(token) {\r\n        sel_l_0.style.visibility = 'hidden';\r\n        sel_l_1.style.visibility = 'hidden';\r\n        sel_l_2.style.visibility = 'hidden';\r\n        sel_l_3.style.visibility = 'hidden';\r\n\r\n        sel_r_0.style.visibility = 'hidden';\r\n        sel_r_1.style.visibility = 'hidden';\r\n        sel_r_2.style.visibility = 'hidden';\r\n        sel_r_3.style.visibility = 'hidden';\r\n\r\n        const url = token.metadata.media;\r\n        const image = await MONSTER_CONSTRUCTOR.addImageProcess(url);\r\n\r\n        this.ctx.drawImage(image, 0, 0);\r\n\r\n        \r\n        document.getElementById('header').innerHTML = `Your NFT monster`;\r\n    }\r\n\r\n    next(name) {\r\n        const length = Object.keys(this.sprites[name]).length;\r\n        this.robot[name] += 1;\r\n        if(this.robot[name] >= length ) {\r\n            this.robot[name] = 0;\r\n        }\r\n    }\r\n    prev(name) {\r\n        const length = Object.keys(this.sprites[name]).length;\r\n        this.robot[name] -= 1;\r\n        if(this.robot[name] < 0 ) {\r\n            this.robot[name] = length - 1;\r\n        }\r\n    }\r\n\r\n    async load() {\r\n        console.log(component_config);\r\n        for (const key in component_config) {\r\n            this.sprites[key] = {};\r\n\r\n            this.robot[key] = 0;\r\n            for (const spriteName in component_config[key].sprites) {\r\n                this.sprites[key][spriteName] = await MONSTER_CONSTRUCTOR.addImageProcess(component_config[key].sprites[spriteName]);\r\n            }\r\n        }\r\n\r\n        // const eyeImage = await ROBOT_CONSTRUCTOR.addImageProcess(require('./eye.png'));\r\n        // this.robot = await ROBOT_CONSTRUCTOR.addImageProcess(require('./robot.png'));\r\n\r\n        // this.rightEye = new EYE(this.ctx, 155, 80, eyeImage);\r\n        // this.leftEye = new EYE(this.ctx, 210, 80, eyeImage);\r\n\r\n        // this.isLoaded = true;\r\n\r\n        // this.componentImage\r\n    }\r\n\r\n    draw() {\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        for (const componentName in this.robot) {\r\n            const nameSprite = Object.keys(this.sprites[componentName])[this.robot[componentName]];\r\n\r\n            const image = this.sprites[componentName][nameSprite];\r\n\r\n            const isDouble = component_config[componentName].isDouble;\r\n\r\n            if(isDouble) {\r\n                //this.ctx.drawImage(image, component_config[componentName].coords.x - image.width/2, component_config[componentName].coords.y);\r\n\r\n                this.ctx.save();\r\n                this.ctx.translate(component_config[componentName].coords.x + image.width/2, component_config[componentName].coords.y);\r\n                this.ctx.scale(-1, 1);\r\n                this.ctx.drawImage(image, 0, 0);\r\n                this.ctx.restore();\r\n\r\n                this.ctx.drawImage(image, this.canvas.width - component_config[componentName].coords.x - image.width/2, component_config[componentName].coords.y);\r\n            } else {\r\n                this.ctx.drawImage(image, component_config[componentName].coords.x - image.width/2, component_config[componentName].coords.y);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    static addImageProcess(src, width, height) {\r\n        return new Promise((resolve, reject) => {\r\n            let img = new Image(width, height);\r\n            img.onload = () => resolve(img);\r\n            img.onerror = (err) => reject(err);\r\n            img.src = src;\r\n        })\r\n    }\r\n\r\n\r\n}\r\n","module.exports = {\r\n    body: {\r\n        coords: {\r\n            x: 200, y: 90\r\n        },\r\n        sprites: {\r\n            body_blueA: require('./assets/body_blueA.png'),\r\n            body_blueB: require('./assets/body_blueB.png'),\r\n            body_blueC: require('./assets/body_blueC.png'),\r\n            body_blueD: require('./assets/body_blueD.png')\r\n        }\r\n    },\r\n    leg: {\r\n        coords: {\r\n            x: 140, y: 250\r\n        },\r\n        isDouble: true,\r\n        sprites: {\r\n            leg_blueA: require('./assets/leg_blueA.png'),\r\n            leg_blueB: require('./assets/leg_blueB.png'),\r\n            leg_blueC: require('./assets/leg_blueC.png'),\r\n            leg_blueD: require('./assets/leg_blueD.png'),\r\n        }\r\n    },\r\n    arm: {\r\n        coords: {\r\n            x: 100, y: 130\r\n        },\r\n        isDouble: true,\r\n        sprites: {\r\n            arm_blueA: require('./assets/arm_blueA.png'),\r\n            arm_blueB: require('./assets/arm_blueB.png'),\r\n            arm_blueC: require('./assets/arm_blueC.png'),\r\n            arm_blueD: require('./assets/arm_blueD.png')\r\n        }\r\n    },\r\n    eye: {\r\n        coords: {\r\n            x: 150, y: 130\r\n        },\r\n        isDouble: true,\r\n        sprites: {\r\n            eye_closed_feminine: require('./assets/eye_closed_feminine.png'),\r\n            eye_angry_blue: require('./assets/eye_angry_blue.png'),\r\n            eye_closed_happy: require('./assets/eye_closed_happy.png'),\r\n            eye_human_red: require('./assets/eye_human_red.png')\r\n        }\r\n    },\r\n}","module.exports = require('./helpers/bundle-url').getBundleURL('bLxZJ') + \"body_blueA.19a56f37.png\" + \"?\" + Date.now();","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('bLxZJ') + \"body_blueB.2d1a1be1.png\" + \"?\" + Date.now();","module.exports = require('./helpers/bundle-url').getBundleURL('bLxZJ') + \"body_blueC.165135a4.png\" + \"?\" + Date.now();","module.exports = require('./helpers/bundle-url').getBundleURL('bLxZJ') + \"body_blueD.ecba801d.png\" + \"?\" + Date.now();","module.exports = require('./helpers/bundle-url').getBundleURL('bLxZJ') + \"leg_blueA.07ec7fb2.png\" + \"?\" + Date.now();","module.exports = require('./helpers/bundle-url').getBundleURL('bLxZJ') + \"leg_blueB.75bef7ad.png\" + \"?\" + Date.now();","module.exports = require('./helpers/bundle-url').getBundleURL('bLxZJ') + \"leg_blueC.20d42263.png\" + \"?\" + Date.now();","module.exports = require('./helpers/bundle-url').getBundleURL('bLxZJ') + \"leg_blueD.c77d524a.png\" + \"?\" + Date.now();","module.exports = require('./helpers/bundle-url').getBundleURL('bLxZJ') + \"arm_blueA.f4d1e234.png\" + \"?\" + Date.now();","module.exports = require('./helpers/bundle-url').getBundleURL('bLxZJ') + \"arm_blueB.76fff01a.png\" + \"?\" + Date.now();","module.exports = require('./helpers/bundle-url').getBundleURL('bLxZJ') + \"arm_blueC.b6660c9e.png\" + \"?\" + Date.now();","module.exports = require('./helpers/bundle-url').getBundleURL('bLxZJ') + \"arm_blueD.2bb3aa31.png\" + \"?\" + Date.now();","module.exports = require('./helpers/bundle-url').getBundleURL('bLxZJ') + \"eye_closed_feminine.d2265adf.png\" + \"?\" + Date.now();","module.exports = require('./helpers/bundle-url').getBundleURL('bLxZJ') + \"eye_angry_blue.184d9a44.png\" + \"?\" + Date.now();","module.exports = require('./helpers/bundle-url').getBundleURL('bLxZJ') + \"eye_closed_happy.550b19e4.png\" + \"?\" + Date.now();","module.exports = require('./helpers/bundle-url').getBundleURL('bLxZJ') + \"eye_human_red.c3ae220a.png\" + \"?\" + Date.now();",null,"async function* _batch(size, iterable) {\n    let dataBatch = [];\n    for await (const data of iterable) {\n        dataBatch.push(data);\n        if (dataBatch.length === size) {\n            yield dataBatch;\n            dataBatch = [];\n        }\n    }\n    if (dataBatch.length > 0) {\n        yield dataBatch;\n    }\n}\nfunction* _syncBatch(size, iterable) {\n    let dataBatch = [];\n    for (const data of iterable) {\n        dataBatch.push(data);\n        if (dataBatch.length === size) {\n            yield dataBatch;\n            dataBatch = [];\n        }\n    }\n    if (dataBatch.length > 0) {\n        yield dataBatch;\n    }\n}\nfunction batch(size, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => batch(size, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _batch(size, iterable);\n    }\n    return _syncBatch(size, iterable);\n}\n\nconst TIMEOUT = Symbol('TIMEOUT');\nconst createTimer = (duration) => {\n    let timeoutId;\n    return [\n        new Promise(resolve => {\n            timeoutId = setTimeout(() => resolve(TIMEOUT), duration);\n        }),\n        () => {\n            clearTimeout(timeoutId);\n        },\n    ];\n};\n// Like `batch` but flushes early if the `timeout` is reached\n// NOTE: The strategy is to only hold onto a single item for a maximum of `timeout` ms.\nasync function* _batchWithTimeout(size, timeout, iterable) {\n    const iterator = iterable[Symbol.asyncIterator]();\n    let pendingData;\n    let batchData = [];\n    let timer;\n    let clearTimer;\n    const startTimer = () => {\n        deleteTimer();\n        [timer, clearTimer] = createTimer(timeout);\n    };\n    const deleteTimer = () => {\n        if (clearTimer) {\n            clearTimer();\n        }\n        timer = undefined;\n    };\n    pendingData = iterator.next();\n    while (true) {\n        const res = await (timer ? Promise.race([pendingData, timer]) : pendingData);\n        if (res === TIMEOUT || res.done) {\n            // Flush early (before we reach the batch size)\n            if (batchData.length) {\n                yield batchData;\n                batchData = [];\n            }\n            deleteTimer();\n            // And exit appropriately\n            if (res !== TIMEOUT) {\n                // done\n                break;\n            }\n            continue;\n        }\n        // Fetch next item early doors (before we potentially yield)\n        pendingData = iterator.next();\n        // Then handle the value\n        batchData.push(res.value);\n        if (batchData.length === 1) {\n            // Start timer once we have at least 1 item ready to go\n            startTimer();\n        }\n        if (batchData.length === size) {\n            yield batchData;\n            batchData = [];\n            deleteTimer();\n            continue;\n        }\n    }\n}\nfunction batchWithTimeout(size, timeout, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => batchWithTimeout(size, timeout, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator] && timeout !== Infinity) {\n        return _batchWithTimeout(size, timeout, iterable);\n    }\n    // For sync iterables or an infinite timeout, the timeout is irrelevant so just fallback to regular `batch`.\n    return batch(size, iterable);\n}\n\nfunction getIterator(iterable) {\n    if (typeof iterable.next === 'function') {\n        return iterable;\n    }\n    if (typeof iterable[Symbol.iterator] === 'function') {\n        return iterable[Symbol.iterator]();\n    }\n    if (typeof iterable[Symbol.asyncIterator] === 'function') {\n        return iterable[Symbol.asyncIterator]();\n    }\n    throw new TypeError('\"values\" does not to conform to any of the iterator or iterable protocols');\n}\n\nfunction defer() {\n    let reject;\n    let resolve;\n    const promise = new Promise((resolveFunc, rejectFunc) => {\n        resolve = resolveFunc;\n        reject = rejectFunc;\n    });\n    return {\n        promise,\n        reject,\n        resolve,\n    };\n}\n\nfunction _buffer(size, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let reading = false;\n    let ended = false;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const readDeferred = readQueue.shift();\n            const { error, value } = resultQueue.shift();\n            if (error) {\n                readDeferred.reject(error);\n            }\n            else {\n                readDeferred.resolve({ done: false, value });\n            }\n        }\n        while (readQueue.length > 0 && ended) {\n            const { resolve } = readQueue.shift();\n            resolve({ done: true, value: undefined });\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (resultQueue.length >= size) {\n            return;\n        }\n        reading = true;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n            }\n            else {\n                resultQueue.push({ value });\n            }\n        }\n        catch (error) {\n            ended = true;\n            resultQueue.push({ error });\n        }\n        fulfillReadQueue();\n        reading = false;\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length > 0) {\n            const { error, value } = resultQueue.shift();\n            if (error) {\n                throw error;\n            }\n            fillQueue();\n            return { done: false, value };\n        }\n        if (ended) {\n            return { done: true, value: undefined }; // stupid ts\n        }\n        const deferred = defer();\n        readQueue.push(deferred);\n        fillQueue();\n        return deferred.promise;\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction* syncBuffer(size, iterable) {\n    const valueQueue = [];\n    let e;\n    try {\n        for (const value of iterable) {\n            valueQueue.push(value);\n            if (valueQueue.length <= size) {\n                continue;\n            }\n            yield valueQueue.shift();\n        }\n    }\n    catch (error) {\n        e = error;\n    }\n    for (const value of valueQueue) {\n        yield value;\n    }\n    if (e) {\n        throw e;\n    }\n}\nfunction buffer(size, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => buffer(size, curriedIterable);\n    }\n    if (size === 0) {\n        return iterable;\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _buffer(size, iterable);\n    }\n    return syncBuffer(size, iterable);\n}\n\nasync function _collect(iterable) {\n    const values = [];\n    for await (const value of iterable) {\n        values.push(value);\n    }\n    return values;\n}\nfunction collect(iterable) {\n    if (iterable[Symbol.asyncIterator]) {\n        return _collect(iterable);\n    }\n    return Array.from(iterable);\n}\n\nasync function* _concat(iterables) {\n    for await (const iterable of iterables) {\n        yield* iterable;\n    }\n}\nfunction* _syncConcat(iterables) {\n    for (const iterable of iterables) {\n        yield* iterable;\n    }\n}\nfunction concat(...iterables) {\n    const hasAnyAsync = iterables.find(itr => itr[Symbol.asyncIterator] !== undefined);\n    if (hasAnyAsync) {\n        return _concat(iterables);\n    }\n    else {\n        return _syncConcat(iterables);\n    }\n}\n\nasync function _consume(iterable) {\n    for await (const val of iterable) {\n        // do nothing\n    }\n}\nfunction consume(iterable) {\n    if (iterable[Symbol.asyncIterator]) {\n        return _consume(iterable);\n    }\n    for (const val of iterable) {\n        // do nothing\n    }\n}\n\nasync function* _filter(filterFunc, iterable) {\n    for await (const data of iterable) {\n        if (await filterFunc(data)) {\n            yield data;\n        }\n    }\n}\nfunction filter(filterFunc, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _filter(filterFunc, curriedIterable);\n    }\n    return _filter(filterFunc, iterable);\n}\n\nasync function* flatten(iterable) {\n    for await (const maybeItr of iterable) {\n        if (maybeItr && typeof maybeItr !== 'string' && (maybeItr[Symbol.iterator] || maybeItr[Symbol.asyncIterator])) {\n            yield* flatten(maybeItr);\n        }\n        else {\n            yield maybeItr;\n        }\n    }\n}\n\nasync function* _map(func, iterable) {\n    for await (const val of iterable) {\n        yield await func(val);\n    }\n}\nfunction map(func, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => _map(func, curriedIterable);\n    }\n    return _map(func, iterable);\n}\n\nfunction flatMap(func, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => flatMap(func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(map(func, iterable)));\n}\n\nfunction _flatTransform(concurrency, func, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let ended = false;\n    let reading = false;\n    let inflightCount = 0;\n    let lastError = null;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const { resolve } = readQueue.shift();\n            const value = resultQueue.shift();\n            resolve({ done: false, value });\n        }\n        while (readQueue.length > 0 && inflightCount === 0 && ended) {\n            const { resolve, reject } = readQueue.shift();\n            if (lastError) {\n                reject(lastError);\n                lastError = null;\n            }\n            else {\n                resolve({ done: true, value: undefined });\n            }\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            fulfillReadQueue();\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (inflightCount + resultQueue.length >= concurrency) {\n            return;\n        }\n        reading = true;\n        inflightCount++;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n                inflightCount--;\n                fulfillReadQueue();\n            }\n            else {\n                mapAndQueue(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            inflightCount--;\n            lastError = error;\n            fulfillReadQueue();\n        }\n        reading = false;\n        fillQueue();\n    }\n    async function mapAndQueue(itrValue) {\n        try {\n            const value = await func(itrValue);\n            if (value && value[Symbol.asyncIterator]) {\n                for await (const asyncVal of value) {\n                    resultQueue.push(asyncVal);\n                }\n            }\n            else {\n                resultQueue.push(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            lastError = error;\n        }\n        inflightCount--;\n        fulfillReadQueue();\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length === 0) {\n            const deferred = defer();\n            readQueue.push(deferred);\n            fillQueue();\n            return deferred.promise;\n        }\n        const value = resultQueue.shift();\n        fillQueue();\n        return { done: false, value };\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction flatTransform(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? flatTransform(concurrency, curriedFunc, curriedIterable)\n            : flatTransform(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => flatTransform(concurrency, func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(_flatTransform(concurrency, func, iterable)));\n}\n\nasync function onceReadable(stream) {\n    return new Promise(resolve => {\n        stream.once('readable', () => {\n            resolve();\n        });\n    });\n}\nasync function* _fromStream(stream) {\n    while (true) {\n        const data = stream.read();\n        if (data !== null) {\n            yield data;\n            continue;\n        }\n        if (stream._readableState.ended) {\n            break;\n        }\n        await onceReadable(stream);\n    }\n}\nfunction fromStream(stream) {\n    if (typeof stream[Symbol.asyncIterator] === 'function') {\n        return stream;\n    }\n    return _fromStream(stream);\n}\n\nasync function* merge(...iterables) {\n    const sources = new Set(iterables.map(getIterator));\n    while (sources.size > 0) {\n        for (const iterator of sources) {\n            const nextVal = await iterator.next();\n            if (nextVal.done) {\n                sources.delete(iterator);\n            }\n            else {\n                yield nextVal.value;\n            }\n        }\n    }\n}\n\nfunction pipeline(firstFn, ...fns) {\n    let previousFn = firstFn();\n    for (const func of fns) {\n        previousFn = func(previousFn);\n    }\n    return previousFn;\n}\n\nasync function* _parallelMap(concurrency, func, iterable) {\n    let transformError = null;\n    const wrapFunc = value => ({\n        value: func(value),\n    });\n    const stopOnError = async function* (source) {\n        for await (const value of source) {\n            if (transformError) {\n                return;\n            }\n            yield value;\n        }\n    };\n    const output = pipeline(() => iterable, buffer(1), stopOnError, map(wrapFunc), buffer(concurrency - 1));\n    const itr = getIterator(output);\n    while (true) {\n        const { value, done } = await itr.next();\n        if (done) {\n            break;\n        }\n        try {\n            const val = await value.value;\n            if (!transformError) {\n                yield val;\n            }\n        }\n        catch (error) {\n            transformError = error;\n        }\n    }\n    if (transformError) {\n        throw transformError;\n    }\n}\nfunction parallelMap(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => parallelMap(concurrency, curriedFunc, curriedIterable);\n    }\n    if (iterable === undefined) {\n        return curriedIterable => parallelMap(concurrency, func, curriedIterable);\n    }\n    if (concurrency === 1) {\n        return map(func, iterable);\n    }\n    return _parallelMap(concurrency, func, iterable);\n}\n\nfunction parallelFlatMap(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? parallelFlatMap(concurrency, curriedFunc, curriedIterable)\n            : parallelFlatMap(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => parallelFlatMap(concurrency, func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(parallelMap(concurrency, func, iterable)));\n}\n\nasync function* parallelMerge(...iterables) {\n    const inputs = iterables.map(getIterator);\n    const concurrentWork = new Set();\n    const values = new Map();\n    let lastError = null;\n    let errCb = null;\n    let valueCb = null;\n    const notifyError = err => {\n        lastError = err;\n        if (errCb) {\n            errCb(err);\n        }\n    };\n    const notifyDone = value => {\n        if (valueCb) {\n            valueCb(value);\n        }\n    };\n    const waitForQueue = () => new Promise((resolve, reject) => {\n        if (lastError) {\n            reject(lastError);\n        }\n        if (values.size > 0) {\n            return resolve();\n        }\n        valueCb = resolve;\n        errCb = reject;\n    });\n    const queueNext = input => {\n        const nextVal = Promise.resolve(input.next()).then(async ({ done, value }) => {\n            if (!done) {\n                values.set(input, value);\n            }\n            concurrentWork.delete(nextVal);\n        });\n        concurrentWork.add(nextVal);\n        nextVal.then(notifyDone, notifyError);\n    };\n    for (const input of inputs) {\n        queueNext(input);\n    }\n    while (true) {\n        // We technically don't have to check `values.size` as the for loop should have emptied it\n        // However I haven't yet found specs verifying that behavior, only tests\n        // the guard in waitForQueue() checking for values is in place for the same reason\n        if (concurrentWork.size === 0 && values.size === 0) {\n            return;\n        }\n        await waitForQueue();\n        for (const [input, value] of values) {\n            values.delete(input);\n            yield value;\n            queueNext(input);\n        }\n    }\n}\n\nasync function _reduce(func, start, iterable) {\n    let value = start;\n    for await (const nextItem of iterable) {\n        value = await func(value, nextItem);\n    }\n    return value;\n}\nfunction reduce(func, start, iterable) {\n    if (start === undefined) {\n        return (curriedStart, curriedIterable) => curriedIterable ? _reduce(func, curriedStart, curriedIterable) : reduce(func, curriedStart);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => reduce(func, start, curriedIterable);\n    }\n    return _reduce(func, start, iterable);\n}\n\nasync function* _take(count, iterable) {\n    let taken = 0;\n    for await (const val of iterable) {\n        yield await val;\n        taken++;\n        if (taken >= count) {\n            break;\n        }\n    }\n}\nfunction* _syncTake(count, iterable) {\n    let taken = 0;\n    for (const val of iterable) {\n        yield val;\n        taken++;\n        if (taken >= count) {\n            break;\n        }\n    }\n}\nfunction take(count, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => take(count, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _take(count, iterable);\n    }\n    return _syncTake(count, iterable);\n}\n\nasync function* _asyncTap(func, iterable) {\n    for await (const val of iterable) {\n        await func(val);\n        yield val;\n    }\n}\nfunction tap(func, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _asyncTap(func, curriedIterable);\n    }\n    return _asyncTap(func, iterable);\n}\n\nconst sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\nfunction _throttle(limit, interval, iterable) {\n    if (!Number.isFinite(limit)) {\n        throw new TypeError('Expected `limit` to be a finite number');\n    }\n    if (limit <= 0) {\n        throw new TypeError('Expected `limit` to be greater than 0');\n    }\n    if (!Number.isFinite(interval)) {\n        throw new TypeError('Expected `interval` to be a finite number');\n    }\n    return (async function* __throttle() {\n        let sent = 0;\n        let time;\n        for await (const val of iterable) {\n            if (sent < limit) {\n                if (typeof time === 'undefined') {\n                    time = Date.now();\n                }\n                sent++;\n                yield val;\n                continue;\n            }\n            // Only wait if the interval hasn't already passed while we were\n            // yielding the previous values.\n            const elapsedMs = Date.now() - time;\n            const waitFor = interval - elapsedMs;\n            if (waitFor > 0) {\n                await sleep(waitFor);\n            }\n            time = Date.now();\n            sent = 1;\n            yield val;\n        }\n    })();\n}\nfunction throttle(limit, interval, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _throttle(limit, interval, curriedIterable);\n    }\n    return _throttle(limit, interval, iterable);\n}\n\nfunction addTime(a, b) {\n    let seconds = a[0] + b[0];\n    let nanoseconds = a[1] + b[1];\n    if (nanoseconds >= 1000000000) {\n        const remainder = nanoseconds % 1000000000;\n        seconds += (nanoseconds - remainder) / 1000000000;\n        nanoseconds = remainder;\n    }\n    return [seconds, nanoseconds];\n}\nasync function* _asyncTime(config, iterable) {\n    const itr = iterable[Symbol.asyncIterator]();\n    let total = [0, 0];\n    while (true) {\n        const start = process.hrtime();\n        const { value, done } = await itr.next();\n        const delta = process.hrtime(start);\n        total = addTime(total, delta);\n        if (config.progress) {\n            config.progress(delta, total);\n        }\n        if (done) {\n            if (config.total) {\n                config.total(total);\n            }\n            return value;\n        }\n        yield value;\n    }\n}\nfunction* _syncTime(config, iterable) {\n    const itr = iterable[Symbol.iterator]();\n    let total = [0, 0];\n    while (true) {\n        const start = process.hrtime();\n        const { value, done } = itr.next();\n        const delta = process.hrtime(start);\n        total = addTime(total, delta);\n        if (config.progress) {\n            config.progress(delta, total);\n        }\n        if (done) {\n            if (config.total) {\n                config.total(total);\n            }\n            return value;\n        }\n        yield value;\n    }\n}\nfunction time(config = {}, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => time(config, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator] !== undefined) {\n        return _asyncTime(config, iterable);\n    }\n    else {\n        return _syncTime(config, iterable);\n    }\n}\n\nfunction _transform(concurrency, func, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let ended = false;\n    let reading = false;\n    let inflightCount = 0;\n    let lastError = null;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const { resolve } = readQueue.shift();\n            const value = resultQueue.shift();\n            resolve({ done: false, value });\n        }\n        while (readQueue.length > 0 && inflightCount === 0 && ended) {\n            const { resolve, reject } = readQueue.shift();\n            if (lastError) {\n                reject(lastError);\n                lastError = null;\n            }\n            else {\n                resolve({ done: true, value: undefined });\n            }\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            fulfillReadQueue();\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (inflightCount + resultQueue.length >= concurrency) {\n            return;\n        }\n        reading = true;\n        inflightCount++;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n                inflightCount--;\n                fulfillReadQueue();\n            }\n            else {\n                mapAndQueue(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            inflightCount--;\n            lastError = error;\n            fulfillReadQueue();\n        }\n        reading = false;\n        fillQueue();\n    }\n    async function mapAndQueue(itrValue) {\n        try {\n            const value = await func(itrValue);\n            resultQueue.push(value);\n        }\n        catch (error) {\n            ended = true;\n            lastError = error;\n        }\n        inflightCount--;\n        fulfillReadQueue();\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length === 0) {\n            const deferred = defer();\n            readQueue.push(deferred);\n            fillQueue();\n            return deferred.promise;\n        }\n        const value = resultQueue.shift();\n        fillQueue();\n        return { done: false, value };\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction transform(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? transform(concurrency, curriedFunc, curriedIterable)\n            : transform(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => transform(concurrency, func, curriedIterable);\n    }\n    return _transform(concurrency, func, iterable);\n}\n\nasync function _writeToStream(stream, iterable) {\n    let lastError = null;\n    let errCb = null;\n    let drainCb = null;\n    const notifyError = err => {\n        lastError = err;\n        if (errCb) {\n            errCb(err);\n        }\n    };\n    const notifyDrain = () => {\n        if (drainCb) {\n            drainCb();\n        }\n    };\n    const cleanup = () => {\n        stream.removeListener('error', notifyError);\n        stream.removeListener('drain', notifyDrain);\n    };\n    stream.once('error', notifyError);\n    const waitForDrain = () => new Promise((resolve, reject) => {\n        if (lastError) {\n            return reject(lastError);\n        }\n        stream.once('drain', notifyDrain);\n        drainCb = resolve;\n        errCb = reject;\n    });\n    for await (const value of iterable) {\n        if (stream.write(value) === false) {\n            await waitForDrain();\n        }\n        if (lastError) {\n            break;\n        }\n    }\n    cleanup();\n    if (lastError) {\n        throw lastError;\n    }\n}\nfunction writeToStream(stream, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _writeToStream(stream, curriedIterable);\n    }\n    return _writeToStream(stream, iterable);\n}\n\nexport { batch, batchWithTimeout, buffer, collect, concat, consume, filter, flatMap, flatTransform, flatten, fromStream, getIterator, map, merge, parallelFlatMap, parallelMap, parallelMerge, pipeline, reduce, take, tap, throttle, time, transform, writeToStream };\n","function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n  this._timer = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts.slice(0);\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n  if (this._timer) {\n    clearTimeout(this._timer);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.push(err);\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(0, this._errors.length - 1);\n      timeout = this._cachedTimeouts.slice(-1);\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  this._timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      this._timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n","var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && (options.forever || options.retries === Infinity),\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * Math.max(opts.minTimeout, 1) * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n","module.exports = require('./lib/retry');","'use strict';\nconst retry = require('retry');\n\nconst networkErrorMsgs = [\n\t'Failed to fetch', // Chrome\n\t'NetworkError when attempting to fetch resource.', // Firefox\n\t'The Internet connection appears to be offline.', // Safari\n\t'Network request failed' // `cross-fetch`\n];\n\nclass AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\n\t\tif (message instanceof Error) {\n\t\t\tthis.originalError = message;\n\t\t\t({message} = message);\n\t\t} else {\n\t\t\tthis.originalError = new Error(message);\n\t\t\tthis.originalError.stack = this.stack;\n\t\t}\n\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\nconst decorateErrorWithCounts = (error, attemptNumber, options) => {\n\t// Minus 1 from attemptNumber because the first attempt does not count as a retry\n\tconst retriesLeft = options.retries - (attemptNumber - 1);\n\n\terror.attemptNumber = attemptNumber;\n\terror.retriesLeft = retriesLeft;\n\treturn error;\n};\n\nconst isNetworkError = errorMessage => networkErrorMsgs.includes(errorMessage);\n\nconst pRetry = (input, options) => new Promise((resolve, reject) => {\n\toptions = {\n\t\tonFailedAttempt: () => {},\n\t\tretries: 10,\n\t\t...options\n\t};\n\n\tconst operation = retry.operation(options);\n\n\toperation.attempt(async attemptNumber => {\n\t\ttry {\n\t\t\tresolve(await input(attemptNumber));\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof Error)) {\n\t\t\t\treject(new TypeError(`Non-error was thrown: \"${error}\". You should only throw errors.`));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (error instanceof AbortError) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error.originalError);\n\t\t\t} else if (error instanceof TypeError && !isNetworkError(error.message)) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tdecorateErrorWithCounts(error, attemptNumber, options);\n\n\t\t\t\ttry {\n\t\t\t\t\tawait options.onFailedAttempt(error);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!operation.retry(error)) {\n\t\t\t\t\treject(operation.mainError());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\n\nmodule.exports = pRetry;\n// TODO: remove this in the next major version\nmodule.exports.default = pRetry;\n\nmodule.exports.AbortError = AbortError;\n","'use strict'\n\n/**\n * Returns the last item of an (async) iterable, unless empty, in which case\n * return `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst last = async (source) => {\n  let res\n\n  for await (const entry of source) {\n    res = entry\n  }\n\n  return res\n}\n\nmodule.exports = last\n","const rawPipe = (...fns) => {\n  let res\n  while (fns.length) {\n    res = fns.shift()(res)\n  }\n  return res\n}\n\nconst isIterable = obj => obj && (\n  typeof obj[Symbol.asyncIterator] === 'function' ||\n  typeof obj[Symbol.iterator] === 'function' ||\n  typeof obj.next === 'function' // Probably, right?\n)\n\nconst isDuplex = obj => obj && typeof obj.sink === 'function' && isIterable(obj.source)\n\nconst duplexPipelineFn = duplex => source => {\n  duplex.sink(source) // TODO: error on sink side is unhandled rejection - this is the same as pull streams\n  return duplex.source\n}\n\nconst pipe = (...fns) => {\n  // Duplex at start: wrap in function and return duplex source\n  if (isDuplex(fns[0])) {\n    const duplex = fns[0]\n    fns[0] = () => duplex.source\n  // Iterable at start: wrap in function\n  } else if (isIterable(fns[0])) {\n    const source = fns[0]\n    fns[0] = () => source\n  }\n\n  if (fns.length > 1) {\n    // Duplex at end: use duplex sink\n    if (isDuplex(fns[fns.length - 1])) {\n      fns[fns.length - 1] = fns[fns.length - 1].sink\n    }\n  }\n\n  if (fns.length > 2) {\n    // Duplex in the middle, consume source with duplex sink and return duplex source\n    for (let i = 1; i < fns.length - 1; i++) {\n      if (isDuplex(fns[i])) {\n        fns[i] = duplexPipelineFn(fns[i])\n      }\n    }\n  }\n\n  return rawPipe(...fns)\n}\n\nmodule.exports = pipe\nmodule.exports.pipe = pipe\nmodule.exports.rawPipe = rawPipe\nmodule.exports.isIterable = isIterable\nmodule.exports.isDuplex = isDuplex\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = data => {\n  const code = varint.decode(data);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      switch (text[0]) {\n      case this.prefix: {\n          return this.baseDecode(text.slice(1));\n        }\n      default: {\n          throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n        }\n      }\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","const typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n];\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n];\nexport function is(value) {\n  if (value === null) {\n    return 'null';\n  }\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (value === true || value === false) {\n    return 'boolean';\n  }\n  const typeOf = typeof value;\n  if (typeofs.includes(typeOf)) {\n    return typeOf;\n  }\n  if (typeOf === 'function') {\n    return 'Function';\n  }\n  if (Array.isArray(value)) {\n    return 'Array';\n  }\n  if (isBuffer(value)) {\n    return 'Buffer';\n  }\n  const objectType = getObjectType(value);\n  if (objectType) {\n    return objectType;\n  }\n  return 'Object';\n}\nfunction isBuffer(value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value);\n}\nfunction getObjectType(value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1);\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName;\n  }\n  return undefined;\n}","class Type {\n  constructor(major, name, terminal) {\n    this.major = major;\n    this.majorEncoded = major << 5;\n    this.name = name;\n    this.terminal = terminal;\n  }\n  toString() {\n    return `Type[${ this.major }].${ this.name }`;\n  }\n  compare(typ) {\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0;\n  }\n}\nType.uint = new Type(0, 'uint', true);\nType.negint = new Type(1, 'negint', true);\nType.bytes = new Type(2, 'bytes', true);\nType.string = new Type(3, 'string', true);\nType.array = new Type(4, 'array', false);\nType.map = new Type(5, 'map', false);\nType.tag = new Type(6, 'tag', false);\nType.float = new Type(7, 'float', true);\nType.false = new Type(7, 'false', true);\nType.true = new Type(7, 'true', true);\nType.null = new Type(7, 'null', true);\nType.undefined = new Type(7, 'undefined', true);\nType.break = new Type(7, 'break', true);\nclass Token {\n  constructor(type, value, encodedLength) {\n    this.type = type;\n    this.value = value;\n    this.encodedLength = encodedLength;\n    this.encodedBytes = undefined;\n    this.byteValue = undefined;\n  }\n  toString() {\n    return `Token[${ this.type }].${ this.value }`;\n  }\n}\nexport {\n  Type,\n  Token\n};","export const useBuffer = globalThis.process && !globalThis.process.browser && globalThis.Buffer && typeof globalThis.Buffer.isBuffer === 'function';\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction isBuffer(buf) {\n  return useBuffer && globalThis.Buffer.isBuffer(buf);\n}\nexport function asU8A(buf) {\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf);\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf;\n}\nexport const toString = useBuffer ? (bytes, start, end) => {\n  return end - start > 64 ? globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8') : utf8Slice(bytes, start, end);\n} : (bytes, start, end) => {\n  return end - start > 64 ? textDecoder.decode(bytes.subarray(start, end)) : utf8Slice(bytes, start, end);\n};\nexport const fromString = useBuffer ? string => {\n  return string.length > 64 ? globalThis.Buffer.from(string) : utf8ToBytes(string);\n} : string => {\n  return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string);\n};\nexport const fromArray = arr => {\n  return Uint8Array.from(arr);\n};\nexport const slice = useBuffer ? (bytes, start, end) => {\n  if (isBuffer(bytes)) {\n    return new Uint8Array(bytes.subarray(start, end));\n  }\n  return bytes.slice(start, end);\n} : (bytes, start, end) => {\n  return bytes.slice(start, end);\n};\nexport const concat = useBuffer ? (chunks, length) => {\n  chunks = chunks.map(c => c instanceof Uint8Array ? c : globalThis.Buffer.from(c));\n  return asU8A(globalThis.Buffer.concat(chunks, length));\n} : (chunks, length) => {\n  const out = new Uint8Array(length);\n  let off = 0;\n  for (let b of chunks) {\n    if (off + b.length > out.length) {\n      b = b.subarray(0, out.length - off);\n    }\n    out.set(b, off);\n    off += b.length;\n  }\n  return out;\n};\nexport const alloc = useBuffer ? size => {\n  return globalThis.Buffer.allocUnsafe(size);\n} : size => {\n  return new Uint8Array(size);\n};\nexport const toHex = useBuffer ? d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return globalThis.Buffer.from(toBytes(d)).toString('hex');\n} : d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return Array.prototype.reduce.call(toBytes(d), (p, c) => `${ p }${ c.toString(16).padStart(2, '0') }`, '');\n};\nexport const fromHex = useBuffer ? hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  return globalThis.Buffer.from(hex, 'hex');\n} : hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  if (!hex.length) {\n    return new Uint8Array(0);\n  }\n  return new Uint8Array(hex.split('').map((c, i, d) => i % 2 === 0 ? `0x${ c }${ d[i + 1] }` : '').filter(Boolean).map(e => parseInt(e, 16)));\n};\nfunction toBytes(obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj;\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj);\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n}\nexport function compare(b1, b2) {\n  if (isBuffer(b1) && isBuffer(b2)) {\n    return b1.compare(b2);\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue;\n    }\n    return b1[i] < b2[i] ? -1 : 1;\n  }\n  return 0;\n}\nfunction utf8ToBytes(string, units = Infinity) {\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n    if (codePoint > 55295 && codePoint < 57344) {\n      if (!leadSurrogate) {\n        if (codePoint > 56319) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        } else if (i + 1 === length) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        }\n        leadSurrogate = codePoint;\n        continue;\n      }\n      if (codePoint < 56320) {\n        if ((units -= 3) > -1)\n          bytes.push(239, 191, 189);\n        leadSurrogate = codePoint;\n        continue;\n      }\n      codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n    } else if (leadSurrogate) {\n      if ((units -= 3) > -1)\n        bytes.push(239, 191, 189);\n    }\n    leadSurrogate = null;\n    if (codePoint < 128) {\n      if ((units -= 1) < 0)\n        break;\n      bytes.push(codePoint);\n    } else if (codePoint < 2048) {\n      if ((units -= 2) < 0)\n        break;\n      bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n    } else if (codePoint < 65536) {\n      if ((units -= 3) < 0)\n        break;\n      bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else if (codePoint < 1114112) {\n      if ((units -= 4) < 0)\n        break;\n      bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction utf8Slice(buf, offset, end) {\n  const res = [];\n  while (offset < end) {\n    const firstByte = buf[offset];\n    let codePoint = null;\n    let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = buf[offset + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        fourthByte = buf[offset + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n    }\n    if (codePoint === null) {\n      codePoint = 65533;\n      bytesPerSequence = 1;\n    } else if (codePoint > 65535) {\n      codePoint -= 65536;\n      res.push(codePoint >>> 10 & 1023 | 55296);\n      codePoint = 56320 | codePoint & 1023;\n    }\n    res.push(codePoint);\n    offset += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\nconst MAX_ARGUMENTS_LENGTH = 4096;\nexport function decodeCodePointsArray(codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints);\n  }\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}","import {\n  alloc,\n  concat,\n  slice\n} from './byte-utils.js';\nconst defaultChunkSize = 256;\nexport class Bl {\n  constructor(chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize;\n    this.cursor = 0;\n    this.maxCursor = -1;\n    this.chunks = [];\n    this._initReuseChunk = null;\n  }\n  reset() {\n    this.chunks = [];\n    this.cursor = 0;\n    this.maxCursor = -1;\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk);\n      this.maxCursor = this._initReuseChunk.length - 1;\n    }\n  }\n  push(bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1];\n    const newMax = this.cursor + bytes.length;\n    if (newMax <= this.maxCursor + 1) {\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n      topChunk.set(bytes, chunkPos);\n    } else {\n      if (topChunk) {\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n        if (chunkPos < topChunk.length) {\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos);\n          this.maxCursor = this.cursor - 1;\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        topChunk = alloc(this.chunkSize);\n        this.chunks.push(topChunk);\n        this.maxCursor += topChunk.length;\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk;\n        }\n        topChunk.set(bytes, 0);\n      } else {\n        this.chunks.push(bytes);\n        this.maxCursor += bytes.length;\n      }\n    }\n    this.cursor += bytes.length;\n  }\n  toBytes(reset = false) {\n    let byts;\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0];\n      if (reset && this.cursor > chunk.length / 2) {\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\n        this._initReuseChunk = null;\n        this.chunks = [];\n      } else {\n        byts = slice(chunk, 0, this.cursor);\n      }\n    } else {\n      byts = concat(this.chunks, this.cursor);\n    }\n    if (reset) {\n      this.reset();\n    }\n    return byts;\n  }\n}","const decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\n  }\n}\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  decodeErrPrefix,\n  assertEnoughData\n} from './common.js';\nexport const uintBoundaries = [\n  24,\n  256,\n  65536,\n  4294967296,\n  BigInt('18446744073709551616')\n];\nexport function readUint8(data, offset, options) {\n  assertEnoughData(data, offset, 1);\n  const value = data[offset];\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint16(data, offset, options) {\n  assertEnoughData(data, offset, 2);\n  const value = data[offset] << 8 | data[offset + 1];\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint32(data, offset, options) {\n  assertEnoughData(data, offset, 4);\n  const value = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint64(data, offset, options) {\n  assertEnoughData(data, offset, 8);\n  const hi = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  const lo = data[offset + 4] * 16777216 + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7];\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value);\n  }\n  if (options.allowBigInt === true) {\n    return value;\n  }\n  throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n}\nexport function decodeUint8(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2);\n}\nexport function decodeUint16(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3);\n}\nexport function decodeUint32(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5);\n}\nexport function decodeUint64(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9);\n}\nexport function encodeUint(buf, token) {\n  return encodeUintValue(buf, 0, token.value);\n}\nexport function encodeUintValue(buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint);\n    buf.push([major | nuint]);\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 24,\n      nuint\n    ]);\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 25,\n      nuint >>> 8,\n      nuint & 255\n    ]);\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 26,\n      nuint >>> 24 & 255,\n      nuint >>> 16 & 255,\n      nuint >>> 8 & 255,\n      nuint & 255\n    ]);\n  } else {\n    const buint = BigInt(uint);\n    if (buint < uintBoundaries[4]) {\n      const set = [\n        major | 27,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ];\n      let lo = Number(buint & BigInt(4294967295));\n      let hi = Number(buint >> BigInt(32) & BigInt(4294967295));\n      set[8] = lo & 255;\n      lo = lo >> 8;\n      set[7] = lo & 255;\n      lo = lo >> 8;\n      set[6] = lo & 255;\n      lo = lo >> 8;\n      set[5] = lo & 255;\n      set[4] = hi & 255;\n      hi = hi >> 8;\n      set[3] = hi & 255;\n      hi = hi >> 8;\n      set[2] = hi & 255;\n      hi = hi >> 8;\n      set[1] = hi & 255;\n      buf.push(set);\n    } else {\n      throw new Error(`${ decodeErrPrefix } encountered BigInt larger than allowable range`);\n    }\n  }\n}\nencodeUint.encodedSize = function encodedSize(token) {\n  return encodeUintValue.encodedSize(token.value);\n};\nencodeUintValue.encodedSize = function encodedSize(uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1;\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2;\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3;\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeUint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : 0;\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nexport function decodeNegint8(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeNegint16(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeNegint32(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint32(data, pos + 1, options), 5);\n}\nconst neg1b = BigInt(-1);\nconst pos1b = BigInt(1);\nexport function decodeNegint64(data, pos, _minor, options) {\n  const int = uint.readUint64(data, pos + 1, options);\n  if (typeof int !== 'bigint') {\n    const value = -1 - int;\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new Token(Type.negint, value, 9);\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n  }\n  return new Token(Type.negint, neg1b - BigInt(int), 9);\n}\nexport function encodeNegint(buf, token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  uint.encodeUintValue(buf, token.type.majorEncoded, unsigned);\n}\nencodeNegint.encodedSize = function encodedSize(token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  if (unsigned < uint.uintBoundaries[0]) {\n    return 1;\n  }\n  if (unsigned < uint.uintBoundaries[1]) {\n    return 2;\n  }\n  if (unsigned < uint.uintBoundaries[2]) {\n    return 3;\n  }\n  if (unsigned < uint.uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeNegint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : 0;\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport {\n  compare,\n  fromString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length) {\n  assertEnoughData(data, pos, prefix + length);\n  const buf = slice(data, pos + prefix, pos + prefix + length);\n  return new Token(Type.bytes, buf, prefix + length);\n}\nexport function decodeBytesCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeBytes8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeBytes16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeBytes32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeBytes64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer bytes lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nfunction tokenBytes(token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === Type.string ? fromString(token.value) : token.value;\n  }\n  return token.encodedBytes;\n}\nexport function encodeBytes(buf, token) {\n  const bytes = tokenBytes(token);\n  uint.encodeUintValue(buf, token.type.majorEncoded, bytes.length);\n  buf.push(bytes);\n}\nencodeBytes.encodedSize = function encodedSize(token) {\n  const bytes = tokenBytes(token);\n  return uint.encodeUintValue.encodedSize(bytes.length) + bytes.length;\n};\nencodeBytes.compareTokens = function compareTokens(tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2));\n};\nexport function compareBytes(b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : compare(b1, b2);\n}","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport { encodeBytes } from './2bytes.js';\nimport {\n  toString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length, options) {\n  const totLength = prefix + length;\n  assertEnoughData(data, pos, totLength);\n  const tok = new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength);\n  if (options.retainStringBytes === true) {\n    tok.byteValue = slice(data, pos + prefix, pos + totLength);\n  }\n  return tok;\n}\nexport function decodeStringCompact(data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options);\n}\nexport function decodeString8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options), options);\n}\nexport function decodeString16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options), options);\n}\nexport function decodeString32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options), options);\n}\nexport function decodeString64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer string lengths not supported`);\n  }\n  return toToken(data, pos, 9, l, options);\n}\nexport const encodeString = encodeBytes;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.array, length, prefix);\n}\nexport function decodeArrayCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeArray8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeArray16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeArray32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeArray64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer array lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeArrayIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeArray(buf, token) {\n  uint.encodeUintValue(buf, Type.array.majorEncoded, token.value);\n}\nencodeArray.compareTokens = uint.encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.map, length, prefix);\n}\nexport function decodeMapCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeMap8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeMap16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeMap32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeMap64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer map lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeMapIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeMap(buf, token) {\n  uint.encodeUintValue(buf, Type.map.majorEncoded, token.value);\n}\nencodeMap.compareTokens = uint.encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nexport function decodeTagCompact(_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1);\n}\nexport function decodeTag8(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeTag16(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeTag32(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5);\n}\nexport function decodeTag64(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9);\n}\nexport function encodeTag(buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value);\n}\nencodeTag.compareTokens = uint.encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport { decodeErrPrefix } from './common.js';\nimport { encodeUint } from './0uint.js';\nconst MINOR_FALSE = 20;\nconst MINOR_TRUE = 21;\nconst MINOR_NULL = 22;\nconst MINOR_UNDEFINED = 23;\nexport function decodeUndefined(_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${ decodeErrPrefix } undefined values are not supported`);\n  } else if (options.coerceUndefinedToNull === true) {\n    return new Token(Type.null, null, 1);\n  }\n  return new Token(Type.undefined, undefined, 1);\n}\nexport function decodeBreak(_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return new Token(Type.break, undefined, 1);\n}\nfunction createToken(value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${ decodeErrPrefix } NaN values are not supported`);\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${ decodeErrPrefix } Infinity values are not supported`);\n    }\n  }\n  return new Token(Type.float, value, bytes);\n}\nexport function decodeFloat16(data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options);\n}\nexport function decodeFloat32(data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options);\n}\nexport function decodeFloat64(data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options);\n}\nexport function encodeFloat(buf, token, options) {\n  const float = token.value;\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE]);\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE]);\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL]);\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED]);\n  } else {\n    let decoded;\n    let success = false;\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float);\n      decoded = readFloat16(ui8a, 1);\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 249;\n        buf.push(ui8a.slice(0, 3));\n        success = true;\n      } else {\n        encodeFloat32(float);\n        decoded = readFloat32(ui8a, 1);\n        if (float === decoded) {\n          ui8a[0] = 250;\n          buf.push(ui8a.slice(0, 5));\n          success = true;\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float);\n      decoded = readFloat64(ui8a, 1);\n      ui8a[0] = 251;\n      buf.push(ui8a.slice(0, 9));\n    }\n  }\n}\nencodeFloat.encodedSize = function encodedSize(token, options) {\n  const float = token.value;\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1;\n  }\n  let decoded;\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float);\n    decoded = readFloat16(ui8a, 1);\n    if (float === decoded || Number.isNaN(float)) {\n      return 3;\n    }\n    encodeFloat32(float);\n    decoded = readFloat32(ui8a, 1);\n    if (float === decoded) {\n      return 5;\n    }\n  }\n  return 9;\n};\nconst buffer = new ArrayBuffer(9);\nconst dataView = new DataView(buffer, 1);\nconst ui8a = new Uint8Array(buffer, 0);\nfunction encodeFloat16(inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 31744, false);\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 64512, false);\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 32256, false);\n  } else {\n    dataView.setFloat32(0, inp);\n    const valu32 = dataView.getUint32(0);\n    const exponent = (valu32 & 2139095040) >> 23;\n    const mantissa = valu32 & 8388607;\n    if (exponent === 255) {\n      dataView.setUint16(0, 31744, false);\n    } else if (exponent === 0) {\n      dataView.setUint16(0, (inp & 2147483648) >> 16 | mantissa >> 13, false);\n    } else {\n      const logicalExponent = exponent - 127;\n      if (logicalExponent < -24) {\n        dataView.setUint16(0, 0);\n      } else if (logicalExponent < -14) {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | 1 << 24 + logicalExponent, false);\n      } else {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | logicalExponent + 15 << 10 | mantissa >> 13, false);\n      }\n    }\n  }\n}\nfunction readFloat16(ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float16`);\n  }\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1];\n  if (half === 31744) {\n    return Infinity;\n  }\n  if (half === 64512) {\n    return -Infinity;\n  }\n  if (half === 32256) {\n    return NaN;\n  }\n  const exp = half >> 10 & 31;\n  const mant = half & 1023;\n  let val;\n  if (exp === 0) {\n    val = mant * 2 ** -24;\n  } else if (exp !== 31) {\n    val = (mant + 1024) * 2 ** (exp - 25);\n  } else {\n    val = mant === 0 ? Infinity : NaN;\n  }\n  return half & 32768 ? -val : val;\n}\nfunction encodeFloat32(inp) {\n  dataView.setFloat32(0, inp, false);\n}\nfunction readFloat32(ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float32`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false);\n}\nfunction encodeFloat64(inp) {\n  dataView.setFloat64(0, inp, false);\n}\nfunction readFloat64(ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float64`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false);\n}\nencodeFloat.compareTokens = encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport * as negint from './1negint.js';\nimport * as bytes from './2bytes.js';\nimport * as string from './3string.js';\nimport * as array from './4array.js';\nimport * as map from './5map.js';\nimport * as tag from './6tag.js';\nimport * as float from './7float.js';\nimport { decodeErrPrefix } from './common.js';\nimport { fromArray } from './byte-utils.js';\nfunction invalidMinor(data, pos, minor) {\n  throw new Error(`${ decodeErrPrefix } encountered invalid minor (${ minor }) for major ${ data[pos] >>> 5 }`);\n}\nfunction errorer(msg) {\n  return () => {\n    throw new Error(`${ decodeErrPrefix } ${ msg }`);\n  };\n}\nexport const jump = [];\nfor (let i = 0; i <= 23; i++) {\n  jump[i] = invalidMinor;\n}\njump[24] = uint.decodeUint8;\njump[25] = uint.decodeUint16;\njump[26] = uint.decodeUint32;\njump[27] = uint.decodeUint64;\njump[28] = invalidMinor;\njump[29] = invalidMinor;\njump[30] = invalidMinor;\njump[31] = invalidMinor;\nfor (let i = 32; i <= 55; i++) {\n  jump[i] = invalidMinor;\n}\njump[56] = negint.decodeNegint8;\njump[57] = negint.decodeNegint16;\njump[58] = negint.decodeNegint32;\njump[59] = negint.decodeNegint64;\njump[60] = invalidMinor;\njump[61] = invalidMinor;\njump[62] = invalidMinor;\njump[63] = invalidMinor;\nfor (let i = 64; i <= 87; i++) {\n  jump[i] = bytes.decodeBytesCompact;\n}\njump[88] = bytes.decodeBytes8;\njump[89] = bytes.decodeBytes16;\njump[90] = bytes.decodeBytes32;\njump[91] = bytes.decodeBytes64;\njump[92] = invalidMinor;\njump[93] = invalidMinor;\njump[94] = invalidMinor;\njump[95] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 96; i <= 119; i++) {\n  jump[i] = string.decodeStringCompact;\n}\njump[120] = string.decodeString8;\njump[121] = string.decodeString16;\njump[122] = string.decodeString32;\njump[123] = string.decodeString64;\njump[124] = invalidMinor;\njump[125] = invalidMinor;\njump[126] = invalidMinor;\njump[127] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 128; i <= 151; i++) {\n  jump[i] = array.decodeArrayCompact;\n}\njump[152] = array.decodeArray8;\njump[153] = array.decodeArray16;\njump[154] = array.decodeArray32;\njump[155] = array.decodeArray64;\njump[156] = invalidMinor;\njump[157] = invalidMinor;\njump[158] = invalidMinor;\njump[159] = array.decodeArrayIndefinite;\nfor (let i = 160; i <= 183; i++) {\n  jump[i] = map.decodeMapCompact;\n}\njump[184] = map.decodeMap8;\njump[185] = map.decodeMap16;\njump[186] = map.decodeMap32;\njump[187] = map.decodeMap64;\njump[188] = invalidMinor;\njump[189] = invalidMinor;\njump[190] = invalidMinor;\njump[191] = map.decodeMapIndefinite;\nfor (let i = 192; i <= 215; i++) {\n  jump[i] = tag.decodeTagCompact;\n}\njump[216] = tag.decodeTag8;\njump[217] = tag.decodeTag16;\njump[218] = tag.decodeTag32;\njump[219] = tag.decodeTag64;\njump[220] = invalidMinor;\njump[221] = invalidMinor;\njump[222] = invalidMinor;\njump[223] = invalidMinor;\nfor (let i = 224; i <= 243; i++) {\n  jump[i] = errorer('simple values are not supported');\n}\njump[244] = invalidMinor;\njump[245] = invalidMinor;\njump[246] = invalidMinor;\njump[247] = float.decodeUndefined;\njump[248] = errorer('simple values are not supported');\njump[249] = float.decodeFloat16;\njump[250] = float.decodeFloat32;\njump[251] = float.decodeFloat64;\njump[252] = invalidMinor;\njump[253] = invalidMinor;\njump[254] = invalidMinor;\njump[255] = float.decodeBreak;\nexport const quick = [];\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1);\n}\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1);\n}\nquick[64] = new Token(Type.bytes, new Uint8Array(0), 1);\nquick[96] = new Token(Type.string, '', 1);\nquick[128] = new Token(Type.array, 0, 1);\nquick[160] = new Token(Type.map, 0, 1);\nquick[244] = new Token(Type.false, false, 1);\nquick[245] = new Token(Type.true, true, 1);\nquick[246] = new Token(Type.null, null, 1);\nexport function quickEncodeToken(token) {\n  switch (token.type) {\n  case Type.false:\n    return fromArray([244]);\n  case Type.true:\n    return fromArray([245]);\n  case Type.null:\n    return fromArray([246]);\n  case Type.bytes:\n    if (!token.value.length) {\n      return fromArray([64]);\n    }\n    return;\n  case Type.string:\n    if (token.value === '') {\n      return fromArray([96]);\n    }\n    return;\n  case Type.array:\n    if (token.value === 0) {\n      return fromArray([128]);\n    }\n    return;\n  case Type.map:\n    if (token.value === 0) {\n      return fromArray([160]);\n    }\n    return;\n  case Type.uint:\n    if (token.value < 24) {\n      return fromArray([Number(token.value)]);\n    }\n    return;\n  case Type.negint:\n    if (token.value >= -24) {\n      return fromArray([31 - Number(token.value)]);\n    }\n  }\n}","import { is } from './is.js';\nimport {\n  Token,\n  Type\n} from './token.js';\nimport { Bl } from './bl.js';\nimport { encodeErrPrefix } from './common.js';\nimport { quickEncodeToken } from './jump.js';\nimport { asU8A } from './byte-utils.js';\nimport { encodeUint } from './0uint.js';\nimport { encodeNegint } from './1negint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { encodeString } from './3string.js';\nimport { encodeArray } from './4array.js';\nimport { encodeMap } from './5map.js';\nimport { encodeTag } from './6tag.js';\nimport { encodeFloat } from './7float.js';\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken\n};\nconst cborEncoders = [];\ncborEncoders[Type.uint.major] = encodeUint;\ncborEncoders[Type.negint.major] = encodeNegint;\ncborEncoders[Type.bytes.major] = encodeBytes;\ncborEncoders[Type.string.major] = encodeString;\ncborEncoders[Type.array.major] = encodeArray;\ncborEncoders[Type.map.major] = encodeMap;\ncborEncoders[Type.tag.major] = encodeTag;\ncborEncoders[Type.float.major] = encodeFloat;\nconst buf = new Bl();\nclass Ref {\n  constructor(obj, parent) {\n    this.obj = obj;\n    this.parent = parent;\n  }\n  includes(obj) {\n    let p = this;\n    do {\n      if (p.obj === obj) {\n        return true;\n      }\n    } while (p = p.parent);\n    return false;\n  }\n  static createCheck(stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${ encodeErrPrefix } object contains circular references`);\n    }\n    return new Ref(obj, stack);\n  }\n}\nconst simpleTokens = {\n  null: new Token(Type.null, null),\n  undefined: new Token(Type.undefined, undefined),\n  true: new Token(Type.true, true),\n  false: new Token(Type.false, false),\n  emptyArray: new Token(Type.array, 0),\n  emptyMap: new Token(Type.map, 0)\n};\nconst typeEncoders = {\n  number(obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new Token(Type.float, obj);\n    } else if (obj >= 0) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  bigint(obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  Uint8Array(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, obj);\n  },\n  string(obj, _typ, _options, _refStack) {\n    return new Token(Type.string, obj);\n  },\n  boolean(obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false;\n  },\n  null(_obj, _typ, _options, _refStack) {\n    return simpleTokens.null;\n  },\n  undefined(_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined;\n  },\n  ArrayBuffer(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj));\n  },\n  DataView(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength));\n  },\n  Array(obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyArray,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyArray;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack);\n    }\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.array, obj.length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.array, obj.length),\n      entries\n    ];\n  },\n  Object(obj, typ, options, refStack) {\n    const isMap = typ !== 'Object';\n    const keys = isMap ? obj.keys() : Object.keys(obj);\n    const length = isMap ? obj.size : keys.length;\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyMap,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyMap;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ];\n    }\n    sortMapEntries(entries, options);\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.map, length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.map, length),\n      entries\n    ];\n  }\n};\ntypeEncoders.Map = typeEncoders.Object;\ntypeEncoders.Buffer = typeEncoders.Uint8Array;\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${ typ }Array`] = typeEncoders.DataView;\n}\nfunction objectToTokens(obj, options = {}, refStack) {\n  const typ = is(obj);\n  const customTypeEncoder = options && options.typeEncoders && options.typeEncoders[typ] || typeEncoders[typ];\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack);\n    if (tokens != null) {\n      return tokens;\n    }\n  }\n  const typeEncoder = typeEncoders[typ];\n  if (!typeEncoder) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: ${ typ }`);\n  }\n  return typeEncoder(obj, typ, options, refStack);\n}\nfunction sortMapEntries(entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter);\n  }\n}\nfunction mapSorter(e1, e2) {\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0];\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0];\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type);\n  }\n  const major = keyToken1.type.major;\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2);\n  if (tcmp === 0) {\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone');\n  }\n  return tcmp;\n}\nfunction tokensToEncoded(buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options);\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options);\n  }\n}\nfunction encodeCustom(data, encoders, options) {\n  const tokens = objectToTokens(data, options);\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens);\n    if (quickBytes) {\n      return quickBytes;\n    }\n    const encoder = encoders[tokens.type.major];\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options);\n      const buf = new Bl(size);\n      encoder(buf, tokens, options);\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${ tokens } was wrong`);\n      }\n      return asU8A(buf.chunks[0]);\n    }\n  }\n  tokensToEncoded(buf, tokens, encoders, options);\n  return buf.toBytes(true);\n}\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, cborEncoders, options);\n}\nexport {\n  objectToTokens,\n  encode,\n  encodeCustom,\n  Ref\n};","import { decodeErrPrefix } from './common.js';\nimport { Type } from './token.js';\nimport {\n  jump,\n  quick\n} from './jump.js';\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n};\nclass Tokeniser {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  next() {\n    const byt = this.data[this.pos];\n    let token = quick[byt];\n    if (token === undefined) {\n      const decoder = jump[byt];\n      if (!decoder) {\n        throw new Error(`${ decodeErrPrefix } no decoder for major type ${ byt >>> 5 } (byte 0x${ byt.toString(16).padStart(2, '0') })`);\n      }\n      const minor = byt & 31;\n      token = decoder(this.data, this.pos, minor, this.options);\n    }\n    this.pos += token.encodedLength;\n    return token;\n  }\n}\nconst DONE = Symbol.for('DONE');\nconst BREAK = Symbol.for('BREAK');\nfunction tokenToArray(token, tokeniser, options) {\n  const arr = [];\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options);\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed array`);\n    }\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found array but not enough entries (got ${ i }, expected ${ token.value })`);\n    }\n    arr[i] = value;\n  }\n  return arr;\n}\nfunction tokenToMap(token, tokeniser, options) {\n  const useMaps = options.useMaps === true;\n  const obj = useMaps ? undefined : {};\n  const m = useMaps ? new Map() : undefined;\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options);\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed map`);\n    }\n    if (key === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no key], expected ${ token.value })`);\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${ decodeErrPrefix } non-string keys not supported (got ${ typeof key })`);\n    }\n    const value = tokensToObject(tokeniser, options);\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no value], expected ${ token.value })`);\n    }\n    if (useMaps) {\n      m.set(key, value);\n    } else {\n      obj[key] = value;\n    }\n  }\n  return useMaps ? m : obj;\n}\nfunction tokensToObject(tokeniser, options) {\n  if (tokeniser.done()) {\n    return DONE;\n  }\n  const token = tokeniser.next();\n  if (token.type === Type.break) {\n    return BREAK;\n  }\n  if (token.type.terminal) {\n    return token.value;\n  }\n  if (token.type === Type.array) {\n    return tokenToArray(token, tokeniser, options);\n  }\n  if (token.type === Type.map) {\n    return tokenToMap(token, tokeniser, options);\n  }\n  if (token.type === Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options);\n      return options.tags[token.value](tagged);\n    }\n    throw new Error(`${ decodeErrPrefix } tag not supported (${ token.value })`);\n  }\n  throw new Error('unsupported');\n}\nfunction decode(data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${ decodeErrPrefix } data to decode must be a Uint8Array`);\n  }\n  options = Object.assign({}, defaultDecodeOptions, options);\n  const tokeniser = options.tokenizer || new Tokeniser(data, options);\n  const decoded = tokensToObject(tokeniser, options);\n  if (decoded === DONE) {\n    throw new Error(`${ decodeErrPrefix } did not find any content to decode`);\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${ decodeErrPrefix } got unexpected break`);\n  }\n  if (!tokeniser.done()) {\n    throw new Error(`${ decodeErrPrefix } too many terminals, data makes no sense`);\n  }\n  return decoded;\n}\nexport {\n  Tokeniser,\n  tokensToObject,\n  decode\n};","import * as cborg from 'cborg';\nimport { CID } from 'multiformats/cid';\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1);\n  bytes.set(cid.bytes, 1);\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nexport const name = 'dag-cbor';\nexport const code = 113;\nexport const encode = node => cborg.encode(node, encodeOptions);\nexport const decode = data => cborg.decode(data, decodeOptions);","import varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { decode as decodeDagCbor } from '@ipld/dag-cbor';\nconst CIDV0_BYTES = {\n  SHA2_256: 18,\n  LENGTH: 32,\n  DAG_PB: 112\n};\nasync function readVarint(reader) {\n  const bytes = await reader.upTo(8);\n  const i = varint.decode(bytes);\n  reader.seek(varint.decode.bytes);\n  return i;\n}\nexport async function readHeader(reader) {\n  const length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)');\n  }\n  const header = await reader.exactly(length);\n  reader.seek(length);\n  const block = decodeDagCbor(header);\n  if (block == null || Array.isArray(block) || typeof block !== 'object') {\n    throw new Error('Invalid CAR header format');\n  }\n  if (block.version !== 1) {\n    if (typeof block.version === 'string') {\n      throw new Error(`Invalid CAR version: \"${ block.version }\"`);\n    }\n    throw new Error(`Invalid CAR version: ${ block.version }`);\n  }\n  if (!Array.isArray(block.roots)) {\n    throw new Error('Invalid CAR header format');\n  }\n  if (Object.keys(block).filter(p => p !== 'roots' && p !== 'version').length) {\n    throw new Error('Invalid CAR header format');\n  }\n  return block;\n}\nasync function readMultihash(reader) {\n  const bytes = await reader.upTo(8);\n  varint.decode(bytes);\n  const codeLength = varint.decode.bytes;\n  const length = varint.decode(bytes.subarray(varint.decode.bytes));\n  const lengthLength = varint.decode.bytes;\n  const mhLength = codeLength + lengthLength + length;\n  const multihash = await reader.exactly(mhLength);\n  reader.seek(mhLength);\n  return multihash;\n}\nasync function readCid(reader) {\n  const first = await reader.exactly(2);\n  if (first[0] === CIDV0_BYTES.SHA2_256 && first[1] === CIDV0_BYTES.LENGTH) {\n    const bytes = await reader.exactly(34);\n    reader.seek(34);\n    const multihash = Digest.decode(bytes);\n    return CID.create(0, CIDV0_BYTES.DAG_PB, multihash);\n  }\n  const version = await readVarint(reader);\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${ version })`);\n  }\n  const codec = await readVarint(reader);\n  const bytes = await readMultihash(reader);\n  const multihash = Digest.decode(bytes);\n  return CID.create(version, codec, multihash);\n}\nexport async function readBlockHead(reader) {\n  const start = reader.pos;\n  let length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)');\n  }\n  length += reader.pos - start;\n  const cid = await readCid(reader);\n  const blockLength = length - (reader.pos - start);\n  return {\n    cid,\n    length,\n    blockLength\n  };\n}\nasync function readBlock(reader) {\n  const {cid, blockLength} = await readBlockHead(reader);\n  const bytes = await reader.exactly(blockLength);\n  reader.seek(blockLength);\n  return {\n    bytes,\n    cid\n  };\n}\nasync function readBlockIndex(reader) {\n  const offset = reader.pos;\n  const {cid, length, blockLength} = await readBlockHead(reader);\n  const index = {\n    cid,\n    length,\n    blockLength,\n    offset,\n    blockOffset: reader.pos\n  };\n  reader.seek(index.blockLength);\n  return index;\n}\nexport function createDecoder(reader) {\n  const headerPromise = readHeader(reader);\n  return {\n    header: () => headerPromise,\n    async *blocks() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlock(reader);\n      }\n    },\n    async *blocksIndex() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlockIndex(reader);\n      }\n    }\n  };\n}\nexport function bytesReader(bytes) {\n  let pos = 0;\n  return {\n    async upTo(length) {\n      return bytes.subarray(pos, pos + Math.min(length, bytes.length - pos));\n    },\n    async exactly(length) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data');\n      }\n      return bytes.subarray(pos, pos + length);\n    },\n    seek(length) {\n      pos += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function chunkReader(readChunk) {\n  let pos = 0;\n  let have = 0;\n  let offset = 0;\n  let currentChunk = new Uint8Array(0);\n  const read = async length => {\n    have = currentChunk.length - offset;\n    const bufa = [currentChunk.subarray(offset)];\n    while (have < length) {\n      const chunk = await readChunk();\n      if (chunk == null) {\n        break;\n      }\n      if (have < 0) {\n        if (chunk.length > have) {\n          bufa.push(chunk.subarray(-have));\n        }\n      } else {\n        bufa.push(chunk);\n      }\n      have += chunk.length;\n    }\n    currentChunk = new Uint8Array(bufa.reduce((p, c) => p + c.length, 0));\n    let off = 0;\n    for (const b of bufa) {\n      currentChunk.set(b, off);\n      off += b.length;\n    }\n    offset = 0;\n  };\n  return {\n    async upTo(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      return currentChunk.subarray(offset, offset + Math.min(currentChunk.length - offset, length));\n    },\n    async exactly(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      if (currentChunk.length - offset < length) {\n        throw new Error('Unexpected end of data');\n      }\n      return currentChunk.subarray(offset, offset + length);\n    },\n    seek(length) {\n      pos += length;\n      offset += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function asyncIterableReader(asyncIterable) {\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  async function readChunk() {\n    const next = await iterator.next();\n    if (next.done) {\n      return null;\n    }\n    return next.value;\n  }\n  return chunkReader(readChunk);\n}","import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js';\nexport class CarReader {\n  constructor(version, roots, blocks) {\n    this._version = version;\n    this._roots = roots;\n    this._blocks = blocks;\n    this._keys = blocks.map(b => b.cid.toString());\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n  async has(key) {\n    return this._keys.indexOf(key.toString()) > -1;\n  }\n  async get(key) {\n    const index = this._keys.indexOf(key.toString());\n    return index > -1 ? this._blocks[index] : undefined;\n  }\n  async *blocks() {\n    for (const block of this._blocks) {\n      yield block;\n    }\n  }\n  async *cids() {\n    for (const block of this._blocks) {\n      yield block.cid;\n    }\n  }\n  static async fromBytes(bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array');\n    }\n    return decodeReaderComplete(bytesReader(bytes));\n  }\n  static async fromIterable(asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable');\n    }\n    return decodeReaderComplete(asyncIterableReader(asyncIterable));\n  }\n}\nasync function decodeReaderComplete(reader) {\n  const decoder = createDecoder(reader);\n  const {version, roots} = await decoder.header();\n  const blocks = [];\n  for await (const block of decoder.blocks()) {\n    blocks.push(block);\n  }\n  return new CarReader(version, roots, blocks);\n}\nexport const __browser = true;","import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js';\nexport class CarIteratorBase {\n  constructor(version, roots, iterable) {\n    this._version = version;\n    this._roots = roots;\n    this._iterable = iterable;\n    this._decoded = false;\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n}\nexport class CarBlockIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    return this._iterable[Symbol.asyncIterator]();\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n}\nexport class CarCIDIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    const iterable = this._iterable[Symbol.asyncIterator]();\n    return {\n      async next() {\n        const next = await iterable.next();\n        if (next.done) {\n          return next;\n        }\n        return {\n          done: false,\n          value: next.value.cid\n        };\n      }\n    };\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n}\nasync function fromBytes(bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new TypeError('fromBytes() requires a Uint8Array');\n  }\n  return decodeIterator(bytesReader(bytes));\n}\nasync function fromIterable(asyncIterable) {\n  if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n    throw new TypeError('fromIterable() requires an async iterable');\n  }\n  return decodeIterator(asyncIterableReader(asyncIterable));\n}\nasync function decodeIterator(reader) {\n  const decoder = createDecoder(reader);\n  const {version, roots} = await decoder.header();\n  return {\n    version,\n    roots,\n    iterator: decoder.blocks()\n  };\n}","import varint from 'varint';\nimport { encode as dagCborEncode } from '@ipld/dag-cbor';\nexport function createHeader(roots) {\n  const headerBytes = dagCborEncode({\n    version: 1,\n    roots\n  });\n  const varintBytes = varint.encode(headerBytes.length);\n  const header = new Uint8Array(varintBytes.length + headerBytes.length);\n  header.set(varintBytes, 0);\n  header.set(headerBytes, varintBytes.length);\n  return header;\n}\nfunction createEncoder(writer) {\n  return {\n    async setRoots(roots) {\n      const bytes = createHeader(roots);\n      await writer.write(bytes);\n    },\n    async writeBlock(block) {\n      const {cid, bytes} = block;\n      await writer.write(new Uint8Array(varint.encode(cid.bytes.length + bytes.length)));\n      await writer.write(cid.bytes);\n      if (bytes.length) {\n        await writer.write(bytes);\n      }\n    },\n    async close() {\n      return writer.end();\n    }\n  };\n}\nexport {\n  createEncoder\n};","function noop() {\n}\nexport function create() {\n  const chunkQueue = [];\n  let drainer = null;\n  let drainerResolver = noop;\n  let ended = false;\n  let outWait = null;\n  let outWaitResolver = noop;\n  const makeDrainer = () => {\n    if (!drainer) {\n      drainer = new Promise(resolve => {\n        drainerResolver = () => {\n          drainer = null;\n          drainerResolver = noop;\n          resolve();\n        };\n      });\n    }\n    return drainer;\n  };\n  const writer = {\n    write(chunk) {\n      chunkQueue.push(chunk);\n      const drainer = makeDrainer();\n      outWaitResolver();\n      return drainer;\n    },\n    async end() {\n      ended = true;\n      const drainer = makeDrainer();\n      outWaitResolver();\n      return drainer;\n    }\n  };\n  const iterator = {\n    async next() {\n      const chunk = chunkQueue.shift();\n      if (chunk) {\n        if (chunkQueue.length === 0) {\n          drainerResolver();\n        }\n        return {\n          done: false,\n          value: chunk\n        };\n      }\n      if (ended) {\n        drainerResolver();\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n      if (!outWait) {\n        outWait = new Promise(resolve => {\n          outWaitResolver = () => {\n            outWait = null;\n            outWaitResolver = noop;\n            return resolve(iterator.next());\n          };\n        });\n      }\n      return outWait;\n    }\n  };\n  return {\n    writer,\n    iterator\n  };\n}","import { CID } from 'multiformats/cid';\nimport {\n  createEncoder,\n  createHeader\n} from './encoder.js';\nimport { create as iteratorChannel } from './iterator-channel.js';\nimport {\n  bytesReader,\n  readHeader\n} from './decoder.js';\nexport class CarWriter {\n  constructor(roots, encoder) {\n    this._encoder = encoder;\n    this._mutex = encoder.setRoots(roots);\n    this._ended = false;\n  }\n  async put(block) {\n    if (!(block.bytes instanceof Uint8Array) || !block.cid) {\n      throw new TypeError('Can only write {cid, bytes} objects');\n    }\n    if (this._ended) {\n      throw new Error('Already closed');\n    }\n    const cid = CID.asCID(block.cid);\n    if (!cid) {\n      throw new TypeError('Can only write {cid, bytes} objects');\n    }\n    this._mutex = this._mutex.then(() => this._encoder.writeBlock({\n      cid,\n      bytes: block.bytes\n    }));\n    return this._mutex;\n  }\n  async close() {\n    if (this._ended) {\n      throw new Error('Already closed');\n    }\n    await this._mutex;\n    this._ended = true;\n    return this._encoder.close();\n  }\n  static create(roots) {\n    roots = toRoots(roots);\n    const {encoder, iterator} = encodeWriter();\n    const writer = new CarWriter(roots, encoder);\n    const out = new CarWriterOut(iterator);\n    return {\n      writer,\n      out\n    };\n  }\n  static createAppender() {\n    const {encoder, iterator} = encodeWriter();\n    encoder.setRoots = () => Promise.resolve();\n    const writer = new CarWriter([], encoder);\n    const out = new CarWriterOut(iterator);\n    return {\n      writer,\n      out\n    };\n  }\n  static async updateRootsInBytes(bytes, roots) {\n    const reader = bytesReader(bytes);\n    await readHeader(reader);\n    const newHeader = createHeader(roots);\n    if (reader.pos !== newHeader.length) {\n      throw new Error(`updateRoots() can only overwrite a header of the same length (old header is ${ reader.pos } bytes, new header is ${ newHeader.length } bytes)`);\n    }\n    bytes.set(newHeader, 0);\n    return bytes;\n  }\n}\nexport class CarWriterOut {\n  constructor(iterator) {\n    this._iterator = iterator;\n  }\n  [Symbol.asyncIterator]() {\n    if (this._iterating) {\n      throw new Error('Multiple iterator not supported');\n    }\n    this._iterating = true;\n    return this._iterator;\n  }\n}\nfunction encodeWriter() {\n  const iw = iteratorChannel();\n  const {writer, iterator} = iw;\n  const encoder = createEncoder(writer);\n  return {\n    encoder,\n    iterator\n  };\n}\nfunction toRoots(roots) {\n  if (roots === undefined) {\n    return [];\n  }\n  if (!Array.isArray(roots)) {\n    const cid = CID.asCID(roots);\n    if (!cid) {\n      throw new TypeError('roots must be a single CID or an array of CIDs');\n    }\n    return [cid];\n  }\n  const _roots = [];\n  for (const root of roots) {\n    const _root = CID.asCID(root);\n    if (!_root) {\n      throw new TypeError('roots must be a single CID or an array of CIDs');\n    }\n    _roots.push(_root);\n  }\n  return _roots;\n}\nexport const __browser = true;","'use strict'\n\n/**\n * Takes an (async) iterable that emits things and returns an async iterable that\n * emits those things in fixed-sized batches.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T[]>}\n */\nasync function * batch (source, size = 1) {\n  /** @type {T[]} */\n  let things = []\n\n  if (size < 1) {\n    size = 1\n  }\n\n  for await (const thing of source) {\n    things.push(thing)\n\n    while (things.length >= size) {\n      yield things.slice(0, size)\n\n      things = things.slice(size)\n    }\n  }\n\n  while (things.length) {\n    yield things.slice(0, size)\n\n    things = things.slice(size)\n  }\n}\n\nmodule.exports = batch\n","'use strict'\n\nconst batch = require('it-batch')\n\n/**\n * @template T\n * @typedef {{ok:true, value:T}} Success\n */\n\n/**\n * @typedef {{ok:false, err:Error}} Failure\n */\n\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n *\n * @template T\n * @param {AsyncIterable<() => Promise<T>>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T>}\n */\nasync function * parallelBatch (source, size = 1) {\n  for await (const tasks of batch(source, size)) {\n    /** @type {Promise<Success<T>|Failure>[]} */\n    const things = tasks.map(\n      /**\n       * @param {() => Promise<T>} p\n       */\n      p => {\n        return p().then(value => ({ ok: true, value }), err => ({ ok: false, err }))\n      })\n\n    for (let i = 0; i < things.length; i++) {\n      const result = await things[i]\n\n      if (result.ok) {\n        yield result.value\n      } else {\n        throw result.err\n      }\n    }\n  }\n}\n\nmodule.exports = parallelBatch\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOptions = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(object) {\n\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\n\t\tdefineProperty(result, key, clone(object[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","/* jshint -W086: true */\n// +----------------------------------------------------------------------+\n// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\n// |----------------------------------------------------------------------|\n// | Copyright (c) 2012-2015 Karan Lyons                                       |\n// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |\n// | Freely distributable under the MIT license.                          |\n// +----------------------------------------------------------------------+\n\n;(function (root, undefined) {\n    'use strict';\n\n    // Create a local object that'll be exported or referenced globally.\n    var library = {\n        'version': '3.0.0',\n        'x86': {},\n        'x64': {},\n        'inputValidation': true\n    };\n\n    // PRIVATE FUNCTIONS\n    // -----------------\n\n    function _validBytes(bytes) {\n        // check the input is an array or a typed array\n        if (!Array.isArray(bytes) && !ArrayBuffer.isView(bytes)) {\n            return false;\n        }\n\n        // check all bytes are actually bytes\n        for (var i = 0; i < bytes.length; i++) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] < 0 || bytes[i] > 255) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function _x86Multiply(m, n) {\n        //\n        // Given two 32bit ints, returns the two multiplied together as a\n        // 32bit int.\n        //\n\n        return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\n    }\n\n    function _x86Rotl(m, n) {\n        //\n        // Given a 32bit int and an int representing a number of bit positions,\n        // returns the 32bit int rotated left by that number of positions.\n        //\n\n        return (m << n) | (m >>> (32 - n));\n    }\n\n    function _x86Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x86 mix of that block.\n        //\n\n        h ^= h >>> 16;\n        h = _x86Multiply(h, 0x85ebca6b);\n        h ^= h >>> 13;\n        h = _x86Multiply(h, 0xc2b2ae35);\n        h ^= h >>> 16;\n\n        return h;\n    }\n\n    function _x64Add(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // added together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] + n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] + n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] + n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += m[0] + n[0];\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Multiply(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // multiplied together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] * n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] * n[3];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[2] += m[3] * n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] * n[3];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[2] * n[2];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[3] * n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Rotl(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) rotated left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 32) {\n            return [m[1], m[0]];\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n        } else {\n            n -= 32;\n            return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n        }\n    }\n\n    function _x64LeftShift(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) shifted left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 0) {\n            return m;\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n        } else {\n            return [m[1] << (n - 32), 0];\n        }\n    }\n\n    function _x64Xor(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // xored together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        return [m[0] ^ n[0], m[1] ^ n[1]];\n    }\n\n    function _x64Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x64 mix of that block.\n        // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n        // only place where we need to right shift 64bit ints.)\n        //\n\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n\n        return h;\n    }\n\n    // PUBLIC FUNCTIONS\n    // ----------------\n\n    library.x86.hash32 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 32 bit hash\n        // using the x86 flavor of MurmurHash3, as an unsigned int.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 4;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n\n        var k1 = 0;\n\n        var c1 = 0xcc9e2d51;\n        var c2 = 0x1b873593;\n\n        for (var i = 0; i < blocks; i = i + 4) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n\n            h1 ^= k1;\n            h1 = _x86Rotl(h1, 13);\n            h1 = _x86Multiply(h1, 5) + 0xe6546b64;\n        }\n\n        k1 = 0;\n\n        switch (remainder) {\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h1 = _x86Fmix(h1);\n\n        return h1 >>> 0;\n    };\n\n    library.x86.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n\n        seed = seed || 0;\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n        var h2 = seed;\n        var h3 = seed;\n        var h4 = seed;\n\n        var k1 = 0;\n        var k2 = 0;\n        var k3 = 0;\n        var k4 = 0;\n\n        var c1 = 0x239b961b;\n        var c2 = 0xab0e9789;\n        var c3 = 0x38b34ae5;\n        var c4 = 0xa1e38b93;\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n            k2 = (bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24);\n            k3 = (bytes[i + 8]) | (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24);\n            k4 = (bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n            h1 ^= k1;\n\n            h1 = _x86Rotl(h1, 19);\n            h1 += h2;\n            h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\n\n            k2 = _x86Multiply(k2, c2);\n            k2 = _x86Rotl(k2, 16);\n            k2 = _x86Multiply(k2, c3);\n            h2 ^= k2;\n\n            h2 = _x86Rotl(h2, 17);\n            h2 += h3;\n            h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\n\n            k3 = _x86Multiply(k3, c3);\n            k3 = _x86Rotl(k3, 17);\n            k3 = _x86Multiply(k3, c4);\n            h3 ^= k3;\n\n            h3 = _x86Rotl(h3, 15);\n            h3 += h4;\n            h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\n\n            k4 = _x86Multiply(k4, c4);\n            k4 = _x86Rotl(k4, 18);\n            k4 = _x86Multiply(k4, c1);\n            h4 ^= k4;\n\n            h4 = _x86Rotl(h4, 13);\n            h4 += h1;\n            h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\n        }\n\n        k1 = 0;\n        k2 = 0;\n        k3 = 0;\n        k4 = 0;\n\n        switch (remainder) {\n            case 15:\n                k4 ^= bytes[i + 14] << 16;\n\n            case 14:\n                k4 ^= bytes[i + 13] << 8;\n\n            case 13:\n                k4 ^= bytes[i + 12];\n                k4 = _x86Multiply(k4, c4);\n                k4 = _x86Rotl(k4, 18);\n                k4 = _x86Multiply(k4, c1);\n                h4 ^= k4;\n\n            case 12:\n                k3 ^= bytes[i + 11] << 24;\n\n            case 11:\n                k3 ^= bytes[i + 10] << 16;\n\n            case 10:\n                k3 ^= bytes[i + 9] << 8;\n\n            case 9:\n                k3 ^= bytes[i + 8];\n                k3 = _x86Multiply(k3, c3);\n                k3 = _x86Rotl(k3, 17);\n                k3 = _x86Multiply(k3, c4);\n                h3 ^= k3;\n\n            case 8:\n                k2 ^= bytes[i + 7] << 24;\n\n            case 7:\n                k2 ^= bytes[i + 6] << 16;\n\n            case 6:\n                k2 ^= bytes[i + 5] << 8;\n\n            case 5:\n                k2 ^= bytes[i + 4];\n                k2 = _x86Multiply(k2, c2);\n                k2 = _x86Rotl(k2, 16);\n                k2 = _x86Multiply(k2, c3);\n                h2 ^= k2;\n\n            case 4:\n                k1 ^= bytes[i + 3] << 24;\n\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h2 ^= bytes.length;\n        h3 ^= bytes.length;\n        h4 ^= bytes.length;\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        h1 = _x86Fmix(h1);\n        h2 = _x86Fmix(h2);\n        h3 = _x86Fmix(h3);\n        h4 = _x86Fmix(h4);\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        return (\"00000000\" + (h1 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h3 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h4 >>> 0).toString(16)).slice(-8);\n    };\n\n    library.x64.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = [0, seed];\n        var h2 = [0, seed];\n\n        var k1 = [0, 0];\n        var k2 = [0, 0];\n\n        var c1 = [0x87c37b91, 0x114253d5];\n        var c2 = [0x4cf5ad43, 0x2745937f];\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = [(bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24), (bytes[i]) |\n                (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24)];\n            k2 = [(bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24), (bytes[i + 8]) |\n                (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24)];\n\n            k1 = _x64Multiply(k1, c1);\n            k1 = _x64Rotl(k1, 31);\n            k1 = _x64Multiply(k1, c2);\n            h1 = _x64Xor(h1, k1);\n\n            h1 = _x64Rotl(h1, 27);\n            h1 = _x64Add(h1, h2);\n            h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n\n            k2 = _x64Multiply(k2, c2);\n            k2 = _x64Rotl(k2, 33);\n            k2 = _x64Multiply(k2, c1);\n            h2 = _x64Xor(h2, k2);\n\n            h2 = _x64Rotl(h2, 31);\n            h2 = _x64Add(h2, h1);\n            h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n        }\n\n        k1 = [0, 0];\n        k2 = [0, 0];\n\n        switch (remainder) {\n            case 15:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 14]], 48));\n\n            case 14:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 13]], 40));\n\n            case 13:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 12]], 32));\n\n            case 12:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 11]], 24));\n\n            case 11:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 10]], 16));\n\n            case 10:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 9]], 8));\n\n            case 9:\n                k2 = _x64Xor(k2, [0, bytes[i + 8]]);\n                k2 = _x64Multiply(k2, c2);\n                k2 = _x64Rotl(k2, 33);\n                k2 = _x64Multiply(k2, c1);\n                h2 = _x64Xor(h2, k2);\n\n            case 8:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 7]], 56));\n\n            case 7:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 6]], 48));\n\n            case 6:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 5]], 40));\n\n            case 5:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 4]], 32));\n\n            case 4:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 3]], 24));\n\n            case 3:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 2]], 16));\n\n            case 2:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 1]], 8));\n\n            case 1:\n                k1 = _x64Xor(k1, [0, bytes[i]]);\n                k1 = _x64Multiply(k1, c1);\n                k1 = _x64Rotl(k1, 31);\n                k1 = _x64Multiply(k1, c2);\n                h1 = _x64Xor(h1, k1);\n        }\n\n        h1 = _x64Xor(h1, [0, bytes.length]);\n        h2 = _x64Xor(h2, [0, bytes.length]);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        h1 = _x64Fmix(h1);\n        h2 = _x64Fmix(h2);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        return (\"00000000\" + (h1[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h1[1] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[1] >>> 0).toString(16)).slice(-8);\n    };\n\n    // INITIALIZATION\n    // --------------\n\n    // Export murmurHash3 for CommonJS, either as an AMD module or just as part\n    // of the global object.\n    if (typeof exports !== 'undefined') {\n\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = library;\n        }\n\n        exports.murmurHash3 = library;\n\n    } else if (typeof define === 'function' && define.amd) {\n\n        define([], function () {\n            return library;\n        });\n    } else {\n\n        // Use murmurHash3.noConflict to restore `murmurHash3` back to its\n        // original value. Returns a reference to the library object, to allow\n        // it to be used under a different name.\n        library._murmurHash3 = root.murmurHash3;\n\n        library.noConflict = function () {\n            root.murmurHash3 = library._murmurHash3;\n            library._murmurHash3 = undefined;\n            library.noConflict = undefined;\n\n            return library;\n        };\n\n        root.murmurHash3 = library;\n    }\n})(this);\n","module.exports = require('./lib/murmurHash3js');\n","import { from } from 'multiformats/hashes/hasher';\nimport { bytes } from 'multiformats';\nimport mur from 'murmurhash3js-revisited';\nfunction fromNumberTo32BitBuf(number) {\n  const bytes = new Array(4);\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 255;\n    number = number >> 8;\n  }\n  return new Uint8Array(bytes);\n}\nexport const murmur332 = from({\n  name: 'murmur3-32',\n  code: 35,\n  encode: input => fromNumberTo32BitBuf(mur.x86.hash32(input))\n});\nexport const murmur3128 = from({\n  name: 'murmur3-128',\n  code: 34,\n  encode: input => bytes.fromHex(mur.x64.hash128(input))\n});","import mergeOptions from 'merge-options';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { murmur3128 } from '@multiformats/murmur3';\nasync function hamtHashFn(buf) {\n  return (await murmur3128.encode(buf)).slice(0, 8).reverse();\n}\nconst defaultOptions = {\n  chunker: 'fixed',\n  strategy: 'balanced',\n  rawLeaves: false,\n  onlyHash: false,\n  reduceSingleLeafToSelf: true,\n  hasher: sha256,\n  leafType: 'file',\n  cidVersion: 0,\n  progress: () => () => {\n  },\n  shardSplitThreshold: 1000,\n  fileImportConcurrency: 50,\n  blockWriteConcurrency: 10,\n  minChunkSize: 262144,\n  maxChunkSize: 262144,\n  avgChunkSize: 262144,\n  window: 16,\n  polynomial: 17437180132763652,\n  maxChildrenPerNode: 174,\n  layerRepeat: 4,\n  wrapWithDirectory: false,\n  recursive: false,\n  hidden: false,\n  timeout: undefined,\n  hamtHashFn,\n  hamtHashCode: 34,\n  hamtBucketBits: 8\n};\nexport default (options = {}) => {\n  const defaults = mergeOptions.bind({ ignoreUndefined: true });\n  return defaults(defaultOptions, options);\n};","'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","import $protobuf from 'protobufjs/minimal.js';\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\nconst $root = $protobuf.roots['ipfs-unixfs'] || ($protobuf.roots['ipfs-unixfs'] = {});\nexport const Data = $root.Data = (() => {\n  function Data(p) {\n    this.blocksizes = [];\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  Data.prototype.Type = 0;\n  Data.prototype.Data = $util.newBuffer([]);\n  Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.blocksizes = $util.emptyArray;\n  Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.mode = 0;\n  Data.prototype.mtime = null;\n  Data.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    w.uint32(8).int32(m.Type);\n    if (m.Data != null && Object.hasOwnProperty.call(m, 'Data'))\n      w.uint32(18).bytes(m.Data);\n    if (m.filesize != null && Object.hasOwnProperty.call(m, 'filesize'))\n      w.uint32(24).uint64(m.filesize);\n    if (m.blocksizes != null && m.blocksizes.length) {\n      for (var i = 0; i < m.blocksizes.length; ++i)\n        w.uint32(32).uint64(m.blocksizes[i]);\n    }\n    if (m.hashType != null && Object.hasOwnProperty.call(m, 'hashType'))\n      w.uint32(40).uint64(m.hashType);\n    if (m.fanout != null && Object.hasOwnProperty.call(m, 'fanout'))\n      w.uint32(48).uint64(m.fanout);\n    if (m.mode != null && Object.hasOwnProperty.call(m, 'mode'))\n      w.uint32(56).uint32(m.mode);\n    if (m.mtime != null && Object.hasOwnProperty.call(m, 'mtime'))\n      $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n    return w;\n  };\n  Data.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.Type = r.int32();\n        break;\n      case 2:\n        m.Data = r.bytes();\n        break;\n      case 3:\n        m.filesize = r.uint64();\n        break;\n      case 4:\n        if (!(m.blocksizes && m.blocksizes.length))\n          m.blocksizes = [];\n        if ((t & 7) === 2) {\n          var c2 = r.uint32() + r.pos;\n          while (r.pos < c2)\n            m.blocksizes.push(r.uint64());\n        } else\n          m.blocksizes.push(r.uint64());\n        break;\n      case 5:\n        m.hashType = r.uint64();\n        break;\n      case 6:\n        m.fanout = r.uint64();\n        break;\n      case 7:\n        m.mode = r.uint32();\n        break;\n      case 8:\n        m.mtime = $root.UnixTime.decode(r, r.uint32());\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    if (!m.hasOwnProperty('Type'))\n      throw $util.ProtocolError('missing required \\'Type\\'', { instance: m });\n    return m;\n  };\n  Data.fromObject = function fromObject(d) {\n    if (d instanceof $root.Data)\n      return d;\n    var m = new $root.Data();\n    switch (d.Type) {\n    case 'Raw':\n    case 0:\n      m.Type = 0;\n      break;\n    case 'Directory':\n    case 1:\n      m.Type = 1;\n      break;\n    case 'File':\n    case 2:\n      m.Type = 2;\n      break;\n    case 'Metadata':\n    case 3:\n      m.Type = 3;\n      break;\n    case 'Symlink':\n    case 4:\n      m.Type = 4;\n      break;\n    case 'HAMTShard':\n    case 5:\n      m.Type = 5;\n      break;\n    }\n    if (d.Data != null) {\n      if (typeof d.Data === 'string')\n        $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n      else if (d.Data.length)\n        m.Data = d.Data;\n    }\n    if (d.filesize != null) {\n      if ($util.Long)\n        (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n      else if (typeof d.filesize === 'string')\n        m.filesize = parseInt(d.filesize, 10);\n      else if (typeof d.filesize === 'number')\n        m.filesize = d.filesize;\n      else if (typeof d.filesize === 'object')\n        m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n    }\n    if (d.blocksizes) {\n      if (!Array.isArray(d.blocksizes))\n        throw TypeError('.Data.blocksizes: array expected');\n      m.blocksizes = [];\n      for (var i = 0; i < d.blocksizes.length; ++i) {\n        if ($util.Long)\n          (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n        else if (typeof d.blocksizes[i] === 'string')\n          m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n        else if (typeof d.blocksizes[i] === 'number')\n          m.blocksizes[i] = d.blocksizes[i];\n        else if (typeof d.blocksizes[i] === 'object')\n          m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n      }\n    }\n    if (d.hashType != null) {\n      if ($util.Long)\n        (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n      else if (typeof d.hashType === 'string')\n        m.hashType = parseInt(d.hashType, 10);\n      else if (typeof d.hashType === 'number')\n        m.hashType = d.hashType;\n      else if (typeof d.hashType === 'object')\n        m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n    }\n    if (d.fanout != null) {\n      if ($util.Long)\n        (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n      else if (typeof d.fanout === 'string')\n        m.fanout = parseInt(d.fanout, 10);\n      else if (typeof d.fanout === 'number')\n        m.fanout = d.fanout;\n      else if (typeof d.fanout === 'object')\n        m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n    }\n    if (d.mode != null) {\n      m.mode = d.mode >>> 0;\n    }\n    if (d.mtime != null) {\n      if (typeof d.mtime !== 'object')\n        throw TypeError('.Data.mtime: object expected');\n      m.mtime = $root.UnixTime.fromObject(d.mtime);\n    }\n    return m;\n  };\n  Data.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.arrays || o.defaults) {\n      d.blocksizes = [];\n    }\n    if (o.defaults) {\n      d.Type = o.enums === String ? 'Raw' : 0;\n      if (o.bytes === String)\n        d.Data = '';\n      else {\n        d.Data = [];\n        if (o.bytes !== Array)\n          d.Data = $util.newBuffer(d.Data);\n      }\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.filesize = o.longs === String ? '0' : 0;\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.hashType = o.longs === String ? '0' : 0;\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.fanout = o.longs === String ? '0' : 0;\n      d.mode = 0;\n      d.mtime = null;\n    }\n    if (m.Type != null && m.hasOwnProperty('Type')) {\n      d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n    }\n    if (m.Data != null && m.hasOwnProperty('Data')) {\n      d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n    }\n    if (m.filesize != null && m.hasOwnProperty('filesize')) {\n      if (typeof m.filesize === 'number')\n        d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n      else\n        d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n    }\n    if (m.blocksizes && m.blocksizes.length) {\n      d.blocksizes = [];\n      for (var j = 0; j < m.blocksizes.length; ++j) {\n        if (typeof m.blocksizes[j] === 'number')\n          d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n        else\n          d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n      }\n    }\n    if (m.hashType != null && m.hasOwnProperty('hashType')) {\n      if (typeof m.hashType === 'number')\n        d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n      else\n        d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n    }\n    if (m.fanout != null && m.hasOwnProperty('fanout')) {\n      if (typeof m.fanout === 'number')\n        d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n      else\n        d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n    }\n    if (m.mode != null && m.hasOwnProperty('mode')) {\n      d.mode = m.mode;\n    }\n    if (m.mtime != null && m.hasOwnProperty('mtime')) {\n      d.mtime = $root.UnixTime.toObject(m.mtime, o);\n    }\n    return d;\n  };\n  Data.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  Data.DataType = function () {\n    const valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = 'Raw'] = 0;\n    values[valuesById[1] = 'Directory'] = 1;\n    values[valuesById[2] = 'File'] = 2;\n    values[valuesById[3] = 'Metadata'] = 3;\n    values[valuesById[4] = 'Symlink'] = 4;\n    values[valuesById[5] = 'HAMTShard'] = 5;\n    return values;\n  }();\n  return Data;\n})();\nexport const UnixTime = $root.UnixTime = (() => {\n  function UnixTime(p) {\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n  UnixTime.prototype.FractionalNanoseconds = 0;\n  UnixTime.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    w.uint32(8).int64(m.Seconds);\n    if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, 'FractionalNanoseconds'))\n      w.uint32(21).fixed32(m.FractionalNanoseconds);\n    return w;\n  };\n  UnixTime.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.Seconds = r.int64();\n        break;\n      case 2:\n        m.FractionalNanoseconds = r.fixed32();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    if (!m.hasOwnProperty('Seconds'))\n      throw $util.ProtocolError('missing required \\'Seconds\\'', { instance: m });\n    return m;\n  };\n  UnixTime.fromObject = function fromObject(d) {\n    if (d instanceof $root.UnixTime)\n      return d;\n    var m = new $root.UnixTime();\n    if (d.Seconds != null) {\n      if ($util.Long)\n        (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n      else if (typeof d.Seconds === 'string')\n        m.Seconds = parseInt(d.Seconds, 10);\n      else if (typeof d.Seconds === 'number')\n        m.Seconds = d.Seconds;\n      else if (typeof d.Seconds === 'object')\n        m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n    }\n    if (d.FractionalNanoseconds != null) {\n      m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n    }\n    return m;\n  };\n  UnixTime.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.defaults) {\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, false);\n        d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.Seconds = o.longs === String ? '0' : 0;\n      d.FractionalNanoseconds = 0;\n    }\n    if (m.Seconds != null && m.hasOwnProperty('Seconds')) {\n      if (typeof m.Seconds === 'number')\n        d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n      else\n        d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n    }\n    if (m.FractionalNanoseconds != null && m.hasOwnProperty('FractionalNanoseconds')) {\n      d.FractionalNanoseconds = m.FractionalNanoseconds;\n    }\n    return d;\n  };\n  UnixTime.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  return UnixTime;\n})();\nexport const Metadata = $root.Metadata = (() => {\n  function Metadata(p) {\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  Metadata.prototype.MimeType = '';\n  Metadata.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    if (m.MimeType != null && Object.hasOwnProperty.call(m, 'MimeType'))\n      w.uint32(10).string(m.MimeType);\n    return w;\n  };\n  Metadata.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.MimeType = r.string();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    return m;\n  };\n  Metadata.fromObject = function fromObject(d) {\n    if (d instanceof $root.Metadata)\n      return d;\n    var m = new $root.Metadata();\n    if (d.MimeType != null) {\n      m.MimeType = String(d.MimeType);\n    }\n    return m;\n  };\n  Metadata.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.defaults) {\n      d.MimeType = '';\n    }\n    if (m.MimeType != null && m.hasOwnProperty('MimeType')) {\n      d.MimeType = m.MimeType;\n    }\n    return d;\n  };\n  Metadata.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  return Metadata;\n})();\nexport {\n  $root as default\n};","import errcode from 'err-code';\nimport * as Pb from './unixfs.js';\nconst PBData = Pb.Data;\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n];\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n];\nconst DEFAULT_FILE_MODE = parseInt('0644', 8);\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8);\nexport function parseMode(mode) {\n  if (mode == null) {\n    return undefined;\n  }\n  if (typeof mode === 'number') {\n    return mode & 4095;\n  }\n  mode = mode.toString();\n  if (mode.substring(0, 1) === '0') {\n    return parseInt(mode, 8) & 4095;\n  }\n  return parseInt(mode, 10) & 4095;\n}\nexport function parseMtime(input) {\n  if (input == null) {\n    return undefined;\n  }\n  let mtime;\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    };\n  }\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    };\n  }\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    };\n  }\n  if (input instanceof Date) {\n    const ms = input.getTime();\n    const secs = Math.floor(ms / 1000);\n    mtime = {\n      secs: secs,\n      nsecs: (ms - secs * 1000) * 1000\n    };\n  }\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined;\n  }\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS');\n  }\n  return mtime;\n}\nclass UnixFS {\n  static unmarshal(marshaled) {\n    const message = PBData.decode(marshaled);\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    });\n    const data = new UnixFS({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime ? {\n        secs: decoded.mtime.Seconds,\n        nsecs: decoded.mtime.FractionalNanoseconds\n      } : undefined\n    });\n    data._originalMode = decoded.mode || 0;\n    return data;\n  }\n  constructor(options = { type: 'file' }) {\n    const {type, data, blockSizes, hashType, fanout, mtime, mode} = options;\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE');\n    }\n    this.type = type || 'file';\n    this.data = data;\n    this.hashType = hashType;\n    this.fanout = fanout;\n    this.blockSizes = blockSizes || [];\n    this._originalMode = 0;\n    this.mode = parseMode(mode);\n    if (mtime) {\n      this.mtime = parseMtime(mtime);\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0;\n      }\n    }\n  }\n  set mode(mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE;\n    const parsedMode = parseMode(mode);\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode;\n    }\n  }\n  get mode() {\n    return this._mode;\n  }\n  isDirectory() {\n    return Boolean(this.type && dirTypes.includes(this.type));\n  }\n  addBlockSize(size) {\n    this.blockSizes.push(size);\n  }\n  removeBlockSize(index) {\n    this.blockSizes.splice(index, 1);\n  }\n  fileSize() {\n    if (this.isDirectory()) {\n      return 0;\n    }\n    let sum = 0;\n    this.blockSizes.forEach(size => {\n      sum += size;\n    });\n    if (this.data) {\n      sum += this.data.length;\n    }\n    return sum;\n  }\n  marshal() {\n    let type;\n    switch (this.type) {\n    case 'raw':\n      type = PBData.DataType.Raw;\n      break;\n    case 'directory':\n      type = PBData.DataType.Directory;\n      break;\n    case 'file':\n      type = PBData.DataType.File;\n      break;\n    case 'metadata':\n      type = PBData.DataType.Metadata;\n      break;\n    case 'symlink':\n      type = PBData.DataType.Symlink;\n      break;\n    case 'hamt-sharded-directory':\n      type = PBData.DataType.HAMTShard;\n      break;\n    default:\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE');\n    }\n    let data = this.data;\n    if (!this.data || !this.data.length) {\n      data = undefined;\n    }\n    let mode;\n    if (this.mode != null) {\n      mode = this._originalMode & 4294963200 | (parseMode(this.mode) || 0);\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined;\n      }\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined;\n      }\n    }\n    let mtime;\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime);\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        };\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds;\n        }\n      }\n    }\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    };\n    return PBData.encode(pbData).finish();\n  }\n}\nexport {\n  UnixFS\n};","const textDecoder = new TextDecoder();\nfunction decodeVarint(bytes, offset) {\n  let v = 0;\n  for (let shift = 0;; shift += 7) {\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow');\n    }\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data');\n    }\n    const b = bytes[offset++];\n    v += shift < 28 ? (b & 127) << shift : (b & 127) * 2 ** shift;\n    if (b < 128) {\n      break;\n    }\n  }\n  return [\n    v,\n    offset\n  ];\n}\nfunction decodeBytes(bytes, offset) {\n  let byteLen;\n  [byteLen, offset] = decodeVarint(bytes, offset);\n  const postOffset = offset + byteLen;\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length');\n  }\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data');\n  }\n  return [\n    bytes.subarray(offset, postOffset),\n    postOffset\n  ];\n}\nfunction decodeKey(bytes, index) {\n  let wire;\n  [wire, index] = decodeVarint(bytes, index);\n  return [\n    wire & 7,\n    wire >> 3,\n    index\n  ];\n}\nfunction decodeLink(bytes) {\n  const link = {};\n  const l = bytes.length;\n  let index = 0;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Hash`);\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash');\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash');\n      }\n      ;\n      [link.Hash, index] = decodeBytes(bytes, index);\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Name`);\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name');\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      link.Name = textDecoder.decode(byts);\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section');\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Tsize`);\n      }\n      ;\n      [link.Tsize, index] = decodeVarint(bytes, index);\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data');\n  }\n  return link;\n}\nexport function decodeNode(bytes) {\n  const l = bytes.length;\n  let index = 0;\n  let links;\n  let linksBeforeData = false;\n  let data;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${ wireType }`);\n    }\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section');\n      }\n      ;\n      [data, index] = decodeBytes(bytes, index);\n      if (links) {\n        linksBeforeData = true;\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) {\n        throw new Error('protobuf: (PBNode) duplicate Links section');\n      } else if (!links) {\n        links = [];\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      links.push(decodeLink(byts));\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data');\n  }\n  const node = {};\n  if (data) {\n    node.Data = data;\n  }\n  node.Links = links || [];\n  return node;\n}","const textEncoder = new TextEncoder();\nconst maxInt32 = 2 ** 32;\nconst maxUInt32 = 2 ** 31;\nfunction encodeLink(link, bytes) {\n  let i = bytes.length;\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative');\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding');\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1;\n    bytes[i] = 24;\n  }\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name);\n    i -= nameBytes.length;\n    bytes.set(nameBytes, i);\n    i = encodeVarint(bytes, i, nameBytes.length) - 1;\n    bytes[i] = 18;\n  }\n  if (link.Hash) {\n    i -= link.Hash.length;\n    bytes.set(link.Hash, i);\n    i = encodeVarint(bytes, i, link.Hash.length) - 1;\n    bytes[i] = 10;\n  }\n  return bytes.length - i;\n}\nexport function encodeNode(node) {\n  const size = sizeNode(node);\n  const bytes = new Uint8Array(size);\n  let i = size;\n  if (node.Data) {\n    i -= node.Data.length;\n    bytes.set(node.Data, i);\n    i = encodeVarint(bytes, i, node.Data.length) - 1;\n    bytes[i] = 10;\n  }\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i));\n      i -= size;\n      i = encodeVarint(bytes, i, size) - 1;\n      bytes[i] = 18;\n    }\n  }\n  return bytes;\n}\nfunction sizeLink(link) {\n  let n = 0;\n  if (link.Hash) {\n    const l = link.Hash.length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize);\n  }\n  return n;\n}\nfunction sizeNode(node) {\n  let n = 0;\n  if (node.Data) {\n    const l = node.Data.length;\n    n += 1 + l + sov(l);\n  }\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link);\n      n += 1 + l + sov(l);\n    }\n  }\n  return n;\n}\nfunction encodeVarint(bytes, offset, v) {\n  offset -= sov(v);\n  const base = offset;\n  while (v >= maxUInt32) {\n    bytes[offset++] = v & 127 | 128;\n    v /= 128;\n  }\n  while (v >= 128) {\n    bytes[offset++] = v & 127 | 128;\n    v >>>= 7;\n  }\n  bytes[offset] = v;\n  return base;\n}\nfunction sov(x) {\n  if (x % 2 === 0) {\n    x++;\n  }\n  return Math.floor((len64(x) + 6) / 7);\n}\nfunction len64(x) {\n  let n = 0;\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32);\n    n = 32;\n  }\n  if (x >= 1 << 16) {\n    x >>>= 16;\n    n += 16;\n  }\n  if (x >= 1 << 8) {\n    x >>>= 8;\n    n += 8;\n  }\n  return n + len8tab[x];\n}\nconst len8tab = [\n  0,\n  1,\n  2,\n  2,\n  3,\n  3,\n  3,\n  3,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8\n];","import { CID } from 'multiformats/cid';\nconst pbNodeProperties = [\n  'Data',\n  'Links'\n];\nconst pbLinkProperties = [\n  'Hash',\n  'Name',\n  'Tsize'\n];\nconst textEncoder = new TextEncoder();\nfunction linkComparator(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  const abuf = a.Name ? textEncoder.encode(a.Name) : [];\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : [];\n  let x = abuf.length;\n  let y = bbuf.length;\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i];\n      y = bbuf[i];\n      break;\n    }\n  }\n  return x < y ? -1 : y < x ? 1 : 0;\n}\nfunction hasOnlyProperties(node, properties) {\n  return !Object.keys(node).some(p => !properties.includes(p));\n}\nfunction asLink(link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = CID.asCID(link);\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n    return { Hash };\n  }\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbl = {};\n  if (link.Hash) {\n    let cid = CID.asCID(link.Hash);\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = CID.parse(link.Hash);\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = CID.decode(link.Hash);\n        }\n      }\n    } catch (e) {\n      throw new TypeError(`Invalid DAG-PB form: ${ e.message }`);\n    }\n    if (cid) {\n      pbl.Hash = cid;\n    }\n  }\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name;\n  }\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize;\n  }\n  return pbl;\n}\nexport function prepare(node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node };\n  }\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbn = {};\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data);\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data;\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  }\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink);\n      pbn.Links.sort(linkComparator);\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  } else {\n    pbn.Links = [];\n  }\n  return pbn;\n}\nexport function validate(node) {\n  if (!node || typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)');\n  }\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be a Uint8Array)');\n  }\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be an array)');\n  }\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i];\n    if (!link || typeof link !== 'object' || Array.isArray(link)) {\n      throw new TypeError('Invalid DAG-PB form (bad link object)');\n    }\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link object)');\n    }\n    if (!link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)');\n    }\n    if (link.Hash.asCID !== link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)');\n    }\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)');\n    }\n    if (link.Tsize !== undefined && (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0)) {\n      throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)');\n    }\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)');\n    }\n  }\n}\nexport function createNode(data, links = []) {\n  return prepare({\n    Data: data,\n    Links: links\n  });\n}\nexport function createLink(name, size, cid) {\n  return asLink({\n    Hash: cid,\n    Name: name,\n    Tsize: size\n  });\n}","import { CID } from 'multiformats/cid';\nimport { decodeNode } from './pb-decode.js';\nimport { encodeNode } from './pb-encode.js';\nimport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n} from './util.js';\nexport const name = 'dag-pb';\nexport const code = 112;\nexport function encode(node) {\n  validate(node);\n  const pbn = {};\n  if (node.Links) {\n    pbn.Links = node.Links.map(l => {\n      const link = {};\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes;\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  if (node.Data) {\n    pbn.Data = node.Data;\n  }\n  return encodeNode(pbn);\n}\nexport function decode(bytes) {\n  const pbn = decodeNode(bytes);\n  const node = {};\n  if (pbn.Data) {\n    node.Data = pbn.Data;\n  }\n  if (pbn.Links) {\n    node.Links = pbn.Links.map(l => {\n      const link = {};\n      try {\n        link.Hash = CID.decode(l.Hash);\n      } catch (e) {\n      }\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID');\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  return node;\n}\nexport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n};","import { CID } from 'multiformats/cid';\nimport * as dagPb from '@ipld/dag-pb';\nimport { sha256 } from 'multiformats/hashes/sha2';\nconst persist = async (buffer, blockstore, options) => {\n  if (!options.codec) {\n    options.codec = dagPb;\n  }\n  if (!options.hasher) {\n    options.hasher = sha256;\n  }\n  if (options.cidVersion === undefined) {\n    options.cidVersion = 1;\n  }\n  if (options.codec === dagPb && options.hasher !== sha256) {\n    options.cidVersion = 1;\n  }\n  const multihash = await options.hasher.digest(buffer);\n  const cid = CID.create(options.cidVersion, options.codec.code, multihash);\n  if (!options.onlyHash) {\n    await blockstore.put(cid, buffer, { signal: options.signal });\n  }\n  return cid;\n};\nexport default persist;","import { UnixFS } from 'ipfs-unixfs';\nimport persist from '../utils/persist.js';\nimport {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nconst dirBuilder = async (item, blockstore, options) => {\n  const unixfs = new UnixFS({\n    type: 'directory',\n    mtime: item.mtime,\n    mode: item.mode\n  });\n  const buffer = encode(prepare({ Data: unixfs.marshal() }));\n  const cid = await persist(buffer, blockstore, options);\n  const path = item.path;\n  return {\n    cid,\n    path,\n    unixfs,\n    size: buffer.length\n  };\n};\nexport default dirBuilder;","import { coerce } from '../bytes.js';\nexport const name = 'raw';\nexport const code = 85;\nexport const encode = node => coerce(node);\nexport const decode = data => coerce(data);","'use strict'\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n","import all from 'it-all';\nasync function flat(source, reduce) {\n  return reduce(await all(source));\n}\nexport default flat;","import batch from 'it-batch';\nfunction balanced(source, reduce, options) {\n  return reduceToParents(source, reduce, options);\n}\nasync function reduceToParents(source, reduce, options) {\n  const roots = [];\n  for await (const chunked of batch(source, options.maxChildrenPerNode)) {\n    roots.push(await reduce(chunked));\n  }\n  if (roots.length > 1) {\n    return reduceToParents(roots, reduce, options);\n  }\n  return roots[0];\n}\nexport default balanced;","import batch from 'it-batch';\nasync function trickleStream(source, reduce, options) {\n  const root = new Root(options.layerRepeat);\n  let iteration = 0;\n  let maxDepth = 1;\n  let subTree = root;\n  for await (const layer of batch(source, options.maxChildrenPerNode)) {\n    if (subTree.isFull()) {\n      if (subTree !== root) {\n        root.addChild(await subTree.reduce(reduce));\n      }\n      if (iteration && iteration % options.layerRepeat === 0) {\n        maxDepth++;\n      }\n      subTree = new SubTree(maxDepth, options.layerRepeat, iteration);\n      iteration++;\n    }\n    subTree.append(layer);\n  }\n  if (subTree && subTree !== root) {\n    root.addChild(await subTree.reduce(reduce));\n  }\n  return root.reduce(reduce);\n}\nexport default trickleStream;\nclass SubTree {\n  constructor(maxDepth, layerRepeat, iteration = 0) {\n    this.maxDepth = maxDepth;\n    this.layerRepeat = layerRepeat;\n    this.currentDepth = 1;\n    this.iteration = iteration;\n    this.root = this.node = this.parent = {\n      children: [],\n      depth: this.currentDepth,\n      maxDepth,\n      maxChildren: (this.maxDepth - this.currentDepth) * this.layerRepeat\n    };\n  }\n  isFull() {\n    if (!this.root.data) {\n      return false;\n    }\n    if (this.currentDepth < this.maxDepth && this.node.maxChildren) {\n      this._addNextNodeToParent(this.node);\n      return false;\n    }\n    const distantRelative = this._findParent(this.node, this.currentDepth);\n    if (distantRelative) {\n      this._addNextNodeToParent(distantRelative);\n      return false;\n    }\n    return true;\n  }\n  _addNextNodeToParent(parent) {\n    this.parent = parent;\n    const nextNode = {\n      children: [],\n      depth: parent.depth + 1,\n      parent,\n      maxDepth: this.maxDepth,\n      maxChildren: Math.floor(parent.children.length / this.layerRepeat) * this.layerRepeat\n    };\n    parent.children.push(nextNode);\n    this.currentDepth = nextNode.depth;\n    this.node = nextNode;\n  }\n  append(layer) {\n    this.node.data = layer;\n  }\n  reduce(reduce) {\n    return this._reduce(this.root, reduce);\n  }\n  async _reduce(node, reduce) {\n    let children = [];\n    if (node.children.length) {\n      children = await Promise.all(node.children.filter(child => child.data).map(child => this._reduce(child, reduce)));\n    }\n    return reduce((node.data || []).concat(children));\n  }\n  _findParent(node, depth) {\n    const parent = node.parent;\n    if (!parent || parent.depth === 0) {\n      return;\n    }\n    if (parent.children.length === parent.maxChildren || !parent.maxChildren) {\n      return this._findParent(parent, depth);\n    }\n    return parent;\n  }\n}\nclass Root extends SubTree {\n  constructor(layerRepeat) {\n    super(0, layerRepeat);\n    this.root.depth = 0;\n    this.currentDepth = 1;\n  }\n  addChild(child) {\n    this.root.children.push(child);\n  }\n  reduce(reduce) {\n    return reduce((this.root.data || []).concat(this.root.children));\n  }\n}","import { UnixFS } from 'ipfs-unixfs';\nimport persist from '../../utils/persist.js';\nimport * as dagPb from '@ipld/dag-pb';\nimport * as raw from 'multiformats/codecs/raw';\nasync function* bufferImporter(file, block, options) {\n  for await (let buffer of file.content) {\n    yield async () => {\n      options.progress(buffer.length, file.path);\n      let unixfs;\n      const opts = {\n        codec: dagPb,\n        cidVersion: options.cidVersion,\n        hasher: options.hasher,\n        onlyHash: options.onlyHash\n      };\n      if (options.rawLeaves) {\n        opts.codec = raw;\n        opts.cidVersion = 1;\n      } else {\n        unixfs = new UnixFS({\n          type: options.leafType,\n          data: buffer,\n          mtime: file.mtime,\n          mode: file.mode\n        });\n        buffer = dagPb.encode({\n          Data: unixfs.marshal(),\n          Links: []\n        });\n      }\n      return {\n        cid: await persist(buffer, block, opts),\n        unixfs,\n        size: buffer.length\n      };\n    };\n  }\n}\nexport default bufferImporter;","import errCode from 'err-code';\nimport { UnixFS } from 'ipfs-unixfs';\nimport persist from '../../utils/persist.js';\nimport {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nimport parallelBatch from 'it-parallel-batch';\nimport * as rawCodec from 'multiformats/codecs/raw';\nimport * as dagPb from '@ipld/dag-pb';\nimport dagFlat from './flat.js';\nimport dagBalanced from './balanced.js';\nimport dagTrickle from './trickle.js';\nimport bufferImporterFn from './buffer-importer.js';\nconst dagBuilders = {\n  flat: dagFlat,\n  balanced: dagBalanced,\n  trickle: dagTrickle\n};\nasync function* buildFileBatch(file, blockstore, options) {\n  let count = -1;\n  let previous;\n  let bufferImporter;\n  if (typeof options.bufferImporter === 'function') {\n    bufferImporter = options.bufferImporter;\n  } else {\n    bufferImporter = bufferImporterFn;\n  }\n  for await (const entry of parallelBatch(bufferImporter(file, blockstore, options), options.blockWriteConcurrency)) {\n    count++;\n    if (count === 0) {\n      previous = entry;\n      continue;\n    } else if (count === 1 && previous) {\n      yield previous;\n      previous = null;\n    }\n    yield entry;\n  }\n  if (previous) {\n    previous.single = true;\n    yield previous;\n  }\n}\nconst reduce = (file, blockstore, options) => {\n  async function reducer(leaves) {\n    if (leaves.length === 1 && leaves[0].single && options.reduceSingleLeafToSelf) {\n      const leaf = leaves[0];\n      if (leaf.cid.code === rawCodec.code && (file.mtime !== undefined || file.mode !== undefined)) {\n        let buffer = await blockstore.get(leaf.cid);\n        leaf.unixfs = new UnixFS({\n          type: 'file',\n          mtime: file.mtime,\n          mode: file.mode,\n          data: buffer\n        });\n        buffer = encode(prepare({ Data: leaf.unixfs.marshal() }));\n        leaf.cid = await persist(buffer, blockstore, {\n          ...options,\n          codec: dagPb,\n          hasher: options.hasher,\n          cidVersion: options.cidVersion\n        });\n        leaf.size = buffer.length;\n      }\n      return {\n        cid: leaf.cid,\n        path: file.path,\n        unixfs: leaf.unixfs,\n        size: leaf.size\n      };\n    }\n    const f = new UnixFS({\n      type: 'file',\n      mtime: file.mtime,\n      mode: file.mode\n    });\n    const links = leaves.filter(leaf => {\n      if (leaf.cid.code === rawCodec.code && leaf.size) {\n        return true;\n      }\n      if (leaf.unixfs && !leaf.unixfs.data && leaf.unixfs.fileSize()) {\n        return true;\n      }\n      return Boolean(leaf.unixfs && leaf.unixfs.data && leaf.unixfs.data.length);\n    }).map(leaf => {\n      if (leaf.cid.code === rawCodec.code) {\n        f.addBlockSize(leaf.size);\n        return {\n          Name: '',\n          Tsize: leaf.size,\n          Hash: leaf.cid\n        };\n      }\n      if (!leaf.unixfs || !leaf.unixfs.data) {\n        f.addBlockSize(leaf.unixfs && leaf.unixfs.fileSize() || 0);\n      } else {\n        f.addBlockSize(leaf.unixfs.data.length);\n      }\n      return {\n        Name: '',\n        Tsize: leaf.size,\n        Hash: leaf.cid\n      };\n    });\n    const node = {\n      Data: f.marshal(),\n      Links: links\n    };\n    const buffer = encode(prepare(node));\n    const cid = await persist(buffer, blockstore, options);\n    return {\n      cid,\n      path: file.path,\n      unixfs: f,\n      size: buffer.length + node.Links.reduce((acc, curr) => acc + curr.Tsize, 0)\n    };\n  }\n  return reducer;\n};\nfunction fileBuilder(file, block, options) {\n  const dagBuilder = dagBuilders[options.strategy];\n  if (!dagBuilder) {\n    throw errCode(new Error(`Unknown importer build strategy name: ${ options.strategy }`), 'ERR_BAD_STRATEGY');\n  }\n  return dagBuilder(buildFileBatch(file, block, options), reduce(file, block, options), options);\n}\nexport default fileBuilder;","'use strict'\n\nconst { Buffer } = require('buffer')\nconst symbol = Symbol.for('BufferList')\n\nfunction BufferList (buf) {\n  if (!(this instanceof BufferList)) {\n    return new BufferList(buf)\n  }\n\n  BufferList._init.call(this, buf)\n}\n\nBufferList._init = function _init (buf) {\n  Object.defineProperty(this, symbol, { value: true })\n\n  this._bufs = []\n  this.length = 0\n\n  if (buf) {\n    this.append(buf)\n  }\n}\n\nBufferList.prototype._new = function _new (buf) {\n  return new BufferList(buf)\n}\n\nBufferList.prototype._offset = function _offset (offset) {\n  if (offset === 0) {\n    return [0, 0]\n  }\n\n  let tot = 0\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    const _t = tot + this._bufs[i].length\n    if (offset < _t || i === this._bufs.length - 1) {\n      return [i, offset - tot]\n    }\n    tot = _t\n  }\n}\n\nBufferList.prototype._reverseOffset = function (blOffset) {\n  const bufferId = blOffset[0]\n  let offset = blOffset[1]\n\n  for (let i = 0; i < bufferId; i++) {\n    offset += this._bufs[i].length\n  }\n\n  return offset\n}\n\nBufferList.prototype.get = function get (index) {\n  if (index > this.length || index < 0) {\n    return undefined\n  }\n\n  const offset = this._offset(index)\n\n  return this._bufs[offset[0]][offset[1]]\n}\n\nBufferList.prototype.slice = function slice (start, end) {\n  if (typeof start === 'number' && start < 0) {\n    start += this.length\n  }\n\n  if (typeof end === 'number' && end < 0) {\n    end += this.length\n  }\n\n  return this.copy(null, 0, start, end)\n}\n\nBufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart !== 'number' || srcStart < 0) {\n    srcStart = 0\n  }\n\n  if (typeof srcEnd !== 'number' || srcEnd > this.length) {\n    srcEnd = this.length\n  }\n\n  if (srcStart >= this.length) {\n    return dst || Buffer.alloc(0)\n  }\n\n  if (srcEnd <= 0) {\n    return dst || Buffer.alloc(0)\n  }\n\n  const copy = !!dst\n  const off = this._offset(srcStart)\n  const len = srcEnd - srcStart\n  let bytes = len\n  let bufoff = (copy && dstStart) || 0\n  let start = off[1]\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd === this.length) {\n    if (!copy) {\n      // slice, but full concat if multiple buffers\n      return this._bufs.length === 1\n        ? this._bufs[0]\n        : Buffer.concat(this._bufs, this.length)\n    }\n\n    // copy, need to copy individual buffers\n    for (let i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff)\n      bufoff += this._bufs[i].length\n    }\n\n    return dst\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy\n      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)\n      : this._bufs[off[0]].slice(start, start + bytes)\n  }\n\n  if (!copy) {\n    // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len)\n  }\n\n  for (let i = off[0]; i < this._bufs.length; i++) {\n    const l = this._bufs[i].length - start\n\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start)\n      bufoff += l\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes)\n      bufoff += l\n      break\n    }\n\n    bytes -= l\n\n    if (start) {\n      start = 0\n    }\n  }\n\n  // safeguard so that we don't return uninitialized memory\n  if (dst.length > bufoff) return dst.slice(0, bufoff)\n\n  return dst\n}\n\nBufferList.prototype.shallowSlice = function shallowSlice (start, end) {\n  start = start || 0\n  end = typeof end !== 'number' ? this.length : end\n\n  if (start < 0) {\n    start += this.length\n  }\n\n  if (end < 0) {\n    end += this.length\n  }\n\n  if (start === end) {\n    return this._new()\n  }\n\n  const startOffset = this._offset(start)\n  const endOffset = this._offset(end)\n  const buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)\n\n  if (endOffset[1] === 0) {\n    buffers.pop()\n  } else {\n    buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1])\n  }\n\n  if (startOffset[1] !== 0) {\n    buffers[0] = buffers[0].slice(startOffset[1])\n  }\n\n  return this._new(buffers)\n}\n\nBufferList.prototype.toString = function toString (encoding, start, end) {\n  return this.slice(start, end).toString(encoding)\n}\n\nBufferList.prototype.consume = function consume (bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes)\n  // do nothing if not a positive number\n  if (Number.isNaN(bytes) || bytes <= 0) return this\n\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length\n      this.length -= this._bufs[0].length\n      this._bufs.shift()\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes)\n      this.length -= bytes\n      break\n    }\n  }\n\n  return this\n}\n\nBufferList.prototype.duplicate = function duplicate () {\n  const copy = this._new()\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    copy.append(this._bufs[i])\n  }\n\n  return copy\n}\n\nBufferList.prototype.append = function append (buf) {\n  if (buf == null) {\n    return this\n  }\n\n  if (buf.buffer) {\n    // append a view of the underlying ArrayBuffer\n    this._appendBuffer(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength))\n  } else if (Array.isArray(buf)) {\n    for (let i = 0; i < buf.length; i++) {\n      this.append(buf[i])\n    }\n  } else if (this._isBufferList(buf)) {\n    // unwrap argument into individual BufferLists\n    for (let i = 0; i < buf._bufs.length; i++) {\n      this.append(buf._bufs[i])\n    }\n  } else {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf === 'number') {\n      buf = buf.toString()\n    }\n\n    this._appendBuffer(Buffer.from(buf))\n  }\n\n  return this\n}\n\nBufferList.prototype._appendBuffer = function appendBuffer (buf) {\n  this._bufs.push(buf)\n  this.length += buf.length\n}\n\nBufferList.prototype.indexOf = function (search, offset, encoding) {\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset\n    offset = undefined\n  }\n\n  if (typeof search === 'function' || Array.isArray(search)) {\n    throw new TypeError('The \"value\" argument must be one of type string, Buffer, BufferList, or Uint8Array.')\n  } else if (typeof search === 'number') {\n    search = Buffer.from([search])\n  } else if (typeof search === 'string') {\n    search = Buffer.from(search, encoding)\n  } else if (this._isBufferList(search)) {\n    search = search.slice()\n  } else if (Array.isArray(search.buffer)) {\n    search = Buffer.from(search.buffer, search.byteOffset, search.byteLength)\n  } else if (!Buffer.isBuffer(search)) {\n    search = Buffer.from(search)\n  }\n\n  offset = Number(offset || 0)\n\n  if (isNaN(offset)) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    offset = this.length + offset\n  }\n\n  if (offset < 0) {\n    offset = 0\n  }\n\n  if (search.length === 0) {\n    return offset > this.length ? this.length : offset\n  }\n\n  const blOffset = this._offset(offset)\n  let blIndex = blOffset[0] // index of which internal buffer we're working on\n  let buffOffset = blOffset[1] // offset of the internal buffer we're working on\n\n  // scan over each buffer\n  for (; blIndex < this._bufs.length; blIndex++) {\n    const buff = this._bufs[blIndex]\n\n    while (buffOffset < buff.length) {\n      const availableWindow = buff.length - buffOffset\n\n      if (availableWindow >= search.length) {\n        const nativeSearchResult = buff.indexOf(search, buffOffset)\n\n        if (nativeSearchResult !== -1) {\n          return this._reverseOffset([blIndex, nativeSearchResult])\n        }\n\n        buffOffset = buff.length - search.length + 1 // end of native search window\n      } else {\n        const revOffset = this._reverseOffset([blIndex, buffOffset])\n\n        if (this._match(revOffset, search)) {\n          return revOffset\n        }\n\n        buffOffset++\n      }\n    }\n\n    buffOffset = 0\n  }\n\n  return -1\n}\n\nBufferList.prototype._match = function (offset, search) {\n  if (this.length - offset < search.length) {\n    return false\n  }\n\n  for (let searchOffset = 0; searchOffset < search.length; searchOffset++) {\n    if (this.get(offset + searchOffset) !== search[searchOffset]) {\n      return false\n    }\n  }\n  return true\n}\n\n;(function () {\n  const methods = {\n    readDoubleBE: 8,\n    readDoubleLE: 8,\n    readFloatBE: 4,\n    readFloatLE: 4,\n    readInt32BE: 4,\n    readInt32LE: 4,\n    readUInt32BE: 4,\n    readUInt32LE: 4,\n    readInt16BE: 2,\n    readInt16LE: 2,\n    readUInt16BE: 2,\n    readUInt16LE: 2,\n    readInt8: 1,\n    readUInt8: 1,\n    readIntBE: null,\n    readIntLE: null,\n    readUIntBE: null,\n    readUIntLE: null\n  }\n\n  for (const m in methods) {\n    (function (m) {\n      if (methods[m] === null) {\n        BufferList.prototype[m] = function (offset, byteLength) {\n          return this.slice(offset, offset + byteLength)[m](0, byteLength)\n        }\n      } else {\n        BufferList.prototype[m] = function (offset = 0) {\n          return this.slice(offset, offset + methods[m])[m](0)\n        }\n      }\n    }(m))\n  }\n}())\n\n// Used internally by the class and also as an indicator of this object being\n// a `BufferList`. It's not possible to use `instanceof BufferList` in a browser\n// environment because there could be multiple different copies of the\n// BufferList class and some `BufferList`s might be `BufferList`s.\nBufferList.prototype._isBufferList = function _isBufferList (b) {\n  return b instanceof BufferList || BufferList.isBufferList(b)\n}\n\nBufferList.isBufferList = function isBufferList (b) {\n  return b != null && b[symbol]\n}\n\nmodule.exports = BufferList\n","/**\n * Rabin fingerprinting\n *\n * @class Rabin\n */\nclass Rabin {\n    /**\n     * Creates an instance of Rabin.\n     * @param { import(\"./../dist/rabin-wasm\") } asModule\n     * @param {number} [bits=12]\n     * @param {number} [min=8 * 1024]\n     * @param {number} [max=32 * 1024]\n     * @param {number} polynomial\n     * @memberof Rabin\n     */\n    constructor(asModule, bits = 12, min = 8 * 1024, max = 32 * 1024, windowSize = 64, polynomial) {\n        this.bits = bits\n        this.min = min\n        this.max = max\n        this.asModule = asModule\n        this.rabin = new asModule.Rabin(bits, min, max, windowSize, polynomial)\n        this.polynomial = polynomial\n    }\n\n    /**\n     * Fingerprints the buffer\n     *\n     * @param {Uint8Array} buf\n     * @returns {Array<number>}\n     * @memberof Rabin\n     */\n    fingerprint(buf) {\n        const {\n            __retain,\n            __release,\n            __allocArray,\n            __getInt32Array,\n            Int32Array_ID,\n            Uint8Array_ID\n        } = this.asModule\n\n        const lengths = new Int32Array(Math.ceil(buf.length/this.min))\n        const lengthsPtr = __retain(__allocArray(Int32Array_ID, lengths))\n        const pointer = __retain(__allocArray(Uint8Array_ID, buf))\n\n        const out = this.rabin.fingerprint(pointer, lengthsPtr)\n        const processed = __getInt32Array(out)\n\n        __release(pointer)\n        __release(lengthsPtr)\n\n        const end = processed.indexOf(0);\n        return end >= 0 ? processed.subarray(0, end) : processed;\n    }\n}\n\nmodule.exports = Rabin","\"use strict\";\n\n// Runtime header offsets\nconst ID_OFFSET = -8;\nconst SIZE_OFFSET = -4;\n\n// Runtime ids\nconst ARRAYBUFFER_ID = 0;\nconst STRING_ID = 1;\nconst ARRAYBUFFERVIEW_ID = 2;\n\n// Runtime type information\nconst ARRAYBUFFERVIEW = 1 << 0;\nconst ARRAY = 1 << 1;\nconst SET = 1 << 2;\nconst MAP = 1 << 3;\nconst VAL_ALIGN_OFFSET = 5;\nconst VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\nconst VAL_SIGNED = 1 << 10;\nconst VAL_FLOAT = 1 << 11;\nconst VAL_NULLABLE = 1 << 12;\nconst VAL_MANAGED = 1 << 13;\nconst KEY_ALIGN_OFFSET = 14;\nconst KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\nconst KEY_SIGNED = 1 << 19;\nconst KEY_FLOAT = 1 << 20;\nconst KEY_NULLABLE = 1 << 21;\nconst KEY_MANAGED = 1 << 22;\n\n// Array(BufferView) layout\nconst ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\nconst ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\nconst ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\nconst ARRAYBUFFERVIEW_SIZE = 12;\nconst ARRAY_LENGTH_OFFSET = 12;\nconst ARRAY_SIZE = 16;\n\nconst BIGINT = typeof BigUint64Array !== \"undefined\";\nconst THIS = Symbol();\nconst CHUNKSIZE = 1024;\n\n/** Gets a string from an U32 and an U16 view on a memory. */\nfunction getStringImpl(buffer, ptr) {\n  const U32 = new Uint32Array(buffer);\n  const U16 = new Uint16Array(buffer);\n  var length = U32[(ptr + SIZE_OFFSET) >>> 2] >>> 1;\n  var offset = ptr >>> 1;\n  if (length <= CHUNKSIZE) return String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n  const parts = [];\n  do {\n    const last = U16[offset + CHUNKSIZE - 1];\n    const size = last >= 0xD800 && last < 0xDC00 ? CHUNKSIZE - 1 : CHUNKSIZE;\n    parts.push(String.fromCharCode.apply(String, U16.subarray(offset, offset += size)));\n    length -= size;\n  } while (length > CHUNKSIZE);\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n}\n\n/** Prepares the base module prior to instantiation. */\nfunction preInstantiate(imports) {\n  const baseModule = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    return getStringImpl(memory.buffer, ptr);\n  }\n\n  // add common imports used by stdlib for convenience\n  const env = (imports.env = imports.env || {});\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\n    const memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\n  }\n  env.trace = env.trace || function trace(mesg, n) {\n    const memory = baseModule.memory || env.memory;\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n  }\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n\n  return baseModule;\n}\n\n/** Prepares the final module once instantiation is complete. */\nfunction postInstantiate(baseModule, instance) {\n  const rawExports = instance.exports;\n  const memory = rawExports.memory;\n  const table = rawExports.table;\n  const alloc = rawExports[\"__alloc\"];\n  const retain = rawExports[\"__retain\"];\n  const rttiBase = rawExports[\"__rtti_base\"] || ~0; // oob if not present\n\n  /** Gets the runtime type info for the given id. */\n  function getInfo(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2];\n  }\n\n  /** Gets the runtime base id for the given id. */\n  function getBase(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2 + 1];\n  }\n\n  /** Gets the runtime alignment of a collection's values. */\n  function getValueAlign(info) {\n    return 31 - Math.clz32((info >>> VAL_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Gets the runtime alignment of a collection's keys. */\n  function getKeyAlign(info) {\n    return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Allocates a new string in the module's memory and returns its retained pointer. */\n  function __allocString(str) {\n    const length = str.length;\n    const ptr = alloc(length << 1, STRING_ID);\n    const U16 = new Uint16Array(memory.buffer);\n    for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n    return ptr;\n  }\n\n  baseModule.__allocString = __allocString;\n\n  /** Reads a string from the module's memory by its pointer. */\n  function __getString(ptr) {\n    const buffer = memory.buffer;\n    const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n    if (id !== STRING_ID) throw Error(\"not a string: \" + ptr);\n    return getStringImpl(buffer, ptr);\n  }\n\n  baseModule.__getString = __getString;\n\n  /** Gets the view matching the specified alignment, signedness and floatness. */\n  function getView(alignLog2, signed, float) {\n    const buffer = memory.buffer;\n    if (float) {\n      switch (alignLog2) {\n        case 2: return new Float32Array(buffer);\n        case 3: return new Float64Array(buffer);\n      }\n    } else {\n      switch (alignLog2) {\n        case 0: return new (signed ? Int8Array : Uint8Array)(buffer);\n        case 1: return new (signed ? Int16Array : Uint16Array)(buffer);\n        case 2: return new (signed ? Int32Array : Uint32Array)(buffer);\n        case 3: return new (signed ? BigInt64Array : BigUint64Array)(buffer);\n      }\n    }\n    throw Error(\"unsupported align: \" + alignLog2);\n  }\n\n  /** Allocates a new array in the module's memory and returns its retained pointer. */\n  function __allocArray(id, values) {\n    const info = getInfo(id);\n    if (!(info & (ARRAYBUFFERVIEW | ARRAY))) throw Error(\"not an array: \" + id + \" @ \" + info);\n    const align = getValueAlign(info);\n    const length = values.length;\n    const buf = alloc(length << align, ARRAYBUFFER_ID);\n    const arr = alloc(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n    const U32 = new Uint32Array(memory.buffer);\n    U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = retain(buf);\n    U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n    U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\n    if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n    const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n    if (info & VAL_MANAGED) {\n      for (let i = 0; i < length; ++i) view[(buf >>> align) + i] = retain(values[i]);\n    } else {\n      view.set(values, buf >>> align);\n    }\n    return arr;\n  }\n\n  baseModule.__allocArray = __allocArray;\n\n  /** Gets a live view on an array's values in the module's memory. Infers the array type from RTTI. */\n  function __getArrayView(arr) {\n    const U32 = new Uint32Array(memory.buffer);\n    const id = U32[arr + ID_OFFSET >>> 2];\n    const info = getInfo(id);\n    if (!(info & ARRAYBUFFERVIEW)) throw Error(\"not an array: \" + id);\n    const align = getValueAlign(info);\n    var buf = U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    const length = info & ARRAY\n      ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2]\n      : U32[buf + SIZE_OFFSET >>> 2] >>> align;\n    return getView(align, info & VAL_SIGNED, info & VAL_FLOAT)\n          .subarray(buf >>>= align, buf + length);\n  }\n\n  baseModule.__getArrayView = __getArrayView;\n\n  /** Copies an array's values from the module's memory. Infers the array type from RTTI. */\n  function __getArray(arr) {\n    const input = __getArrayView(arr);\n    const len = input.length;\n    const out = new Array(len);\n    for (let i = 0; i < len; i++) out[i] = input[i];\n    return out;\n  }\n\n  baseModule.__getArray = __getArray;\n\n  /** Copies an ArrayBuffer's value from the module's memory. */\n  function __getArrayBuffer(ptr) {\n    const buffer = memory.buffer;\n    const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n    return buffer.slice(ptr, ptr + length);\n  }\n\n  baseModule.__getArrayBuffer = __getArrayBuffer;\n\n  /** Copies a typed array's values from the module's memory. */\n  function getTypedArray(Type, alignLog2, ptr) {\n    return new Type(getTypedArrayView(Type, alignLog2, ptr));\n  }\n\n  /** Gets a live view on a typed array's values in the module's memory. */\n  function getTypedArrayView(Type, alignLog2, ptr) {\n    const buffer = memory.buffer;\n    const U32 = new Uint32Array(buffer);\n    const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\n  }\n\n  baseModule.__getInt8Array = getTypedArray.bind(null, Int8Array, 0);\n  baseModule.__getInt8ArrayView = getTypedArrayView.bind(null, Int8Array, 0);\n  baseModule.__getUint8Array = getTypedArray.bind(null, Uint8Array, 0);\n  baseModule.__getUint8ArrayView = getTypedArrayView.bind(null, Uint8Array, 0);\n  baseModule.__getUint8ClampedArray = getTypedArray.bind(null, Uint8ClampedArray, 0);\n  baseModule.__getUint8ClampedArrayView = getTypedArrayView.bind(null, Uint8ClampedArray, 0);\n  baseModule.__getInt16Array = getTypedArray.bind(null, Int16Array, 1);\n  baseModule.__getInt16ArrayView = getTypedArrayView.bind(null, Int16Array, 1);\n  baseModule.__getUint16Array = getTypedArray.bind(null, Uint16Array, 1);\n  baseModule.__getUint16ArrayView = getTypedArrayView.bind(null, Uint16Array, 1);\n  baseModule.__getInt32Array = getTypedArray.bind(null, Int32Array, 2);\n  baseModule.__getInt32ArrayView = getTypedArrayView.bind(null, Int32Array, 2);\n  baseModule.__getUint32Array = getTypedArray.bind(null, Uint32Array, 2);\n  baseModule.__getUint32ArrayView = getTypedArrayView.bind(null, Uint32Array, 2);\n  if (BIGINT) {\n    baseModule.__getInt64Array = getTypedArray.bind(null, BigInt64Array, 3);\n    baseModule.__getInt64ArrayView = getTypedArrayView.bind(null, BigInt64Array, 3);\n    baseModule.__getUint64Array = getTypedArray.bind(null, BigUint64Array, 3);\n    baseModule.__getUint64ArrayView = getTypedArrayView.bind(null, BigUint64Array, 3);\n  }\n  baseModule.__getFloat32Array = getTypedArray.bind(null, Float32Array, 2);\n  baseModule.__getFloat32ArrayView = getTypedArrayView.bind(null, Float32Array, 2);\n  baseModule.__getFloat64Array = getTypedArray.bind(null, Float64Array, 3);\n  baseModule.__getFloat64ArrayView = getTypedArrayView.bind(null, Float64Array, 3);\n\n  /** Tests whether an object is an instance of the class represented by the specified base id. */\n  function __instanceof(ptr, baseId) {\n    const U32 = new Uint32Array(memory.buffer);\n    var id = U32[(ptr + ID_OFFSET) >>> 2];\n    if (id <= U32[rttiBase >>> 2]) {\n      do if (id == baseId) return true;\n      while (id = getBase(id));\n    }\n    return false;\n  }\n\n  baseModule.__instanceof = __instanceof;\n\n  // Pull basic exports to baseModule so code in preInstantiate can use them\n  baseModule.memory = baseModule.memory || memory;\n  baseModule.table  = baseModule.table  || table;\n\n  // Demangle exports and provide the usual utility on the prototype\n  return demangle(rawExports, baseModule);\n}\n\nfunction isResponse(o) {\n  return typeof Response !== \"undefined\" && o instanceof Response;\n}\n\n/** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\nasync function instantiate(source, imports) {\n  if (isResponse(source = await source)) return instantiateStreaming(source, imports);\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    await WebAssembly.instantiate(\n      source instanceof WebAssembly.Module\n        ? source\n        : await WebAssembly.compile(source),\n      imports\n    )\n  );\n}\n\nexports.instantiate = instantiate;\n\n/** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\nfunction instantiateSync(source, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    new WebAssembly.Instance(\n      source instanceof WebAssembly.Module\n        ? source\n        : new WebAssembly.Module(source),\n      imports\n    )\n  )\n}\n\nexports.instantiateSync = instantiateSync;\n\n/** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\nasync function instantiateStreaming(source, imports) {\n  if (!WebAssembly.instantiateStreaming) {\n    return instantiate(\n      isResponse(source = await source)\n        ? source.arrayBuffer()\n        : source,\n      imports\n    );\n  }\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    (await WebAssembly.instantiateStreaming(source, imports)).instance\n  );\n}\n\nexports.instantiateStreaming = instantiateStreaming;\n\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\nfunction demangle(exports, baseModule) {\n  var module = baseModule ? Object.create(baseModule) : {};\n  var setArgumentsLength = exports[\"__argumentsLength\"]\n    ? function(length) { exports[\"__argumentsLength\"].value = length; }\n    : exports[\"__setArgumentsLength\"] || exports[\"__setargc\"] || function() {};\n  for (let internalName in exports) {\n    if (!Object.prototype.hasOwnProperty.call(exports, internalName)) continue;\n    const elem = exports[internalName];\n    let parts = internalName.split(\".\");\n    let curr = module;\n    while (parts.length > 1) {\n      let part = parts.shift();\n      if (!Object.prototype.hasOwnProperty.call(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n    let name = parts[0];\n    let hash = name.indexOf(\"#\");\n    if (hash >= 0) {\n      let className = name.substring(0, hash);\n      let classElem = curr[className];\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        let ctor = function(...args) {\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\n        };\n        ctor.prototype = {\n          valueOf: function valueOf() {\n            return this[THIS];\n          }\n        };\n        ctor.wrap = function(thisValue) {\n          return Object.create(ctor.prototype, { [THIS]: { value: thisValue, writable: false } });\n        };\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\n        );\n        curr[className] = ctor;\n      }\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get: function() { return getter(this[THIS]); },\n            set: function(value) { setter(this[THIS], value); },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          (curr[name] = (...args) => {\n            setArgumentsLength(args.length);\n            return elem(...args);\n          }).original = elem;\n        } else { // instance method\n          (curr[name] = function(...args) { // !\n            setArgumentsLength(args.length);\n            return elem(this[THIS], ...args);\n          }).original = elem;\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\" && elem !== setArgumentsLength) {\n        (curr[name] = (...args) => {\n          setArgumentsLength(args.length);\n          return elem(...args);\n        }).original = elem;\n      } else {\n        curr[name] = elem;\n      }\n    }\n  }\n  return module;\n}\n\nexports.demangle = demangle;\n","\nconst { instantiate } = require(\"@assemblyscript/loader\");\n\nloadWebAssembly.supported = typeof WebAssembly !== 'undefined'\n\nfunction loadWebAssembly (imp = {}) {\n  if (!loadWebAssembly.supported) return null\n  \n  var wasm = new Uint8Array([0,97,115,109,1,0,0,0,1,78,14,96,2,127,126,0,96,1,127,1,126,96,2,127,127,0,96,1,127,1,127,96,1,127,0,96,2,127,127,1,127,96,3,127,127,127,1,127,96,0,0,96,3,127,127,127,0,96,0,1,127,96,4,127,127,127,127,0,96,5,127,127,127,127,127,1,127,96,1,126,1,127,96,2,126,126,1,126,2,13,1,3,101,110,118,5,97,98,111,114,116,0,10,3,54,53,2,2,8,9,3,5,2,8,6,5,3,4,2,6,9,12,13,2,5,11,3,2,3,2,3,2,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,6,7,7,4,4,5,3,1,0,1,6,47,9,127,1,65,0,11,127,1,65,0,11,127,0,65,3,11,127,0,65,4,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,0,65,240,2,11,127,0,65,6,11,7,240,5,41,6,109,101,109,111,114,121,2,0,7,95,95,97,108,108,111,99,0,10,8,95,95,114,101,116,97,105,110,0,11,9,95,95,114,101,108,101,97,115,101,0,12,9,95,95,99,111,108,108,101,99,116,0,51,11,95,95,114,116,116,105,95,98,97,115,101,3,7,13,73,110,116,51,50,65,114,114,97,121,95,73,68,3,2,13,85,105,110,116,56,65,114,114,97,121,95,73,68,3,3,6,100,101,103,114,101,101,0,16,3,109,111,100,0,17,5,82,97,98,105,110,3,8,16,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,0,21,16,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,0,22,21,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,23,21,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,24,14,82,97,98,105,110,35,103,101,116,58,119,112,111,115,0,25,14,82,97,98,105,110,35,115,101,116,58,119,112,111,115,0,26,15,82,97,98,105,110,35,103,101,116,58,99,111,117,110,116,0,27,15,82,97,98,105,110,35,115,101,116,58,99,111,117,110,116,0,28,13,82,97,98,105,110,35,103,101,116,58,112,111,115,0,29,13,82,97,98,105,110,35,115,101,116,58,112,111,115,0,30,15,82,97,98,105,110,35,103,101,116,58,115,116,97,114,116,0,31,15,82,97,98,105,110,35,115,101,116,58,115,116,97,114,116,0,32,16,82,97,98,105,110,35,103,101,116,58,100,105,103,101,115,116,0,33,16,82,97,98,105,110,35,115,101,116,58,100,105,103,101,115,116,0,34,21,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,35,21,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,36,22,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,37,22,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,38,31,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,39,31,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,40,20,82,97,98,105,110,35,103,101,116,58,112,111,108,121,110,111,109,105,97,108,0,41,20,82,97,98,105,110,35,115,101,116,58,112,111,108,121,110,111,109,105,97,108,0,42,17,82,97,98,105,110,35,103,101,116,58,109,105,110,115,105,122,101,0,43,17,82,97,98,105,110,35,115,101,116,58,109,105,110,115,105,122,101,0,44,17,82,97,98,105,110,35,103,101,116,58,109,97,120,115,105,122,101,0,45,17,82,97,98,105,110,35,115,101,116,58,109,97,120,115,105,122,101,0,46,14,82,97,98,105,110,35,103,101,116,58,109,97,115,107,0,47,14,82,97,98,105,110,35,115,101,116,58,109,97,115,107,0,48,17,82,97,98,105,110,35,99,111,110,115,116,114,117,99,116,111,114,0,20,17,82,97,98,105,110,35,102,105,110,103,101,114,112,114,105,110,116,0,49,8,1,50,10,165,31,53,199,1,1,4,127,32,1,40,2,0,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,3,65,4,107,118,65,16,115,33,4,32,3,65,7,107,11,33,3,32,1,40,2,20,33,2,32,1,40,2,16,34,5,4,64,32,5,32,2,54,2,20,11,32,2,4,64,32,2,32,5,54,2,16,11,32,1,32,0,32,4,32,3,65,4,116,106,65,2,116,106,40,2,96,70,4,64,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,2,54,2,96,32,2,69,4,64,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,65,127,115,113,34,1,54,2,4,32,1,69,4,64,32,0,32,0,40,2,0,65,1,32,3,116,65,127,115,113,54,2,0,11,11,11,11,226,2,1,6,127,32,1,40,2,0,33,3,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,34,5,65,1,113,4,64,32,3,65,124,113,65,16,106,32,5,65,124,113,106,34,2,65,240,255,255,255,3,73,4,64,32,0,32,4,16,1,32,1,32,2,32,3,65,3,113,114,34,3,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,33,5,11,11,32,3,65,2,113,4,64,32,1,65,4,107,40,2,0,34,2,40,2,0,34,6,65,124,113,65,16,106,32,3,65,124,113,106,34,7,65,240,255,255,255,3,73,4,64,32,0,32,2,16,1,32,2,32,7,32,6,65,3,113,114,34,3,54,2,0,32,2,33,1,11,11,32,4,32,5,65,2,114,54,2,0,32,4,65,4,107,32,1,54,2,0,32,0,32,3,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,2,65,4,107,118,65,16,115,33,4,32,2,65,7,107,11,34,3,65,4,116,32,4,106,65,2,116,106,40,2,96,33,2,32,1,65,0,54,2,16,32,1,32,2,54,2,20,32,2,4,64,32,2,32,1,54,2,16,11,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,1,54,2,96,32,0,32,0,40,2,0,65,1,32,3,116,114,54,2,0,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,114,54,2,4,11,119,1,1,127,32,2,2,127,32,0,40,2,160,12,34,2,4,64,32,2,32,1,65,16,107,70,4,64,32,2,40,2,0,33,3,32,1,65,16,107,33,1,11,11,32,1,11,107,34,2,65,48,73,4,64,15,11,32,1,32,3,65,2,113,32,2,65,32,107,65,1,114,114,54,2,0,32,1,65,0,54,2,16,32,1,65,0,54,2,20,32,1,32,2,106,65,16,107,34,2,65,2,54,2,0,32,0,32,2,54,2,160,12,32,0,32,1,16,2,11,155,1,1,3,127,35,0,34,0,69,4,64,65,1,63,0,34,0,74,4,127,65,1,32,0,107,64,0,65,0,72,5,65,0,11,4,64,0,11,65,176,3,34,0,65,0,54,2,0,65,208,15,65,0,54,2,0,3,64,32,1,65,23,73,4,64,32,1,65,2,116,65,176,3,106,65,0,54,2,4,65,0,33,2,3,64,32,2,65,16,73,4,64,32,1,65,4,116,32,2,106,65,2,116,65,176,3,106,65,0,54,2,96,32,2,65,1,106,33,2,12,1,11,11,32,1,65,1,106,33,1,12,1,11,11,65,176,3,65,224,15,63,0,65,16,116,16,3,65,176,3,36,0,11,32,0,11,45,0,32,0,65,240,255,255,255,3,79,4,64,65,32,65,224,0,65,201,3,65,29,16,0,0,11,32,0,65,15,106,65,112,113,34,0,65,16,32,0,65,16,75,27,11,169,1,1,1,127,32,0,32,1,65,128,2,73,4,127,32,1,65,4,118,33,1,65,0,5,32,1,65,248,255,255,255,1,73,4,64,32,1,65,1,65,27,32,1,103,107,116,106,65,1,107,33,1,11,32,1,65,31,32,1,103,107,34,2,65,4,107,118,65,16,115,33,1,32,2,65,7,107,11,34,2,65,2,116,106,40,2,4,65,127,32,1,116,113,34,1,4,127,32,0,32,1,104,32,2,65,4,116,106,65,2,116,106,40,2,96,5,32,0,40,2,0,65,127,32,2,65,1,106,116,113,34,1,4,127,32,0,32,0,32,1,104,34,0,65,2,116,106,40,2,4,104,32,0,65,4,116,106,65,2,116,106,40,2,96,5,65,0,11,11,11,111,1,1,127,63,0,34,2,32,1,65,248,255,255,255,1,73,4,127,32,1,65,1,65,27,32,1,103,107,116,65,1,107,106,5,32,1,11,65,16,32,0,40,2,160,12,32,2,65,16,116,65,16,107,71,116,106,65,255,255,3,106,65,128,128,124,113,65,16,118,34,1,32,2,32,1,74,27,64,0,65,0,72,4,64,32,1,64,0,65,0,72,4,64,0,11,11,32,0,32,2,65,16,116,63,0,65,16,116,16,3,11,113,1,2,127,32,1,40,2,0,34,3,65,124,113,32,2,107,34,4,65,32,79,4,64,32,1,32,2,32,3,65,2,113,114,54,2,0,32,2,32,1,65,16,106,106,34,1,32,4,65,16,107,65,1,114,54,2,0,32,0,32,1,16,2,5,32,1,32,3,65,126,113,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,32,1,65,16,106,32,1,40,2,0,65,124,113,106,40,2,0,65,125,113,54,2,0,11,11,91,1,2,127,32,0,32,1,16,5,34,4,16,6,34,3,69,4,64,65,1,36,1,65,0,36,1,32,0,32,4,16,6,34,3,69,4,64,32,0,32,4,16,7,32,0,32,4,16,6,33,3,11,11,32,3,65,0,54,2,4,32,3,32,2,54,2,8,32,3,32,1,54,2,12,32,0,32,3,16,1,32,0,32,3,32,4,16,8,32,3,11,13,0,16,4,32,0,32,1,16,9,65,16,106,11,33,1,1,127,32,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,18,0,32,0,65,172,3,75,4,64,32,0,65,16,107,16,52,11,11,140,3,1,1,127,2,64,32,1,69,13,0,32,0,65,0,58,0,0,32,0,32,1,106,65,1,107,65,0,58,0,0,32,1,65,2,77,13,0,32,0,65,1,106,65,0,58,0,0,32,0,65,2,106,65,0,58,0,0,32,0,32,1,106,34,2,65,2,107,65,0,58,0,0,32,2,65,3,107,65,0,58,0,0,32,1,65,6,77,13,0,32,0,65,3,106,65,0,58,0,0,32,0,32,1,106,65,4,107,65,0,58,0,0,32,1,65,8,77,13,0,32,1,65,0,32,0,107,65,3,113,34,1,107,33,2,32,0,32,1,106,34,0,65,0,54,2,0,32,0,32,2,65,124,113,34,1,106,65,4,107,65,0,54,2,0,32,1,65,8,77,13,0,32,0,65,4,106,65,0,54,2,0,32,0,65,8,106,65,0,54,2,0,32,0,32,1,106,34,2,65,12,107,65,0,54,2,0,32,2,65,8,107,65,0,54,2,0,32,1,65,24,77,13,0,32,0,65,12,106,65,0,54,2,0,32,0,65,16,106,65,0,54,2,0,32,0,65,20,106,65,0,54,2,0,32,0,65,24,106,65,0,54,2,0,32,0,32,1,106,34,2,65,28,107,65,0,54,2,0,32,2,65,24,107,65,0,54,2,0,32,2,65,20,107,65,0,54,2,0,32,2,65,16,107,65,0,54,2,0,32,0,32,0,65,4,113,65,24,106,34,2,106,33,0,32,1,32,2,107,33,1,3,64,32,1,65,32,79,4,64,32,0,66,0,55,3,0,32,0,65,8,106,66,0,55,3,0,32,0,65,16,106,66,0,55,3,0,32,0,65,24,106,66,0,55,3,0,32,1,65,32,107,33,1,32,0,65,32,106,33,0,12,1,11,11,11,11,178,1,1,3,127,32,1,65,240,255,255,255,3,32,2,118,75,4,64,65,144,1,65,192,1,65,23,65,56,16,0,0,11,32,1,32,2,116,34,3,65,0,16,10,34,2,32,3,16,13,32,0,69,4,64,65,12,65,2,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,2,34,1,32,0,40,2,0,34,4,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,32,4,16,12,11,32,0,32,1,54,2,0,32,0,32,2,54,2,4,32,0,32,3,54,2,8,32,0,11,46,1,2,127,65,12,65,5,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,65,128,2,65,3,16,14,11,9,0,65,63,32,0,121,167,107,11,49,1,2,127,65,63,32,1,121,167,107,33,2,3,64,65,63,32,0,121,167,107,32,2,107,34,3,65,0,78,4,64,32,0,32,1,32,3,172,134,133,33,0,12,1,11,11,32,0,11,40,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,163,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,65,0,58,0,0,11,38,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,152,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,45,0,0,11,254,5,2,1,127,4,126,32,0,69,4,64,65,232,0,65,6,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,24,32,0,66,0,55,3,32,32,0,66,0,55,3,40,32,0,66,0,55,3,48,32,0,66,0,55,3,56,32,0,66,0,55,3,64,32,0,66,0,55,3,72,32,0,66,0,55,3,80,32,0,66,0,55,3,88,32,0,66,0,55,3,96,32,0,32,2,173,55,3,80,32,0,32,3,173,55,3,88,65,12,65,4,16,10,34,2,65,172,3,75,4,64,32,2,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,32,4,65,0,16,14,33,2,32,0,40,2,0,16,12,32,0,32,2,54,2,0,32,0,32,4,54,2,4,32,0,66,1,32,1,173,134,66,1,125,55,3,96,32,0,66,243,130,183,218,216,230,232,30,55,3,72,35,4,69,4,64,65,0,33,2,3,64,32,2,65,128,2,72,4,64,32,2,65,255,1,113,173,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,65,0,33,4,3,64,32,4,32,0,40,2,4,65,1,107,72,4,64,32,6,66,8,134,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,32,4,65,1,106,33,4,12,1,11,11,35,6,40,2,4,32,2,65,3,116,106,32,6,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,63,32,0,41,3,72,121,167,107,172,33,7,65,0,33,2,3,64,32,2,65,128,2,72,4,64,35,5,33,1,32,2,172,32,7,134,34,8,33,6,65,63,32,0,41,3,72,34,9,121,167,107,33,3,3,64,65,63,32,6,121,167,107,32,3,107,34,4,65,0,78,4,64,32,6,32,9,32,4,172,134,133,33,6,12,1,11,11,32,1,40,2,4,32,2,65,3,116,106,32,6,32,8,132,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,1,36,4,11,32,0,66,0,55,3,24,32,0,66,0,55,3,32,65,0,33,2,3,64,32,2,32,0,40,2,4,72,4,64,32,0,40,2,0,32,2,16,18,32,2,65,1,106,33,2,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,6,66,45,136,167,65,3,116,106,41,3,0,32,6,66,8,134,66,1,132,133,55,3,40,32,0,11,38,1,1,127,32,0,40,2,0,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,55,1,2,127,32,1,32,0,40,2,0,34,2,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,16,12,11,32,0,32,1,54,2,0,11,7,0,32,0,40,2,4,11,9,0,32,0,32,1,54,2,4,11,7,0,32,0,40,2,8,11,9,0,32,0,32,1,54,2,8,11,7,0,32,0,41,3,16,11,9,0,32,0,32,1,55,3,16,11,7,0,32,0,41,3,24,11,9,0,32,0,32,1,55,3,24,11,7,0,32,0,41,3,32,11,9,0,32,0,32,1,55,3,32,11,7,0,32,0,41,3,40,11,9,0,32,0,32,1,55,3,40,11,7,0,32,0,41,3,48,11,9,0,32,0,32,1,55,3,48,11,7,0,32,0,41,3,56,11,9,0,32,0,32,1,55,3,56,11,7,0,32,0,41,3,64,11,9,0,32,0,32,1,55,3,64,11,7,0,32,0,41,3,72,11,9,0,32,0,32,1,55,3,72,11,7,0,32,0,41,3,80,11,9,0,32,0,32,1,55,3,80,11,7,0,32,0,41,3,88,11,9,0,32,0,32,1,55,3,88,11,7,0,32,0,41,3,96,11,9,0,32,0,32,1,55,3,96,11,172,4,2,5,127,1,126,32,2,65,172,3,75,4,64,32,2,65,16,107,34,4,32,4,40,2,4,65,1,106,54,2,4,11,32,2,33,4,65,0,33,2,32,1,40,2,8,33,5,32,1,40,2,4,33,6,3,64,2,127,65,0,33,3,3,64,32,3,32,5,72,4,64,32,3,32,6,106,45,0,0,33,1,32,0,40,2,0,32,0,40,2,8,16,19,33,7,32,0,40,2,8,32,0,40,2,0,40,2,4,106,32,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,7,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,1,173,32,8,66,8,134,132,133,55,3,40,32,0,32,0,41,3,16,66,1,124,55,3,16,32,0,32,0,41,3,24,66,1,124,55,3,24,32,0,41,3,16,32,0,41,3,80,90,4,127,32,0,41,3,40,32,0,41,3,96,131,80,5,65,0,11,4,127,65,1,5,32,0,41,3,16,32,0,41,3,88,90,11,4,64,32,0,32,0,41,3,32,55,3,48,32,0,32,0,41,3,16,55,3,56,32,0,32,0,41,3,40,55,3,64,65,0,33,1,3,64,32,1,32,0,40,2,4,72,4,64,32,0,40,2,0,32,1,16,18,32,1,65,1,106,33,1,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,8,66,8,134,66,1,132,133,55,3,40,32,3,65,1,106,12,3,11,32,3,65,1,106,33,3,12,1,11,11,65,127,11,34,1,65,0,78,4,64,32,5,32,1,107,33,5,32,1,32,6,106,33,6,32,2,34,1,65,1,106,33,2,32,4,40,2,4,32,1,65,2,116,106,32,0,41,3,56,62,2,0,12,1,11,11,32,4,11,10,0,16,15,36,5,16,15,36,6,11,3,0,1,11,73,1,2,127,32,0,40,2,4,34,1,65,255,255,255,255,0,113,34,2,65,1,70,4,64,32,0,65,16,106,16,53,32,0,32,0,40,2,0,65,1,114,54,2,0,35,0,32,0,16,2,5,32,0,32,2,65,1,107,32,1,65,128,128,128,128,127,113,114,54,2,4,11,11,58,0,2,64,2,64,2,64,32,0,65,8,107,40,2,0,14,7,0,0,1,1,1,1,1,2,11,15,11,32,0,40,2,0,34,0,4,64,32,0,65,172,3,79,4,64,32,0,65,16,107,16,52,11,11,15,11,0,11,11,137,3,7,0,65,16,11,55,40,0,0,0,1,0,0,0,1,0,0,0,40,0,0,0,97,0,108,0,108,0,111,0,99,0,97,0,116,0,105,0,111,0,110,0,32,0,116,0,111,0,111,0,32,0,108,0,97,0,114,0,103,0,101,0,65,208,0,11,45,30,0,0,0,1,0,0,0,1,0,0,0,30,0,0,0,126,0,108,0,105,0,98,0,47,0,114,0,116,0,47,0,116,0,108,0,115,0,102,0,46,0,116,0,115,0,65,128,1,11,43,28,0,0,0,1,0,0,0,1,0,0,0,28,0,0,0,73,0,110,0,118,0,97,0,108,0,105,0,100,0,32,0,108,0,101,0,110,0,103,0,116,0,104,0,65,176,1,11,53,38,0,0,0,1,0,0,0,1,0,0,0,38,0,0,0,126,0,108,0,105,0,98,0,47,0,97,0,114,0,114,0,97,0,121,0,98,0,117,0,102,0,102,0,101,0,114,0,46,0,116,0,115,0,65,240,1,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,73,0,110,0,100,0,101,0,120,0,32,0,111,0,117,0,116,0,32,0,111,0,102,0,32,0,114,0,97,0,110,0,103,0,101,0,65,176,2,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,126,0,108,0,105,0,98,0,47,0,116,0,121,0,112,0,101,0,100,0,97,0,114,0,114,0,97,0,121,0,46,0,116,0,115,0,65,240,2,11,53,7,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,145,4,0,0,2,0,0,0,49,0,0,0,2,0,0,0,17,1,0,0,2,0,0,0,16,0,34,16,115,111,117,114,99,101,77,97,112,112,105,110,103,85,82,76,16,46,47,114,97,98,105,110,46,119,97,115,109,46,109,97,112])\n  // make it work async because browsers throw when a wasm module is bigger than 4kb and load sync\n  return instantiate(new Response(new Blob([wasm], {type: 'application/wasm'})), imp)\n}\nmodule.exports = loadWebAssembly\n","const Rabin = require('./rabin')\nconst getRabin = require('../dist/rabin-wasm.node.js')\n\nconst create = async (avg, min, max, windowSize, polynomial) => {\n    const compiled = await getRabin()\n    return new Rabin(compiled, avg, min, max, windowSize, polynomial)\n}\n\nmodule.exports = {\n    Rabin,\n    create\n}\n","import BufferList from 'bl/BufferList.js';\nimport { create } from 'rabin-wasm';\nimport errcode from 'err-code';\nasync function* rabinChunker(source, options) {\n  let min, max, avg;\n  if (options.minChunkSize && options.maxChunkSize && options.avgChunkSize) {\n    avg = options.avgChunkSize;\n    min = options.minChunkSize;\n    max = options.maxChunkSize;\n  } else if (!options.avgChunkSize) {\n    throw errcode(new Error('please specify an average chunk size'), 'ERR_INVALID_AVG_CHUNK_SIZE');\n  } else {\n    avg = options.avgChunkSize;\n    min = avg / 3;\n    max = avg + avg / 2;\n  }\n  if (min < 16) {\n    throw errcode(new Error('rabin min must be greater than 16'), 'ERR_INVALID_MIN_CHUNK_SIZE');\n  }\n  if (max < min) {\n    max = min;\n  }\n  if (avg < min) {\n    avg = min;\n  }\n  const sizepow = Math.floor(Math.log2(avg));\n  for await (const chunk of rabin(source, {\n      min: min,\n      max: max,\n      bits: sizepow,\n      window: options.window,\n      polynomial: options.polynomial\n    })) {\n    yield chunk;\n  }\n}\nexport default rabinChunker;\nasync function* rabin(source, options) {\n  const r = await create(options.bits, options.min, options.max, options.window);\n  const buffers = new BufferList();\n  for await (const chunk of source) {\n    buffers.append(chunk);\n    const sizes = r.fingerprint(chunk);\n    for (let i = 0; i < sizes.length; i++) {\n      const size = sizes[i];\n      const buf = buffers.slice(0, size);\n      buffers.consume(size);\n      yield buf;\n    }\n  }\n  if (buffers.length) {\n    yield buffers.slice(0);\n  }\n}","import BufferList from 'bl/BufferList.js';\nasync function* fixedSizeChunker(source, options) {\n  let bl = new BufferList();\n  let currentLength = 0;\n  let emitted = false;\n  const maxChunkSize = options.maxChunkSize;\n  for await (const buffer of source) {\n    bl.append(buffer);\n    currentLength += buffer.length;\n    while (currentLength >= maxChunkSize) {\n      yield bl.slice(0, maxChunkSize);\n      emitted = true;\n      if (maxChunkSize === bl.length) {\n        bl = new BufferList();\n        currentLength = 0;\n      } else {\n        const newBl = new BufferList();\n        newBl.append(bl.shallowSlice(maxChunkSize));\n        bl = newBl;\n        currentLength -= maxChunkSize;\n      }\n    }\n  }\n  if (!emitted || currentLength) {\n    yield bl.slice(0, currentLength);\n  }\n}\nexport default fixedSizeChunker;","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","import { bases } from 'multiformats/basics';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","import errCode from 'err-code';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nasync function* validateChunks(source) {\n  for await (const content of source) {\n    if (content.length === undefined) {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n    if (typeof content === 'string' || content instanceof String) {\n      yield uint8ArrayFromString(content.toString());\n    } else if (Array.isArray(content)) {\n      yield Uint8Array.from(content);\n    } else if (content instanceof Uint8Array) {\n      yield content;\n    } else {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n  }\n}\nexport default validateChunks;","import dirBuilder from './dir.js';\nimport fileBuilder from './file/index.js';\nimport errCode from 'err-code';\nimport rabin from '../chunker/rabin.js';\nimport fixedSize from '../chunker/fixed-size.js';\nimport validateChunks from './validate-chunks.js';\nfunction isIterable(thing) {\n  return Symbol.iterator in thing;\n}\nfunction isAsyncIterable(thing) {\n  return Symbol.asyncIterator in thing;\n}\nfunction contentAsAsyncIterable(content) {\n  try {\n    if (content instanceof Uint8Array) {\n      return async function* () {\n        yield content;\n      }();\n    } else if (isIterable(content)) {\n      return async function* () {\n        yield* content;\n      }();\n    } else if (isAsyncIterable(content)) {\n      return content;\n    }\n  } catch {\n    throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n  }\n  throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n}\nasync function* dagBuilder(source, blockstore, options) {\n  for await (const entry of source) {\n    if (entry.path) {\n      if (entry.path.substring(0, 2) === './') {\n        options.wrapWithDirectory = true;\n      }\n      entry.path = entry.path.split('/').filter(path => path && path !== '.').join('/');\n    }\n    if (entry.content) {\n      let chunker;\n      if (typeof options.chunker === 'function') {\n        chunker = options.chunker;\n      } else if (options.chunker === 'rabin') {\n        chunker = rabin;\n      } else {\n        chunker = fixedSize;\n      }\n      let chunkValidator;\n      if (typeof options.chunkValidator === 'function') {\n        chunkValidator = options.chunkValidator;\n      } else {\n        chunkValidator = validateChunks;\n      }\n      const file = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode,\n        content: chunker(chunkValidator(contentAsAsyncIterable(entry.content), options), options)\n      };\n      yield () => fileBuilder(file, blockstore, options);\n    } else if (entry.path) {\n      const dir = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode\n      };\n      yield () => dirBuilder(dir, blockstore, options);\n    } else {\n      throw new Error('Import candidate must have content or path or both');\n    }\n  }\n}\nexport default dagBuilder;","class Dir {\n  constructor(props, options) {\n    this.options = options || {};\n    this.root = props.root;\n    this.dir = props.dir;\n    this.path = props.path;\n    this.dirty = props.dirty;\n    this.flat = props.flat;\n    this.parent = props.parent;\n    this.parentKey = props.parentKey;\n    this.unixfs = props.unixfs;\n    this.mode = props.mode;\n    this.mtime = props.mtime;\n    this.cid = undefined;\n    this.size = undefined;\n  }\n  async put(name, value) {\n  }\n  get(name) {\n    return Promise.resolve(this);\n  }\n  async *eachChildSeries() {\n  }\n  async *flush(blockstore) {\n  }\n}\nexport default Dir;","import {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nimport { UnixFS } from 'ipfs-unixfs';\nimport Dir from './dir.js';\nimport persist from './utils/persist.js';\nclass DirFlat extends Dir {\n  constructor(props, options) {\n    super(props, options);\n    this._children = {};\n  }\n  async put(name, value) {\n    this.cid = undefined;\n    this.size = undefined;\n    this._children[name] = value;\n  }\n  get(name) {\n    return Promise.resolve(this._children[name]);\n  }\n  childCount() {\n    return Object.keys(this._children).length;\n  }\n  directChildrenCount() {\n    return this.childCount();\n  }\n  onlyChild() {\n    return this._children[Object.keys(this._children)[0]];\n  }\n  async *eachChildSeries() {\n    const keys = Object.keys(this._children);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      yield {\n        key: key,\n        child: this._children[key]\n      };\n    }\n  }\n  async *flush(block) {\n    const children = Object.keys(this._children);\n    const links = [];\n    for (let i = 0; i < children.length; i++) {\n      let child = this._children[children[i]];\n      if (child instanceof Dir) {\n        for await (const entry of child.flush(block)) {\n          child = entry;\n          yield child;\n        }\n      }\n      if (child.size != null && child.cid) {\n        links.push({\n          Name: children[i],\n          Tsize: child.size,\n          Hash: child.cid\n        });\n      }\n    }\n    const unixfs = new UnixFS({\n      type: 'directory',\n      mtime: this.mtime,\n      mode: this.mode\n    });\n    const node = {\n      Data: unixfs.marshal(),\n      Links: links\n    };\n    const buffer = encode(prepare(node));\n    const cid = await persist(buffer, block, this.options);\n    const size = buffer.length + node.Links.reduce((acc, curr) => acc + (curr.Tsize == null ? 0 : curr.Tsize), 0);\n    this.cid = cid;\n    this.size = size;\n    yield {\n      cid,\n      unixfs,\n      path: this.path,\n      size\n    };\n  }\n}\nexport default DirFlat;","'use strict'\n\n// JS treats subjects of bitwise operators as SIGNED 32 bit numbers,\n// which means the maximum amount of bits we can store inside each byte\n// is 7..\nconst BITS_PER_BYTE = 7\n\nmodule.exports = class SparseArray {\n  constructor () {\n    this._bitArrays = []\n    this._data = []\n    this._length = 0\n    this._changedLength = false\n    this._changedData = false\n  }\n\n  set (index, value) {\n    let pos = this._internalPositionFor(index, false)\n    if (value === undefined) {\n      // unsetting\n      if (pos !== -1) {\n        // remove item from bit array and array itself\n        this._unsetInternalPos(pos)\n        this._unsetBit(index)\n        this._changedLength = true\n        this._changedData = true\n      }\n    } else {\n      let needsSort = false\n      if (pos === -1) {\n        pos = this._data.length\n        this._setBit(index)\n        this._changedData = true\n      } else {\n        needsSort = true\n      }\n      this._setInternalPos(pos, index, value, needsSort)\n      this._changedLength = true\n    }\n  }\n\n  unset (index) {\n    this.set(index, undefined)\n  }\n\n  get (index) {\n    this._sortData()\n    const pos = this._internalPositionFor(index, true)\n    if (pos === -1) {\n      return undefined\n    }\n    return this._data[pos][1]\n  }\n\n  push (value) {\n    this.set(this.length, value)\n    return this.length\n  }\n\n  get length () {\n    this._sortData()\n    if (this._changedLength) {\n      const last = this._data[this._data.length - 1]\n      this._length = last ? last[0] + 1 : 0\n      this._changedLength = false\n    }\n    return this._length\n  }\n\n  forEach (iterator) {\n    let i = 0\n    while(i < this.length) {\n      iterator(this.get(i), i, this)\n      i++\n    }\n  }\n\n  map (iterator) {\n    let i = 0\n    let mapped = new Array(this.length)\n    while(i < this.length) {\n      mapped[i] = iterator(this.get(i), i, this)\n      i++\n    }\n    return mapped\n  }\n\n  reduce (reducer, initialValue) {\n    let i = 0\n    let acc = initialValue\n    while(i < this.length) {\n      const value = this.get(i)\n      acc = reducer(acc, value, i)\n      i++\n    }\n    return acc\n  }\n\n  find (finder) {\n    let i = 0, found, last\n    while ((i < this.length) && !found) {\n      last = this.get(i)\n      found = finder(last)\n      i++\n    }\n    return found ? last : undefined\n  }\n\n  _internalPositionFor (index, noCreate) {\n    const bytePos = this._bytePosFor(index, noCreate)\n    if (bytePos >= this._bitArrays.length) {\n      return -1\n    }\n    const byte = this._bitArrays[bytePos]\n    const bitPos = index - bytePos * BITS_PER_BYTE\n    const exists = (byte & (1 << bitPos)) > 0\n    if (!exists) {\n      return -1\n    }\n    const previousPopCount = this._bitArrays.slice(0, bytePos).reduce(popCountReduce, 0)\n\n    const mask = ~(0xffffffff << (bitPos + 1))\n    const bytePopCount = popCount(byte & mask)\n    const arrayPos = previousPopCount + bytePopCount - 1\n    return arrayPos\n  }\n\n  _bytePosFor (index, noCreate) {\n    const bytePos = Math.floor(index / BITS_PER_BYTE)\n    const targetLength = bytePos + 1\n    while (!noCreate && this._bitArrays.length < targetLength) {\n      this._bitArrays.push(0)\n    }\n    return bytePos\n  }\n\n  _setBit (index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] |= (1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _unsetBit(index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] &= ~(1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _setInternalPos(pos, index, value, needsSort) {\n    const data =this._data\n    const elem = [index, value]\n    if (needsSort) {\n      this._sortData()\n      data[pos] = elem\n    } else {\n      // new element. just shove it into the array\n      // but be nice about where we shove it\n      // in order to make sorting it later easier\n      if (data.length) {\n        if (data[data.length - 1][0] >= index) {\n          data.push(elem)\n        } else if (data[0][0] <= index) {\n          data.unshift(elem)\n        } else {\n          const randomIndex = Math.round(data.length / 2)\n          this._data = data.slice(0, randomIndex).concat(elem).concat(data.slice(randomIndex))\n        }\n      } else {\n        this._data.push(elem)\n      }\n      this._changedData = true\n      this._changedLength = true\n    }\n  }\n\n  _unsetInternalPos (pos) {\n    this._data.splice(pos, 1)\n  }\n\n  _sortData () {\n    if (this._changedData) {\n      this._data.sort(sortInternal)\n    }\n\n    this._changedData = false\n  }\n\n  bitField () {\n    const bytes = []\n    let pendingBitsForResultingByte = 8\n    let pendingBitsForNewByte = 0\n    let resultingByte = 0\n    let newByte\n    const pending = this._bitArrays.slice()\n    while (pending.length || pendingBitsForNewByte) {\n      if (pendingBitsForNewByte === 0) {\n        newByte = pending.shift()\n        pendingBitsForNewByte = 7\n      }\n\n      const usingBits = Math.min(pendingBitsForNewByte, pendingBitsForResultingByte)\n      const mask = ~(0b11111111 << usingBits)\n      const masked = newByte & mask\n      resultingByte |= masked << (8 - pendingBitsForResultingByte)\n      newByte = newByte >>> usingBits\n      pendingBitsForNewByte -= usingBits\n      pendingBitsForResultingByte -= usingBits\n\n      if (!pendingBitsForResultingByte || (!pendingBitsForNewByte && !pending.length)) {\n        bytes.push(resultingByte)\n        resultingByte = 0\n        pendingBitsForResultingByte = 8\n      }\n    }\n\n    // remove trailing zeroes\n    for(var i = bytes.length - 1; i > 0; i--) {\n      const value = bytes[i]\n      if (value === 0) {\n        bytes.pop()\n      } else {\n        break\n      }\n    }\n\n    return bytes\n  }\n\n  compactArray () {\n    this._sortData()\n    return this._data.map(valueOnly)\n  }\n}\n\nfunction popCountReduce (count, byte) {\n  return count + popCount(byte)\n}\n\nfunction popCount(_v) {\n  let v = _v\n  v = v - ((v >> 1) & 0x55555555)                    // reuse input as temporary\n  v = (v & 0x33333333) + ((v >> 2) & 0x33333333)     // temp\n  return ((v + (v >> 4) & 0xF0F0F0F) * 0x1010101) >> 24\n}\n\nfunction sortInternal (a, b) {\n  return a[0] - b[0]\n}\n\nfunction valueOnly (elem) {\n  return elem[1]\n}","'use strict'\n\n// @ts-ignore\nconst SparseArray = require('sparse-array')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\n\n/**\n * @typedef {import('./consumable-hash').InfiniteHash} InfiniteHash\n * @typedef {import('../').UserBucketOptions} UserBucketOptions\n */\n\n/**\n * @template V\n * @typedef {object} BucketChild<V>\n * @property {string} key\n * @property {V} value\n * @property {InfiniteHash} hash\n */\n\n/**\n * @template B\n *\n * @typedef {object} SA<B>\n * @property {number} length\n * @property {() => B[]} compactArray\n * @property {(i: number) => B} get\n * @property {(i: number, value: B) => void} set\n * @property {<A> (fn: (acc: A, curr: B, index: number) => A, initial: A) => B} reduce\n * @property {(fn: (item: B) => boolean) => B | undefined} find\n * @property {() => number[]} bitField\n * @property {(i: number) => void} unset\n */\n\n/**\n * @template T\n *\n * @typedef {object} BucketPosition<T>\n * @property {Bucket<T>} bucket\n * @property {number} pos\n * @property {InfiniteHash} hash\n * @property {BucketChild<T>} [existingChild]\n */\n\n/**\n * @typedef {object} BucketOptions\n * @property {number} bits\n * @property {(value: Uint8Array | InfiniteHash) => InfiniteHash} hash\n */\n\n/**\n * @template T\n */\nclass Bucket {\n  /**\n   * @param {BucketOptions} options\n   * @param {Bucket<T>} [parent]\n   * @param {number} [posAtParent=0]\n   */\n  constructor (options, parent, posAtParent = 0) {\n    this._options = options\n    this._popCount = 0\n    this._parent = parent\n    this._posAtParent = posAtParent\n\n    /** @type {SA<Bucket<T> | BucketChild<T>>} */\n    this._children = new SparseArray()\n\n    /** @type {string | null} */\n    this.key = null\n  }\n\n  /**\n   * @param {string} key\n   * @param {T} value\n   */\n  async put (key, value) {\n    const place = await this._findNewBucketAndPos(key)\n\n    await place.bucket._putAt(place, key, value)\n  }\n\n  /**\n   * @param {string} key\n   */\n  async get (key) {\n    const child = await this._findChild(key)\n\n    if (child) {\n      return child.value\n    }\n  }\n\n  /**\n   * @param {string} key\n   */\n  async del (key) {\n    const place = await this._findPlace(key)\n    const child = place.bucket._at(place.pos)\n\n    if (child && child.key === key) {\n      place.bucket._delAt(place.pos)\n    }\n  }\n\n  /**\n   * @returns {number}\n   */\n  leafCount () {\n    const children = this._children.compactArray()\n\n    return children.reduce((acc, child) => {\n      if (child instanceof Bucket) {\n        return acc + child.leafCount()\n      }\n\n      return acc + 1\n    }, 0)\n  }\n\n  childrenCount () {\n    return this._children.length\n  }\n\n  onlyChild () {\n    return this._children.get(0)\n  }\n\n  /**\n   * @returns {Iterable<BucketChild<T>>}\n   */\n  * eachLeafSeries () {\n    const children = this._children.compactArray()\n\n    for (const child of children) {\n      if (child instanceof Bucket) {\n        yield * child.eachLeafSeries()\n      } else {\n        yield child\n      }\n    }\n\n    // this is necessary because tsc requires a @return annotation as it\n    // can't derive a return type due to the recursion, and eslint requires\n    // a return statement when there is a @return annotation\n    return []\n  }\n\n  /**\n   * @param {(value: BucketChild<T>, index: number) => T} map\n   * @param {(reduced: any) => any} reduce\n   */\n  serialize (map, reduce) {\n    /** @type {T[]} */\n    const acc = []\n    // serialize to a custom non-sparse representation\n    return reduce(this._children.reduce((acc, child, index) => {\n      if (child) {\n        if (child instanceof Bucket) {\n          acc.push(child.serialize(map, reduce))\n        } else {\n          acc.push(map(child, index))\n        }\n      }\n      return acc\n    }, acc))\n  }\n\n  /**\n   * @param {(value: BucketChild<T>) => Promise<T[]>} asyncMap\n   * @param {(reduced: any) => Promise<any>} asyncReduce\n   */\n  asyncTransform (asyncMap, asyncReduce) {\n    return asyncTransformBucket(this, asyncMap, asyncReduce)\n  }\n\n  toJSON () {\n    return this.serialize(mapNode, reduceNodes)\n  }\n\n  prettyPrint () {\n    return JSON.stringify(this.toJSON(), null, '  ')\n  }\n\n  tableSize () {\n    return Math.pow(2, this._options.bits)\n  }\n\n  /**\n   * @param {string} key\n   * @returns {Promise<BucketChild<T> | undefined>}\n   */\n  async _findChild (key) {\n    const result = await this._findPlace(key)\n    const child = result.bucket._at(result.pos)\n\n    if (child instanceof Bucket) {\n      // should not be possible, this._findPlace should always\n      // return a location for a child, not a bucket\n      return undefined\n    }\n\n    if (child && child.key === key) {\n      return child\n    }\n  }\n\n  /**\n   * @param {string | InfiniteHash} key\n   * @returns {Promise<BucketPosition<T>>}\n   */\n  async _findPlace (key) {\n    const hashValue = this._options.hash(typeof key === 'string' ? uint8ArrayFromString(key) : key)\n    const index = await hashValue.take(this._options.bits)\n\n    const child = this._children.get(index)\n\n    if (child instanceof Bucket) {\n      return child._findPlace(hashValue)\n    }\n\n    return {\n      bucket: this,\n      pos: index,\n      hash: hashValue,\n      existingChild: child\n    }\n  }\n\n  /**\n   * @param {string | InfiniteHash} key\n   * @returns {Promise<BucketPosition<T>>}\n   */\n  async _findNewBucketAndPos (key) {\n    const place = await this._findPlace(key)\n\n    if (place.existingChild && place.existingChild.key !== key) {\n      // conflict\n      const bucket = new Bucket(this._options, place.bucket, place.pos)\n      place.bucket._putObjectAt(place.pos, bucket)\n\n      // put the previous value\n      const newPlace = await bucket._findPlace(place.existingChild.hash)\n      newPlace.bucket._putAt(newPlace, place.existingChild.key, place.existingChild.value)\n\n      return bucket._findNewBucketAndPos(place.hash)\n    }\n\n    // no conflict, we found the place\n    return place\n  }\n\n  /**\n   * @param {BucketPosition<T>} place\n   * @param {string} key\n   * @param {T} value\n   */\n  _putAt (place, key, value) {\n    this._putObjectAt(place.pos, {\n      key: key,\n      value: value,\n      hash: place.hash\n    })\n  }\n\n  /**\n   * @param {number} pos\n   * @param {Bucket<T> | BucketChild<T>} object\n   */\n  _putObjectAt (pos, object) {\n    if (!this._children.get(pos)) {\n      this._popCount++\n    }\n    this._children.set(pos, object)\n  }\n\n  /**\n   * @param {number} pos\n   */\n  _delAt (pos) {\n    if (pos === -1) {\n      throw new Error('Invalid position')\n    }\n\n    if (this._children.get(pos)) {\n      this._popCount--\n    }\n    this._children.unset(pos)\n    this._level()\n  }\n\n  _level () {\n    if (this._parent && this._popCount <= 1) {\n      if (this._popCount === 1) {\n        // remove myself from parent, replacing me with my only child\n        const onlyChild = this._children.find(exists)\n\n        if (onlyChild && !(onlyChild instanceof Bucket)) {\n          const hash = onlyChild.hash\n          hash.untake(this._options.bits)\n          const place = {\n            pos: this._posAtParent,\n            hash: hash,\n            bucket: this._parent\n          }\n          this._parent._putAt(place, onlyChild.key, onlyChild.value)\n        }\n      } else {\n        this._parent._delAt(this._posAtParent)\n      }\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @returns {BucketChild<T> | Bucket<T> | undefined}\n   */\n  _at (index) {\n    return this._children.get(index)\n  }\n}\n\n/**\n * @param {any} o\n */\nfunction exists (o) {\n  return Boolean(o)\n}\n\n/**\n *\n * @param {*} node\n * @param {number} index\n */\nfunction mapNode (node, index) {\n  return node.key\n}\n\n/**\n * @param {*} nodes\n */\nfunction reduceNodes (nodes) {\n  return nodes\n}\n\n/**\n * @template T\n *\n * @param {Bucket<T>} bucket\n * @param {(value: BucketChild<T>) => Promise<T[]>} asyncMap\n * @param {(reduced: any) => Promise<any>} asyncReduce\n */\nasync function asyncTransformBucket (bucket, asyncMap, asyncReduce) {\n  const output = []\n\n  for (const child of bucket._children.compactArray()) {\n    if (child instanceof Bucket) {\n      await asyncTransformBucket(child, asyncMap, asyncReduce)\n    } else {\n      const mappedChildren = await asyncMap(child)\n\n      output.push({\n        bitField: bucket._children.bitField(),\n        children: mappedChildren\n      })\n    }\n  }\n\n  return asyncReduce(output)\n}\n\nmodule.exports = Bucket\n","'use strict'\n\nconst START_MASKS = [\n  0b11111111,\n  0b11111110,\n  0b11111100,\n  0b11111000,\n  0b11110000,\n  0b11100000,\n  0b11000000,\n  0b10000000\n]\n\nconst STOP_MASKS = [\n  0b00000001,\n  0b00000011,\n  0b00000111,\n  0b00001111,\n  0b00011111,\n  0b00111111,\n  0b01111111,\n  0b11111111\n]\n\nmodule.exports = class ConsumableBuffer {\n  /**\n   * @param {Uint8Array} value\n   */\n  constructor (value) {\n    this._value = value\n    this._currentBytePos = value.length - 1\n    this._currentBitPos = 7\n  }\n\n  availableBits () {\n    return this._currentBitPos + 1 + this._currentBytePos * 8\n  }\n\n  totalBits () {\n    return this._value.length * 8\n  }\n\n  /**\n   * @param {number} bits\n   */\n  take (bits) {\n    let pendingBits = bits\n    let result = 0\n    while (pendingBits && this._haveBits()) {\n      const byte = this._value[this._currentBytePos]\n      const availableBits = this._currentBitPos + 1\n      const taking = Math.min(availableBits, pendingBits)\n      const value = byteBitsToInt(byte, availableBits - taking, taking)\n      result = (result << taking) + value\n\n      pendingBits -= taking\n\n      this._currentBitPos -= taking\n      if (this._currentBitPos < 0) {\n        this._currentBitPos = 7\n        this._currentBytePos--\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * @param {number} bits\n   */\n  untake (bits) {\n    this._currentBitPos += bits\n    while (this._currentBitPos > 7) {\n      this._currentBitPos -= 8\n      this._currentBytePos += 1\n    }\n  }\n\n  _haveBits () {\n    return this._currentBytePos >= 0\n  }\n}\n\n/**\n * @param {number} byte\n * @param {number} start\n * @param {number} length\n */\nfunction byteBitsToInt (byte, start, length) {\n  const mask = maskFor(start, length)\n  return (byte & mask) >>> start\n}\n\n/**\n * @param {number} start\n * @param {number} length\n */\nfunction maskFor (start, length) {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)]\n}\n","export function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = new Uint8Array(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return output;\n}","'use strict'\n\nconst ConsumableBuffer = require('./consumable-buffer')\nconst { concat: uint8ArrayConcat } = require('uint8arrays/concat')\n\n/**\n * @param {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n */\nfunction wrapHash (hashFn) {\n  /**\n   * @param {InfiniteHash | Uint8Array} value\n   */\n  function hashing (value) {\n    if (value instanceof InfiniteHash) {\n      // already a hash. return it\n      return value\n    } else {\n      return new InfiniteHash(value, hashFn)\n    }\n  }\n\n  return hashing\n}\n\nclass InfiniteHash {\n  /**\n   *\n   * @param {Uint8Array} value\n   * @param {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n   */\n  constructor (value, hashFn) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error('can only hash Uint8Arrays')\n    }\n\n    this._value = value\n    this._hashFn = hashFn\n    this._depth = -1\n    this._availableBits = 0\n    this._currentBufferIndex = 0\n\n    /** @type {ConsumableBuffer[]} */\n    this._buffers = []\n  }\n\n  /**\n   * @param {number} bits\n   */\n  async take (bits) {\n    let pendingBits = bits\n\n    while (this._availableBits < pendingBits) {\n      await this._produceMoreBits()\n    }\n\n    let result = 0\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const available = Math.min(hash.availableBits(), pendingBits)\n      const took = hash.take(available)\n      result = (result << available) + took\n      pendingBits -= available\n      this._availableBits -= available\n\n      if (hash.availableBits() === 0) {\n        this._currentBufferIndex++\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * @param {number} bits\n   */\n  untake (bits) {\n    let pendingBits = bits\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const availableForUntake = Math.min(hash.totalBits() - hash.availableBits(), pendingBits)\n      hash.untake(availableForUntake)\n      pendingBits -= availableForUntake\n      this._availableBits += availableForUntake\n\n      if (this._currentBufferIndex > 0 && hash.totalBits() === hash.availableBits()) {\n        this._depth--\n        this._currentBufferIndex--\n      }\n    }\n  }\n\n  async _produceMoreBits () {\n    this._depth++\n\n    const value = this._depth ? uint8ArrayConcat([this._value, Uint8Array.from([this._depth])]) : this._value\n    const hashValue = await this._hashFn(value)\n    const buffer = new ConsumableBuffer(hashValue)\n\n    this._buffers.push(buffer)\n    this._availableBits += buffer.availableBits()\n  }\n}\n\nmodule.exports = wrapHash\nmodule.exports.InfiniteHash = InfiniteHash\n","'use strict'\n\nconst Bucket = require('./bucket')\nconst wrapHash = require('./consumable-hash')\n\n/**\n * @typedef {object} UserBucketOptions\n * @property {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n * @property {number} [bits=8]\n */\n\n/**\n * @param {UserBucketOptions} options\n */\nfunction createHAMT (options) {\n  if (!options || !options.hashFn) {\n    throw new Error('please define an options.hashFn')\n  }\n\n  const bucketOptions = {\n    bits: options.bits || 8,\n    hash: wrapHash(options.hashFn)\n  }\n\n  return new Bucket(bucketOptions)\n}\n\nmodule.exports = {\n  createHAMT,\n  Bucket\n}\n","import {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nimport { UnixFS } from 'ipfs-unixfs';\nimport Dir from './dir.js';\nimport persist from './utils/persist.js';\nimport {\n  createHAMT,\n  Bucket\n} from 'hamt-sharding';\nclass DirSharded extends Dir {\n  constructor(props, options) {\n    super(props, options);\n    this._bucket = createHAMT({\n      hashFn: options.hamtHashFn,\n      bits: options.hamtBucketBits\n    });\n  }\n  async put(name, value) {\n    await this._bucket.put(name, value);\n  }\n  get(name) {\n    return this._bucket.get(name);\n  }\n  childCount() {\n    return this._bucket.leafCount();\n  }\n  directChildrenCount() {\n    return this._bucket.childrenCount();\n  }\n  onlyChild() {\n    return this._bucket.onlyChild();\n  }\n  async *eachChildSeries() {\n    for await (const {key, value} of this._bucket.eachLeafSeries()) {\n      yield {\n        key,\n        child: value\n      };\n    }\n  }\n  async *flush(blockstore) {\n    for await (const entry of flush(this._bucket, blockstore, this, this.options)) {\n      yield {\n        ...entry,\n        path: this.path\n      };\n    }\n  }\n}\nexport default DirSharded;\nasync function* flush(bucket, blockstore, shardRoot, options) {\n  const children = bucket._children;\n  const links = [];\n  let childrenSize = 0;\n  for (let i = 0; i < children.length; i++) {\n    const child = children.get(i);\n    if (!child) {\n      continue;\n    }\n    const labelPrefix = i.toString(16).toUpperCase().padStart(2, '0');\n    if (child instanceof Bucket) {\n      let shard;\n      for await (const subShard of await flush(child, blockstore, null, options)) {\n        shard = subShard;\n      }\n      if (!shard) {\n        throw new Error('Could not flush sharded directory, no subshard found');\n      }\n      links.push({\n        Name: labelPrefix,\n        Tsize: shard.size,\n        Hash: shard.cid\n      });\n      childrenSize += shard.size;\n    } else if (typeof child.value.flush === 'function') {\n      const dir = child.value;\n      let flushedDir;\n      for await (const entry of dir.flush(blockstore)) {\n        flushedDir = entry;\n        yield flushedDir;\n      }\n      const label = labelPrefix + child.key;\n      links.push({\n        Name: label,\n        Tsize: flushedDir.size,\n        Hash: flushedDir.cid\n      });\n      childrenSize += flushedDir.size;\n    } else {\n      const value = child.value;\n      if (!value.cid) {\n        continue;\n      }\n      const label = labelPrefix + child.key;\n      const size = value.size;\n      links.push({\n        Name: label,\n        Tsize: size,\n        Hash: value.cid\n      });\n      childrenSize += size;\n    }\n  }\n  const data = Uint8Array.from(children.bitField().reverse());\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: bucket.tableSize(),\n    hashType: options.hamtHashCode,\n    mtime: shardRoot && shardRoot.mtime,\n    mode: shardRoot && shardRoot.mode\n  });\n  const node = {\n    Data: dir.marshal(),\n    Links: links\n  };\n  const buffer = encode(prepare(node));\n  const cid = await persist(buffer, blockstore, options);\n  const size = buffer.length + childrenSize;\n  yield {\n    cid,\n    unixfs: dir,\n    size\n  };\n}","import DirSharded from './dir-sharded.js';\nimport DirFlat from './dir-flat.js';\nasync function flatToShard(child, dir, threshold, options) {\n  let newDir = dir;\n  if (dir instanceof DirFlat && dir.directChildrenCount() >= threshold) {\n    newDir = await convertToShard(dir, options);\n  }\n  const parent = newDir.parent;\n  if (parent) {\n    if (newDir !== dir) {\n      if (child) {\n        child.parent = newDir;\n      }\n      if (!newDir.parentKey) {\n        throw new Error('No parent key found');\n      }\n      await parent.put(newDir.parentKey, newDir);\n    }\n    return flatToShard(newDir, parent, threshold, options);\n  }\n  return newDir;\n}\nasync function convertToShard(oldDir, options) {\n  const newDir = new DirSharded({\n    root: oldDir.root,\n    dir: true,\n    parent: oldDir.parent,\n    parentKey: oldDir.parentKey,\n    path: oldDir.path,\n    dirty: oldDir.dirty,\n    flat: false,\n    mtime: oldDir.mtime,\n    mode: oldDir.mode\n  }, options);\n  for await (const {key, child} of oldDir.eachChildSeries()) {\n    await newDir.put(key, child);\n  }\n  return newDir;\n}\nexport default flatToShard;","const toPathComponents = (path = '') => {\n  return (path.trim().match(/([^\\\\^/]|\\\\\\/)+/g) || []).filter(Boolean);\n};\nexport default toPathComponents;","import DirFlat from './dir-flat.js';\nimport flatToShard from './flat-to-shard.js';\nimport Dir from './dir.js';\nimport toPathComponents from './utils/to-path-components.js';\nasync function addToTree(elem, tree, options) {\n  const pathElems = toPathComponents(elem.path || '');\n  const lastIndex = pathElems.length - 1;\n  let parent = tree;\n  let currentPath = '';\n  for (let i = 0; i < pathElems.length; i++) {\n    const pathElem = pathElems[i];\n    currentPath += `${ currentPath ? '/' : '' }${ pathElem }`;\n    const last = i === lastIndex;\n    parent.dirty = true;\n    parent.cid = undefined;\n    parent.size = undefined;\n    if (last) {\n      await parent.put(pathElem, elem);\n      tree = await flatToShard(null, parent, options.shardSplitThreshold, options);\n    } else {\n      let dir = await parent.get(pathElem);\n      if (!dir || !(dir instanceof Dir)) {\n        dir = new DirFlat({\n          root: false,\n          dir: true,\n          parent: parent,\n          parentKey: pathElem,\n          path: currentPath,\n          dirty: true,\n          flat: true,\n          mtime: dir && dir.unixfs && dir.unixfs.mtime,\n          mode: dir && dir.unixfs && dir.unixfs.mode\n        }, options);\n      }\n      await parent.put(pathElem, dir);\n      parent = dir;\n    }\n  }\n  return tree;\n}\nasync function* flushAndYield(tree, blockstore) {\n  if (!(tree instanceof Dir)) {\n    if (tree && tree.unixfs && tree.unixfs.isDirectory()) {\n      yield tree;\n    }\n    return;\n  }\n  yield* tree.flush(blockstore);\n}\nasync function* treeBuilder(source, block, options) {\n  let tree = new DirFlat({\n    root: true,\n    dir: true,\n    path: '',\n    dirty: true,\n    flat: true\n  }, options);\n  for await (const entry of source) {\n    if (!entry) {\n      continue;\n    }\n    tree = await addToTree(entry, tree, options);\n    if (!entry.unixfs || !entry.unixfs.isDirectory()) {\n      yield entry;\n    }\n  }\n  if (options.wrapWithDirectory) {\n    yield* flushAndYield(tree, block);\n  } else {\n    for await (const unwrapped of tree.eachChildSeries()) {\n      if (!unwrapped) {\n        continue;\n      }\n      yield* flushAndYield(unwrapped.child, block);\n    }\n  }\n}\nexport default treeBuilder;","import parallelBatch from 'it-parallel-batch';\nimport defaultOptions from './options.js';\nimport dagBuilderFn from './dag-builder/index.js';\nimport treeBuilderFn from './tree-builder.js';\nexport async function* importer(source, blockstore, options = {}) {\n  const opts = defaultOptions(options);\n  let dagBuilder;\n  if (typeof options.dagBuilder === 'function') {\n    dagBuilder = options.dagBuilder;\n  } else {\n    dagBuilder = dagBuilderFn;\n  }\n  let treeBuilder;\n  if (typeof options.treeBuilder === 'function') {\n    treeBuilder = options.treeBuilder;\n  } else {\n    treeBuilder = treeBuilderFn;\n  }\n  let candidates;\n  if (Symbol.asyncIterator in source || Symbol.iterator in source) {\n    candidates = source;\n  } else {\n    candidates = [source];\n  }\n  for await (const entry of treeBuilder(parallelBatch(dagBuilder(candidates, blockstore, opts), opts.fileImportConcurrency), blockstore, opts)) {\n    yield {\n      cid: entry.cid,\n      path: entry.path,\n      unixfs: entry.unixfs,\n      size: entry.size\n    };\n  }\n}","'use strict'\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nasync function * browserReadableStreamToIt (stream, options = {}) {\n  const reader = stream.getReader()\n\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        return\n      }\n\n      yield result.value\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel()\n    }\n\n    reader.releaseLock()\n  }\n}\n\nmodule.exports = browserReadableStreamToIt\n","/* eslint-env browser */\n\n'use strict'\n\nconst browserReadableStreamToIt = require('browser-readablestream-to-it')\n\n/**\n * @param {Blob} blob\n * @returns {AsyncIterable<Uint8Array>}\n */\nfunction blobToIt (blob) {\n  if (typeof blob.stream === 'function') {\n    // @ts-ignore missing some properties\n    return browserReadableStreamToIt(blob.stream())\n  }\n\n  // firefox < 69 does not support blob.stream()\n  // @ts-ignore - response.body is optional, but in practice it's a stream.\n  return browserReadableStreamToIt(new Response(blob).body)\n}\n\nmodule.exports = blobToIt\n","'use strict'\n\n/**\n * @template T\n * @typedef {Object} Peek\n * @property {() => IteratorResult<T, void>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} AsyncPeek\n * @property {() => Promise<IteratorResult<T, void>>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} Push\n * @property {(value:T) => void} push\n */\n\n/**\n * @template T\n * @typedef {Iterable<T> & Peek<T> & Push<T> & Iterator<T>} Peekable<T>\n */\n\n/**\n * @template T\n * @typedef {AsyncIterable<T> & AsyncPeek<T> & Push<T> & AsyncIterator<T>} AsyncPeekable<T>\n */\n\n/**\n * @template {Iterable<any> | AsyncIterable<any>} I\n * @param {I} iterable\n * @returns {I extends Iterable<infer T>\n *  ? Peekable<T>\n *  : I extends AsyncIterable<infer T>\n *  ? AsyncPeekable<T>\n *  : never\n * }\n */\nfunction peekableIterator (iterable) {\n  // @ts-ignore\n  const [iterator, symbol] = iterable[Symbol.asyncIterator]\n    // @ts-ignore\n    ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n    // @ts-ignore\n    : [iterable[Symbol.iterator](), Symbol.iterator]\n\n  /** @type {any[]} */\n  const queue = []\n\n  // @ts-ignore\n  return {\n    peek: () => {\n      return iterator.next()\n    },\n    push: (value) => {\n      queue.push(value)\n    },\n    next: () => {\n      if (queue.length) {\n        return {\n          done: false,\n          value: queue.shift()\n        }\n      }\n\n      return iterator.next()\n    },\n    [symbol] () {\n      return this\n    }\n  }\n}\n\nmodule.exports = peekableIterator\n","'use strict'\n\n/**\n * Takes an (async) iterable and returns one with each item mapped by the passed\n * function.\n *\n * @template I,O\n * @param {AsyncIterable<I>|Iterable<I>} source\n * @param {function(I):O|Promise<O>} func\n * @returns {AsyncIterable<O>}\n */\nconst map = async function * (source, func) {\n  for await (const val of source) {\n    yield func(val)\n  }\n}\n\nmodule.exports = map\n","export function isBytes(obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer;\n}\nexport function isBlob(obj) {\n  return obj.constructor && (obj.constructor.name === 'Blob' || obj.constructor.name === 'File') && typeof obj.stream === 'function';\n}\nexport function isFileObject(obj) {\n  return typeof obj === 'object' && (obj.path || obj.content);\n}\nexport const isReadableStream = value => value && typeof value.getReader === 'function';","import errCode from 'err-code';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport blobToIt from 'blob-to-it';\nimport itPeekable from 'it-peekable';\nimport all from 'it-all';\nimport map from 'it-map';\nimport {\n  isBytes,\n  isReadableStream,\n  isBlob\n} from './utils.js';\nasync function* toAsyncIterable(thing) {\n  yield thing;\n}\nexport async function normaliseContent(input) {\n  if (isBytes(input)) {\n    return toAsyncIterable(toBytes(input));\n  }\n  if (typeof input === 'string' || input instanceof String) {\n    return toAsyncIterable(toBytes(input.toString()));\n  }\n  if (isBlob(input)) {\n    return blobToIt(input);\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      return toAsyncIterable(new Uint8Array(0));\n    }\n    peekable.push(value);\n    if (Number.isInteger(value)) {\n      return toAsyncIterable(Uint8Array.from(await all(peekable)));\n    }\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return map(peekable, toBytes);\n    }\n  }\n  throw errCode(new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n}\nfunction toBytes(chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk;\n  }\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n  }\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk);\n  }\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk);\n  }\n  return uint8ArrayFromString(chunk.toString());\n}","import errCode from 'err-code';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport itPeekable from 'it-peekable';\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js';\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs';\nexport async function* normaliseCandidateSingle(input, normaliseContent) {\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (typeof input === 'string' || input instanceof String) {\n    yield toFileObject(input.toString(), normaliseContent);\n    return;\n  }\n  if (isBytes(input) || isBlob(input)) {\n    yield toFileObject(input, normaliseContent);\n    return;\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      yield { content: [] };\n      return;\n    }\n    peekable.push(value);\n    if (Number.isInteger(value) || isBytes(value) || typeof value === 'string' || value instanceof String) {\n      yield toFileObject(peekable, normaliseContent);\n      return;\n    }\n    throw errCode(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (isFileObject(input)) {\n    yield toFileObject(input, normaliseContent);\n    return;\n  }\n  throw errCode(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT');\n}\nasync function toFileObject(input, normaliseContent) {\n  const {path, mode, mtime, content} = input;\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  };\n  if (content) {\n    file.content = await normaliseContent(content);\n  } else if (!path) {\n    file.content = await normaliseContent(input);\n  }\n  return file;\n}","import { normaliseContent } from './normalise-content.js';\nimport { normaliseCandidateSingle } from './normalise-candidate-single.js';\nexport function normaliseInput(input) {\n  return normaliseCandidateSingle(input, normaliseContent);\n}","import errCode from 'err-code';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport itPeekable from 'it-peekable';\nimport map from 'it-map';\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js';\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs';\nexport async function* normaliseCandidateMultiple(input, normaliseContent) {\n  if (typeof input === 'string' || input instanceof String || isBytes(input) || isBlob(input) || input._readableState) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      yield* [];\n      return;\n    }\n    peekable.push(value);\n    if (Number.isInteger(value)) {\n      throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n    }\n    if (value._readableState) {\n      yield* map(peekable, value => toFileObject({ content: value }, normaliseContent));\n      return;\n    }\n    if (isBytes(value)) {\n      yield toFileObject({ content: peekable }, normaliseContent);\n      return;\n    }\n    if (isFileObject(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || isReadableStream(value) || isBlob(value)) {\n      yield* map(peekable, value => toFileObject(value, normaliseContent));\n      return;\n    }\n  }\n  if (isFileObject(input)) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n}\nasync function toFileObject(input, normaliseContent) {\n  const {path, mode, mtime, content} = input;\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  };\n  if (content) {\n    file.content = await normaliseContent(content);\n  } else if (!path) {\n    file.content = await normaliseContent(input);\n  }\n  return file;\n}","import { normaliseContent } from './normalise-content.js';\nimport { normaliseCandidateMultiple } from './normalise-candidate-multiple.js';\nexport function normaliseInput(input) {\n  return normaliseCandidateMultiple(input, normaliseContent);\n}","import { normaliseInput as normaliseInputSingle } from 'ipfs-core-utils/files/normalise-input-single';\nimport { normaliseInput as normaliseInputMultiple } from 'ipfs-core-utils/files/normalise-input-multiple';\nfunction isBytes(obj) {\n    return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer;\n}\nfunction isBlob(obj) {\n    return Boolean(obj.constructor) &&\n        (obj.constructor.name === 'Blob' || obj.constructor.name === 'File') &&\n        typeof obj.stream === 'function';\n}\nfunction isSingle(input) {\n    return typeof input === 'string' || input instanceof String || isBytes(input) || isBlob(input) || '_readableState' in input;\n}\n/**\n * Get a single or multiple normaliser depending on the input.\n */\nexport function getNormaliser(input) {\n    if (isSingle(input)) {\n        return normaliseInputSingle(input);\n    }\n    else {\n        return normaliseInputMultiple(input);\n    }\n}\n","import errCode from 'err-code';\nexport function notFoundError(err) {\n  err = err || new Error('Not Found');\n  return errCode(err, 'ERR_NOT_FOUND');\n}\nexport function abortedError(err) {\n  err = err || new Error('Aborted');\n  return errCode(err, 'ERR_ABORTED');\n}","'use strict'\n\n/**\n * Drains an (async) iterable discarding its' content and does not return\n * anything.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @returns {Promise<void>}\n */\nconst drain = async (source) => {\n  for await (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty\n}\n\nmodule.exports = drain\n","'use strict'\n\n/**\n * Filters the passed (async) iterable by using the filter function\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {function(T):boolean|Promise<boolean>} fn\n */\nconst filter = async function * (source, fn) {\n  for await (const entry of source) {\n    if (await fn(entry)) {\n      yield entry\n    }\n  }\n}\n\nmodule.exports = filter\n","'use strict'\n\n/**\n * Stop iteration after n items have been received.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} limit\n * @returns {AsyncIterable<T>}\n */\nconst take = async function * (source, limit) {\n  let items = 0\n\n  if (limit < 1) {\n    return\n  }\n\n  for await (const entry of source) {\n    yield entry\n\n    items++\n\n    if (items === limit) {\n      return\n    }\n  }\n}\n\nmodule.exports = take\n","import drain from 'it-drain';\nimport filter from 'it-filter';\nimport take from 'it-take';\nimport all from 'it-all';\nconst sortAll = (iterable, sorter) => {\n  return async function* () {\n    const values = await all(iterable);\n    yield* values.sort(sorter);\n  }();\n};\nexport class BaseBlockstore {\n  open() {\n    return Promise.reject(new Error('.open is not implemented'));\n  }\n  close() {\n    return Promise.reject(new Error('.close is not implemented'));\n  }\n  put(key, val, options) {\n    return Promise.reject(new Error('.put is not implemented'));\n  }\n  get(key, options) {\n    return Promise.reject(new Error('.get is not implemented'));\n  }\n  has(key, options) {\n    return Promise.reject(new Error('.has is not implemented'));\n  }\n  delete(key, options) {\n    return Promise.reject(new Error('.delete is not implemented'));\n  }\n  async *putMany(source, options = {}) {\n    for await (const {key, value} of source) {\n      await this.put(key, value, options);\n      yield {\n        key,\n        value\n      };\n    }\n  }\n  async *getMany(source, options = {}) {\n    for await (const key of source) {\n      yield this.get(key, options);\n    }\n  }\n  async *deleteMany(source, options = {}) {\n    for await (const key of source) {\n      await this.delete(key, options);\n      yield key;\n    }\n  }\n  batch() {\n    let puts = [];\n    let dels = [];\n    return {\n      put(key, value) {\n        puts.push({\n          key,\n          value\n        });\n      },\n      delete(key) {\n        dels.push(key);\n      },\n      commit: async options => {\n        await drain(this.putMany(puts, options));\n        puts = [];\n        await drain(this.deleteMany(dels, options));\n        dels = [];\n      }\n    };\n  }\n  async *_all(q, options) {\n    throw new Error('._all is not implemented');\n  }\n  async *_allKeys(q, options) {\n    throw new Error('._allKeys is not implemented');\n  }\n  query(q, options) {\n    let it = this._all(q, options);\n    if (q.prefix != null) {\n      it = filter(it, e => e.key.toString().startsWith(q.prefix || ''));\n    }\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it);\n    }\n    if (q.offset != null) {\n      let i = 0;\n      it = filter(it, () => i++ >= (q.offset || 0));\n    }\n    if (q.limit != null) {\n      it = take(it, q.limit);\n    }\n    return it;\n  }\n  queryKeys(q, options) {\n    let it = this._allKeys(q, options);\n    if (q.prefix != null) {\n      it = filter(it, cid => cid.toString().startsWith(q.prefix || ''));\n    }\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it);\n    }\n    if (q.offset != null) {\n      let i = 0;\n      it = filter(it, () => i++ >= q.offset);\n    }\n    if (q.limit != null) {\n      it = take(it, q.limit);\n    }\n    return it;\n  }\n}","import { CID } from 'multiformats';\nimport { BaseBlockstore } from 'blockstore-core';\nexport class MemoryBlockStore extends BaseBlockstore {\n    constructor() {\n        super();\n        this.store = new Map();\n    }\n    async *blocks() {\n        for (const [cidStr, bytes] of this.store.entries()) {\n            yield { cid: CID.parse(cidStr), bytes };\n        }\n    }\n    put(cid, bytes) {\n        this.store.set(cid.toString(), bytes);\n        return Promise.resolve();\n    }\n    get(cid) {\n        const bytes = this.store.get(cid.toString());\n        if (!bytes) {\n            throw new Error(`block with cid ${cid.toString()} no found`);\n        }\n        return Promise.resolve(bytes);\n    }\n    has(cid) {\n        return Promise.resolve(this.store.has(cid.toString()));\n    }\n    close() {\n        this.store.clear();\n        return Promise.resolve();\n    }\n}\n","import { sha256 } from 'multiformats/hashes/sha2';\nexport const unixfsImporterOptionsDefault = {\n    cidVersion: 1,\n    chunker: 'fixed',\n    maxChunkSize: 262144,\n    hasher: sha256,\n    rawLeaves: true,\n    wrapWithDirectory: true,\n    maxChildrenPerNode: 174\n};\n","import last from 'it-last';\nimport pipe from 'it-pipe';\nimport { CarWriter } from '@ipld/car';\nimport { importer } from 'ipfs-unixfs-importer';\nimport { getNormaliser } from \"./utils/normalise-input.js\";\nimport { MemoryBlockStore } from \"../blockstore/memory.js\";\nimport { unixfsImporterOptionsDefault } from \"./constants.js\";\nexport async function pack({ input, blockstore: userBlockstore, hasher, maxChunkSize, maxChildrenPerNode, wrapWithDirectory, rawLeaves }) {\n    if (!input || (Array.isArray(input) && !input.length)) {\n        throw new Error('missing input file(s)');\n    }\n    const blockstore = userBlockstore ? userBlockstore : new MemoryBlockStore();\n    // Consume the source\n    const rootEntry = await last(pipe(getNormaliser(input), (source) => importer(source, blockstore, {\n        ...unixfsImporterOptionsDefault,\n        hasher: hasher || unixfsImporterOptionsDefault.hasher,\n        maxChunkSize: maxChunkSize || unixfsImporterOptionsDefault.maxChunkSize,\n        maxChildrenPerNode: maxChildrenPerNode || unixfsImporterOptionsDefault.maxChildrenPerNode,\n        wrapWithDirectory: wrapWithDirectory === false ? false : unixfsImporterOptionsDefault.wrapWithDirectory,\n        rawLeaves: rawLeaves == null ? unixfsImporterOptionsDefault.rawLeaves : rawLeaves\n    })));\n    if (!rootEntry || !rootEntry.cid) {\n        throw new Error('given input could not be parsed correctly');\n    }\n    const root = rootEntry.cid;\n    const { writer, out: carOut } = await CarWriter.create([root]);\n    const carOutIter = carOut[Symbol.asyncIterator]();\n    let writingPromise;\n    const writeAll = async () => {\n        for await (const block of blockstore.blocks()) {\n            // `await` will block until all bytes in `carOut` are consumed by the user\n            // so we have backpressure here\n            await writer.put(block);\n        }\n        await writer.close();\n        if (!userBlockstore) {\n            await blockstore.close();\n        }\n    };\n    const out = {\n        [Symbol.asyncIterator]() {\n            if (writingPromise != null) {\n                throw new Error('Multiple iterator not supported');\n            }\n            // don't start writing until the user starts consuming the iterator\n            writingPromise = writeAll();\n            return {\n                async next() {\n                    const result = await carOutIter.next();\n                    if (result.done) {\n                        await writingPromise; // any errors will propagate from here\n                    }\n                    return result;\n                }\n            };\n        }\n    };\n    return { root, out };\n}\n","const MAX_HEADER_LENGTH = 2000\nconst THROW_ON_MAX_HEADER_LENGTH_EXCEEDED = false\n\nfunction hasRel (x) {\n  return x && x.rel\n}\n\nfunction intoRels (acc, x) {\n  function splitRel (rel) {\n    acc[rel] = Object.assign({}, x, { rel: rel })\n  }\n\n  x.rel.split(/\\s+/).forEach(splitRel)\n\n  return acc\n}\n\nfunction createObjects (acc, p) {\n  // rel=\"next\" => 1: rel 2: next\n  const m = p.match(/\\s*(.+)\\s*=\\s*\"?([^\"]+)\"?/)\n  if (m) acc[m[1]] = m[2]\n  return acc\n}\n\nfunction parseLink (link) {\n  try {\n    const m = link.match(/<?([^>]*)>(.*)/)\n    const linkUrl = m[1]\n    const parts = m[2].split(';')\n    const qry = {}\n    // The origin is unused but it's required to parse relative URLs\n    const url = new URL(linkUrl, 'https://example.com')\n\n    for (const [key, value] of url.searchParams) {\n      qry[key] = value\n    }\n\n    parts.shift()\n\n    let info = parts.reduce(createObjects, {})\n    info = Object.assign({}, qry, info)\n    info.url = linkUrl\n    return info\n  } catch {\n    return null\n  }\n}\n\nfunction checkHeader (linkHeader, options) {\n  if (!linkHeader) return false\n\n  options = options || {}\n  const maxHeaderLength = options.maxHeaderLength || MAX_HEADER_LENGTH\n  const throwOnMaxHeaderLengthExceeded = options.throwOnMaxHeaderLengthExceeded || THROW_ON_MAX_HEADER_LENGTH_EXCEEDED\n\n  if (linkHeader.length > maxHeaderLength) {\n    if (throwOnMaxHeaderLengthExceeded) {\n      throw new Error('Input string too long, it should be under ' + maxHeaderLength + ' characters.')\n    } else {\n      return false\n    }\n  }\n  return true\n}\n\nfunction parseLinkHeader (linkHeader, options) {\n  if (!checkHeader(linkHeader, options)) return null\n\n  return linkHeader.split(/,\\s*</)\n    .map(parseLink)\n    .filter(hasRel)\n    .reduce(intoRels, {})\n}\n\nexport { parseLinkHeader }\n","import * as cborg from 'cborg';\nimport { CID } from 'multiformats/cid';\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1);\n  bytes.set(cid.bytes, 1);\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nexport const name = 'dag-cbor';\nexport const code = 113;\nexport const encode = node => cborg.encode(node, encodeOptions);\nexport const decode = data => cborg.decode(data, decodeOptions);","import {\n  Bucket,\n  createHAMT\n} from 'hamt-sharding';\nimport { decode } from '@ipld/dag-pb';\nimport { murmur3128 } from '@multiformats/murmur3';\nconst hashFn = async function (buf) {\n  return (await murmur3128.encode(buf)).slice(0, 8).reverse();\n};\nconst addLinksToHamtBucket = (links, bucket, rootBucket) => {\n  return Promise.all(links.map(link => {\n    if (link.Name == null) {\n      throw new Error('Unexpected Link without a Name');\n    }\n    if (link.Name.length === 2) {\n      const pos = parseInt(link.Name, 16);\n      return bucket._putObjectAt(pos, new Bucket({\n        hash: rootBucket._options.hash,\n        bits: rootBucket._options.bits\n      }, bucket, pos));\n    }\n    return rootBucket.put(link.Name.substring(2), true);\n  }));\n};\nconst toPrefix = position => {\n  return position.toString(16).toUpperCase().padStart(2, '0').substring(0, 2);\n};\nconst toBucketPath = position => {\n  let bucket = position.bucket;\n  const path = [];\n  while (bucket._parent) {\n    path.push(bucket);\n    bucket = bucket._parent;\n  }\n  path.push(bucket);\n  return path.reverse();\n};\nconst findShardCid = async (node, name, blockstore, context, options) => {\n  if (!context) {\n    const rootBucket = createHAMT({ hashFn });\n    context = {\n      rootBucket,\n      hamtDepth: 1,\n      lastBucket: rootBucket\n    };\n  }\n  await addLinksToHamtBucket(node.Links, context.lastBucket, context.rootBucket);\n  const position = await context.rootBucket._findNewBucketAndPos(name);\n  let prefix = toPrefix(position.pos);\n  const bucketPath = toBucketPath(position);\n  if (bucketPath.length > context.hamtDepth) {\n    context.lastBucket = bucketPath[context.hamtDepth];\n    prefix = toPrefix(context.lastBucket._posAtParent);\n  }\n  const link = node.Links.find(link => {\n    if (link.Name == null) {\n      return false;\n    }\n    const entryPrefix = link.Name.substring(0, 2);\n    const entryName = link.Name.substring(2);\n    if (entryPrefix !== prefix) {\n      return false;\n    }\n    if (entryName && entryName !== name) {\n      return false;\n    }\n    return true;\n  });\n  if (!link) {\n    return null;\n  }\n  if (link.Name != null && link.Name.substring(2) === name) {\n    return link.Hash;\n  }\n  context.hamtDepth++;\n  const block = await blockstore.get(link.Hash, options);\n  node = decode(block);\n  return findShardCid(node, name, blockstore, context, options);\n};\nexport default findShardCid;","function extractDataFromBlock(block, blockStart, requestedStart, requestedEnd) {\n  const blockLength = block.length;\n  const blockEnd = blockStart + blockLength;\n  if (requestedStart >= blockEnd || requestedEnd < blockStart) {\n    return new Uint8Array(0);\n  }\n  if (requestedEnd >= blockStart && requestedEnd < blockEnd) {\n    block = block.slice(0, requestedEnd - blockStart);\n  }\n  if (requestedStart >= blockStart && requestedStart < blockEnd) {\n    block = block.slice(requestedStart - blockStart);\n  }\n  return block;\n}\nexport default extractDataFromBlock;","import errCode from 'err-code';\nconst validateOffsetAndLength = (size, offset, length) => {\n  if (!offset) {\n    offset = 0;\n  }\n  if (offset < 0) {\n    throw errCode(new Error('Offset must be greater than or equal to 0'), 'ERR_INVALID_PARAMS');\n  }\n  if (offset > size) {\n    throw errCode(new Error('Offset must be less than the file size'), 'ERR_INVALID_PARAMS');\n  }\n  if (!length && length !== 0) {\n    length = size - offset;\n  }\n  if (length < 0) {\n    throw errCode(new Error('Length must be greater than or equal to 0'), 'ERR_INVALID_PARAMS');\n  }\n  if (offset + length > size) {\n    length = size - offset;\n  }\n  return {\n    offset,\n    length\n  };\n};\nexport default validateOffsetAndLength;","import extractDataFromBlock from '../../../utils/extract-data-from-block.js';\nimport validateOffsetAndLength from '../../../utils/validate-offset-and-length.js';\nimport { UnixFS } from 'ipfs-unixfs';\nimport errCode from 'err-code';\nimport * as dagPb from '@ipld/dag-pb';\nimport * as dagCbor from '@ipld/dag-cbor';\nimport * as raw from 'multiformats/codecs/raw';\nasync function* emitBytes(blockstore, node, start, end, streamPosition = 0, options) {\n  if (node instanceof Uint8Array) {\n    const buf = extractDataFromBlock(node, streamPosition, start, end);\n    if (buf.length) {\n      yield buf;\n    }\n    streamPosition += buf.length;\n    return streamPosition;\n  }\n  if (node.Data == null) {\n    throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS');\n  }\n  let file;\n  try {\n    file = UnixFS.unmarshal(node.Data);\n  } catch (err) {\n    throw errCode(err, 'ERR_NOT_UNIXFS');\n  }\n  if (file.data && file.data.length) {\n    const buf = extractDataFromBlock(file.data, streamPosition, start, end);\n    if (buf.length) {\n      yield buf;\n    }\n    streamPosition += file.data.length;\n  }\n  let childStart = streamPosition;\n  for (let i = 0; i < node.Links.length; i++) {\n    const childLink = node.Links[i];\n    const childEnd = streamPosition + file.blockSizes[i];\n    if (start >= childStart && start < childEnd || end > childStart && end <= childEnd || start < childStart && end > childEnd) {\n      const block = await blockstore.get(childLink.Hash, { signal: options.signal });\n      let child;\n      switch (childLink.Hash.code) {\n      case dagPb.code:\n        child = await dagPb.decode(block);\n        break;\n      case raw.code:\n        child = block;\n        break;\n      case dagCbor.code:\n        child = await dagCbor.decode(block);\n        break;\n      default:\n        throw Error(`Unsupported codec: ${ childLink.Hash.code }`);\n      }\n      for await (const buf of emitBytes(blockstore, child, start, end, streamPosition, options)) {\n        streamPosition += buf.length;\n        yield buf;\n      }\n    }\n    streamPosition = childEnd;\n    childStart = childEnd + 1;\n  }\n}\nconst fileContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  function yieldFileContent(options = {}) {\n    const fileSize = unixfs.fileSize();\n    if (fileSize === undefined) {\n      throw new Error('File was a directory');\n    }\n    const {offset, length} = validateOffsetAndLength(fileSize, options.offset, options.length);\n    const start = offset;\n    const end = offset + length;\n    return emitBytes(blockstore, node, start, end, 0, options);\n  }\n  return yieldFileContent;\n};\nexport default fileContent;","const directoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  async function* yieldDirectoryContent(options = {}) {\n    const offset = options.offset || 0;\n    const length = options.length || node.Links.length;\n    const links = node.Links.slice(offset, length);\n    for (const link of links) {\n      const result = await resolve(link.Hash, link.Name || '', `${ path }/${ link.Name || '' }`, [], depth + 1, blockstore, options);\n      if (result.entry) {\n        yield result.entry;\n      }\n    }\n  }\n  return yieldDirectoryContent;\n};\nexport default directoryContent;","import { decode } from '@ipld/dag-pb';\nconst hamtShardedDirectoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  function yieldHamtDirectoryContent(options = {}) {\n    return listDirectory(node, path, resolve, depth, blockstore, options);\n  }\n  return yieldHamtDirectoryContent;\n};\nasync function* listDirectory(node, path, resolve, depth, blockstore, options) {\n  const links = node.Links;\n  for (const link of links) {\n    const name = link.Name != null ? link.Name.substring(2) : null;\n    if (name) {\n      const result = await resolve(link.Hash, name, `${ path }/${ name }`, [], depth + 1, blockstore, options);\n      yield result.entry;\n    } else {\n      const block = await blockstore.get(link.Hash);\n      node = decode(block);\n      for await (const file of listDirectory(node, path, resolve, depth, blockstore, options)) {\n        yield file;\n      }\n    }\n  }\n}\nexport default hamtShardedDirectoryContent;","import errCode from 'err-code';\nimport { UnixFS } from 'ipfs-unixfs';\nimport findShardCid from '../../utils/find-cid-in-shard.js';\nimport { decode } from '@ipld/dag-pb';\nimport contentFile from './content/file.js';\nimport contentDirectory from './content/directory.js';\nimport contentHamtShardedDirectory from './content/hamt-sharded-directory.js';\nconst findLinkCid = (node, name) => {\n  const link = node.Links.find(link => link.Name === name);\n  return link && link.Hash;\n};\nconst contentExporters = {\n  raw: contentFile,\n  file: contentFile,\n  directory: contentDirectory,\n  'hamt-sharded-directory': contentHamtShardedDirectory,\n  metadata: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    return () => [];\n  },\n  symlink: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    return () => [];\n  }\n};\nconst unixFsResolver = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid, options);\n  const node = decode(block);\n  let unixfs;\n  let next;\n  if (!name) {\n    name = cid.toString();\n  }\n  if (node.Data == null) {\n    throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS');\n  }\n  try {\n    unixfs = UnixFS.unmarshal(node.Data);\n  } catch (err) {\n    throw errCode(err, 'ERR_NOT_UNIXFS');\n  }\n  if (!path) {\n    path = name;\n  }\n  if (toResolve.length) {\n    let linkCid;\n    if (unixfs && unixfs.type === 'hamt-sharded-directory') {\n      linkCid = await findShardCid(node, toResolve[0], blockstore);\n    } else {\n      linkCid = findLinkCid(node, toResolve[0]);\n    }\n    if (!linkCid) {\n      throw errCode(new Error('file does not exist'), 'ERR_NOT_FOUND');\n    }\n    const nextName = toResolve.shift();\n    const nextPath = `${ path }/${ nextName }`;\n    next = {\n      cid: linkCid,\n      toResolve,\n      name: nextName || '',\n      path: nextPath\n    };\n  }\n  return {\n    entry: {\n      type: unixfs.isDirectory() ? 'directory' : 'file',\n      name,\n      path,\n      cid,\n      content: contentExporters[unixfs.type](cid, node, unixfs, path, resolve, depth, blockstore),\n      unixfs,\n      depth,\n      node,\n      size: unixfs.fileSize()\n    },\n    next\n  };\n};\nexport default unixFsResolver;","import errCode from 'err-code';\nimport extractDataFromBlock from '../utils/extract-data-from-block.js';\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js';\nconst rawContent = node => {\n  async function* contentGenerator(options = {}) {\n    const {offset, length} = validateOffsetAndLength(node.length, options.offset, options.length);\n    yield extractDataFromBlock(node, 0, offset, offset + length);\n  }\n  return contentGenerator;\n};\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length) {\n    throw errCode(new Error(`No link named ${ path } found in raw node ${ cid }`), 'ERR_NOT_FOUND');\n  }\n  const block = await blockstore.get(cid, options);\n  return {\n    entry: {\n      type: 'raw',\n      name,\n      path,\n      cid,\n      content: rawContent(block),\n      depth,\n      size: block.length,\n      node: block\n    }\n  };\n};\nexport default resolve;","import { CID } from 'multiformats/cid';\nimport errCode from 'err-code';\nimport * as dagCbor from '@ipld/dag-cbor';\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid);\n  const object = dagCbor.decode(block);\n  let subObject = object;\n  let subPath = path;\n  while (toResolve.length) {\n    const prop = toResolve[0];\n    if (prop in subObject) {\n      toResolve.shift();\n      subPath = `${ subPath }/${ prop }`;\n      const subObjectCid = CID.asCID(subObject[prop]);\n      if (subObjectCid) {\n        return {\n          entry: {\n            type: 'object',\n            name,\n            path,\n            cid,\n            node: block,\n            depth,\n            size: block.length,\n            content: async function* () {\n              yield object;\n            }\n          },\n          next: {\n            cid: subObjectCid,\n            name: prop,\n            path: subPath,\n            toResolve\n          }\n        };\n      }\n      subObject = subObject[prop];\n    } else {\n      throw errCode(new Error(`No property named ${ prop } found in cbor node ${ cid }`), 'ERR_NO_PROP');\n    }\n  }\n  return {\n    entry: {\n      type: 'object',\n      name,\n      path,\n      cid,\n      node: block,\n      depth,\n      size: block.length,\n      content: async function* () {\n        yield object;\n      }\n    }\n  };\n};\nexport default resolve;","import errCode from 'err-code';\nimport extractDataFromBlock from '../utils/extract-data-from-block.js';\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js';\nimport * as mh from 'multiformats/hashes/digest';\nconst rawContent = node => {\n  async function* contentGenerator(options = {}) {\n    const {offset, length} = validateOffsetAndLength(node.length, options.offset, options.length);\n    yield extractDataFromBlock(node, 0, offset, offset + length);\n  }\n  return contentGenerator;\n};\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length) {\n    throw errCode(new Error(`No link named ${ path } found in raw node ${ cid }`), 'ERR_NOT_FOUND');\n  }\n  const buf = await mh.decode(cid.multihash.bytes);\n  return {\n    entry: {\n      type: 'identity',\n      name,\n      path,\n      cid,\n      content: rawContent(buf.digest),\n      depth,\n      size: buf.digest.length,\n      node: buf.digest\n    }\n  };\n};\nexport default resolve;","import errCode from 'err-code';\nimport * as dagPb from '@ipld/dag-pb';\nimport * as dagCbor from '@ipld/dag-cbor';\nimport * as raw from 'multiformats/codecs/raw';\nimport { identity } from 'multiformats/hashes/identity';\nimport dagPbResolver from './unixfs-v1/index.js';\nimport rawResolver from './raw.js';\nimport dagCborResolver from './dag-cbor.js';\nimport identifyResolver from './identity.js';\nconst resolvers = {\n  [dagPb.code]: dagPbResolver,\n  [raw.code]: rawResolver,\n  [dagCbor.code]: dagCborResolver,\n  [identity.code]: identifyResolver\n};\nfunction resolve(cid, name, path, toResolve, depth, blockstore, options) {\n  const resolver = resolvers[cid.code];\n  if (!resolver) {\n    throw errCode(new Error(`No resolver for code ${ cid.code }`), 'ERR_NO_RESOLVER');\n  }\n  return resolver(cid, name, path, toResolve, resolve, depth, blockstore, options);\n}\nexport default resolve;","import errCode from 'err-code';\nimport { CID } from 'multiformats/cid';\nimport resolve from './resolvers/index.js';\nimport last from 'it-last';\nconst toPathComponents = (path = '') => {\n  return (path.trim().match(/([^\\\\^/]|\\\\\\/)+/g) || []).filter(Boolean);\n};\nconst cidAndRest = path => {\n  if (path instanceof Uint8Array) {\n    return {\n      cid: CID.decode(path),\n      toResolve: []\n    };\n  }\n  const cid = CID.asCID(path);\n  if (cid) {\n    return {\n      cid,\n      toResolve: []\n    };\n  }\n  if (typeof path === 'string') {\n    if (path.indexOf('/ipfs/') === 0) {\n      path = path.substring(6);\n    }\n    const output = toPathComponents(path);\n    return {\n      cid: CID.parse(output[0]),\n      toResolve: output.slice(1)\n    };\n  }\n  throw errCode(new Error(`Unknown path type ${ path }`), 'ERR_BAD_PATH');\n};\nexport async function* walkPath(path, blockstore, options = {}) {\n  let {cid, toResolve} = cidAndRest(path);\n  let name = cid.toString();\n  let entryPath = name;\n  const startingDepth = toResolve.length;\n  while (true) {\n    const result = await resolve(cid, name, entryPath, toResolve, startingDepth, blockstore, options);\n    if (!result.entry && !result.next) {\n      throw errCode(new Error(`Could not resolve ${ path }`), 'ERR_NOT_FOUND');\n    }\n    if (result.entry) {\n      yield result.entry;\n    }\n    if (!result.next) {\n      return;\n    }\n    toResolve = result.next.toResolve;\n    cid = result.next.cid;\n    name = result.next.name;\n    entryPath = result.next.path;\n  }\n}\nexport async function exporter(path, blockstore, options = {}) {\n  const result = await last(walkPath(path, blockstore, options));\n  if (!result) {\n    throw errCode(new Error(`Could not resolve ${ path }`), 'ERR_NOT_FOUND');\n  }\n  return result;\n}\nexport async function* recursive(path, blockstore, options = {}) {\n  const node = await exporter(path, blockstore, options);\n  if (!node) {\n    return;\n  }\n  yield node;\n  if (node.type === 'directory') {\n    for await (const child of recurse(node, options)) {\n      yield child;\n    }\n  }\n  async function* recurse(node, options) {\n    for await (const file of node.content(options)) {\n      yield file;\n      if (file instanceof Uint8Array) {\n        continue;\n      }\n      if (file.type === 'directory') {\n        yield* recurse(file, options);\n      }\n    }\n  }\n}","export function equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}","import { equals } from 'uint8arrays/equals';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { BaseBlockstore } from 'blockstore-core';\nexport class VerifyingGetOnlyBlockStore extends BaseBlockstore {\n    constructor(blockstore) {\n        super();\n        this.store = blockstore;\n    }\n    async get(cid) {\n        const res = await this.store.get(cid);\n        if (!res) {\n            throw new Error(`Incomplete CAR. Block missing for CID ${cid}`);\n        }\n        if (!isValid({ cid, bytes: res })) {\n            throw new Error(`Invalid CAR. Hash of block data does not match CID ${cid}`);\n        }\n        return res;\n    }\n    static fromBlockstore(b) {\n        return new VerifyingGetOnlyBlockStore(b);\n    }\n    static fromCarReader(cr) {\n        return new VerifyingGetOnlyBlockStore({\n            // Return bytes in the same fashion as a Blockstore implementation\n            get: async (cid) => {\n                const block = await cr.get(cid);\n                return block === null || block === void 0 ? void 0 : block.bytes;\n            }\n        });\n    }\n}\nasync function isValid({ cid, bytes }) {\n    const hash = await sha256.digest(bytes);\n    return equals(hash.digest, cid.multihash.digest);\n}\n","import toIterable from 'browser-readablestream-to-it';\nimport { CarBlockIterator } from '@ipld/car/iterator';\nimport { recursive as unixFsExporter } from 'ipfs-unixfs-exporter';\nimport { VerifyingGetOnlyBlockStore } from \"./utils/verifying-get-only-blockstore.js\";\nimport { MemoryBlockStore } from \"../blockstore/memory.js\";\n// Export unixfs entries from car file\nexport async function* unpack(carReader, roots) {\n    const verifyingBlockService = VerifyingGetOnlyBlockStore.fromCarReader(carReader);\n    if (!roots || roots.length === 0) {\n        roots = await carReader.getRoots();\n    }\n    for (const root of roots) {\n        yield* unixFsExporter(root, verifyingBlockService, { /* options */});\n    }\n}\nexport async function* unpackStream(readable, { roots, blockstore: userBlockstore } = {}) {\n    const carIterator = await CarBlockIterator.fromIterable(asAsyncIterable(readable));\n    const blockstore = userBlockstore || new MemoryBlockStore();\n    for await (const block of carIterator) {\n        await blockstore.put(block.cid, block.bytes);\n    }\n    const verifyingBlockStore = VerifyingGetOnlyBlockStore.fromBlockstore(blockstore);\n    if (!roots || roots.length === 0) {\n        roots = await carIterator.getRoots();\n    }\n    for (const root of roots) {\n        yield* unixFsExporter(root, verifyingBlockStore);\n    }\n}\n/**\n * Upgrade a ReadableStream to an AsyncIterable if it isn't already\n *\n * ReadableStream (e.g res.body) is asyncIterable in node, but not in chrome, yet.\n * see: https://bugs.chromium.org/p/chromium/issues/detail?id=929585\n */\nfunction asAsyncIterable(readable) {\n    // @ts-ignore how to convince tsc that we are checking the type here?\n    return Symbol.asyncIterator in readable ? readable : toIterable(readable);\n}\n","import {\n  bytes as binary,\n  CID\n} from './index.js';\nconst readonly = ({enumerable = true, configurable = false} = {}) => ({\n  enumerable,\n  configurable,\n  writable: false\n});\nconst links = function* (source, base) {\n  if (source == null)\n    return;\n  if (source instanceof Uint8Array)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    if (value != null && typeof value === 'object') {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          const cid = CID.asCID(element);\n          if (cid) {\n            yield [\n              elementPath.join('/'),\n              cid\n            ];\n          } else if (typeof element === 'object') {\n            yield* links(element, elementPath);\n          }\n        }\n      } else {\n        const cid = CID.asCID(value);\n        if (cid) {\n          yield [\n            path.join('/'),\n            cid\n          ];\n        } else {\n          yield* links(value, path);\n        }\n      }\n    }\n  }\n};\nconst tree = function* (source, base) {\n  if (source == null)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    yield path.join('/');\n    if (value != null && !(value instanceof Uint8Array) && typeof value === 'object' && !CID.asCID(value)) {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          yield elementPath.join('/');\n          if (typeof element === 'object' && !CID.asCID(element)) {\n            yield* tree(element, elementPath);\n          }\n        }\n      } else {\n        yield* tree(value, path);\n      }\n    }\n  }\n};\nconst get = (source, path) => {\n  let node = source;\n  for (const [index, key] of path.entries()) {\n    node = node[key];\n    if (node == null) {\n      throw new Error(`Object has no property at ${ path.slice(0, index + 1).map(part => `[${ JSON.stringify(part) }]`).join('') }`);\n    }\n    const cid = CID.asCID(node);\n    if (cid) {\n      return {\n        value: cid,\n        remaining: path.slice(index + 1).join('/')\n      };\n    }\n  }\n  return { value: node };\n};\nclass Block {\n  constructor({cid, bytes, value}) {\n    if (!cid || !bytes || typeof value === 'undefined')\n      throw new Error('Missing required argument');\n    this.cid = cid;\n    this.bytes = bytes;\n    this.value = value;\n    this.asBlock = this;\n    Object.defineProperties(this, {\n      cid: readonly(),\n      bytes: readonly(),\n      value: readonly(),\n      asBlock: readonly()\n    });\n  }\n  links() {\n    return links(this.value, []);\n  }\n  tree() {\n    return tree(this.value, []);\n  }\n  get(path = '/') {\n    return get(this.value, path.split('/').filter(Boolean));\n  }\n}\nconst encode = async ({value, codec, hasher}) => {\n  if (typeof value === 'undefined')\n    throw new Error('Missing required argument \"value\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const bytes = codec.encode(value);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst decode = async ({bytes, codec, hasher}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst createUnsafe = ({\n  bytes,\n  cid,\n  value: maybeValue,\n  codec\n}) => {\n  const value = maybeValue !== undefined ? maybeValue : codec && codec.decode(bytes);\n  if (value === undefined)\n    throw new Error('Missing required argument, must either provide \"value\" or \"codec\"');\n  return new Block({\n    cid,\n    bytes,\n    value\n  });\n};\nconst create = async ({bytes, cid, hasher, codec}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!hasher)\n    throw new Error('Missing required argument \"hasher\"');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  if (!binary.equals(cid.multihash.bytes, hash.bytes)) {\n    throw new Error('CID hash does not match bytes');\n  }\n  return createUnsafe({\n    bytes,\n    cid,\n    value,\n    codec\n  });\n};\nexport {\n  encode,\n  decode,\n  create,\n  createUnsafe,\n  Block\n};","import * as cborg from 'cborg';\nimport { CID } from 'multiformats/cid';\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1);\n  bytes.set(cid.bytes, 1);\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nexport const name = 'dag-cbor';\nexport const code = 113;\nexport const encode = node => cborg.encode(node, encodeOptions);\nexport const decode = data => cborg.decode(data, decodeOptions);","import {\n  CarReader,\n  CarWriter\n} from '@ipld/car';\nimport { Block } from 'multiformats/block';\nimport * as raw from 'multiformats/codecs/raw';\nimport * as cbor from '@ipld/dag-cbor';\nimport * as pb from '@ipld/dag-pb';\nexport class TreewalkCarSplitter {\n  constructor(reader, targetSize, options = {}) {\n    if (typeof targetSize !== 'number' || targetSize <= 0) {\n      throw new Error('invalid target chunk size');\n    }\n    this._reader = reader;\n    this._targetSize = targetSize;\n    this._decoders = [\n      pb,\n      raw,\n      cbor,\n      ...options.decoders || []\n    ];\n  }\n  async *cars() {\n    const roots = await this._reader.getRoots();\n    if (roots.length !== 1)\n      throw new Error(`unexpected number of roots: ${ roots.length }`);\n    let channel;\n    for await (const val of this._cars(roots[0])) {\n      channel = val.channel;\n      if (val.out)\n        yield val.out;\n    }\n    if (!channel) {\n      throw new Error('missing CAR writer channel');\n    }\n    channel.writer.close();\n    yield channel.out;\n  }\n  async _get(cid) {\n    const rawBlock = await this._reader.get(cid);\n    if (!rawBlock)\n      throw new Error(`missing block for ${ cid }`);\n    const {bytes} = rawBlock;\n    const decoder = this._decoders.find(d => d.code === cid.code);\n    if (!decoder)\n      throw new Error(`missing decoder for ${ cid.code }`);\n    return new Block({\n      cid,\n      bytes,\n      value: decoder.decode(bytes)\n    });\n  }\n  async *_cars(cid, parents = [], channel = undefined) {\n    const block = await this._get(cid);\n    channel = channel || Object.assign(CarWriter.create(cid), { size: 0 });\n    if (channel.size > 0 && channel.size + block.bytes.byteLength >= this._targetSize) {\n      channel.writer.close();\n      const {out} = channel;\n      channel = newCar(parents);\n      yield {\n        channel,\n        out\n      };\n    }\n    parents = parents.concat(block);\n    channel.size += block.bytes.byteLength;\n    channel.writer.put(block);\n    for (const [, cid] of block.links()) {\n      for await (const val of this._cars(cid, parents, channel)) {\n        channel = val.channel;\n        yield val;\n      }\n    }\n    if (!channel) {\n      throw new Error('missing CAR writer channel');\n    }\n    yield { channel };\n  }\n  static async fromIterable(iterable, targetSize, options) {\n    const reader = await CarReader.fromIterable(iterable);\n    return new TreewalkCarSplitter(reader, targetSize, options);\n  }\n  static async fromBlob(blob, targetSize, options) {\n    const buffer = await blob.arrayBuffer();\n    const reader = await CarReader.fromBytes(new Uint8Array(buffer));\n    return new TreewalkCarSplitter(reader, targetSize, options);\n  }\n}\nfunction newCar(parents) {\n  const ch = Object.assign(CarWriter.create(parents[0].cid), { size: parents.reduce((size, b) => size + b.bytes.byteLength, 0) });\n  for (const b of parents) {\n    ch.writer.put(b);\n  }\n  return ch;\n}","export async function getFilesFromPath() {\n  throw new Error('Unsupported in this environment');\n}\nexport async function* filesFromPath() {\n  throw new Error('Unsupported in this environment');\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction throttledQueue(maxRequestsPerInterval, interval, evenlySpaced) {\n    if (evenlySpaced === void 0) { evenlySpaced = false; }\n    /**\n     * If all requests should be evenly spaced, adjust to suit.\n     */\n    if (evenlySpaced) {\n        interval = interval / maxRequestsPerInterval;\n        maxRequestsPerInterval = 1;\n    }\n    var queue = [];\n    var lastIntervalStart = 0;\n    var numRequestsPerInterval = 0;\n    var timeout;\n    /**\n     * Gets called at a set interval to remove items from the queue.\n     * This is a self-adjusting timer, since the browser's setTimeout is highly inaccurate.\n     */\n    var dequeue = function () {\n        var intervalEnd = lastIntervalStart + interval;\n        var now = Date.now();\n        /**\n         * Adjust the timer if it was called too early.\n         */\n        if (now < intervalEnd) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            timeout !== undefined && clearTimeout(timeout);\n            timeout = setTimeout(dequeue, intervalEnd - now);\n            return;\n        }\n        lastIntervalStart = now;\n        numRequestsPerInterval = 0;\n        for (var _i = 0, _a = queue.splice(0, maxRequestsPerInterval); _i < _a.length; _i++) {\n            var callback = _a[_i];\n            numRequestsPerInterval++;\n            void callback();\n        }\n        if (queue.length) {\n            timeout = setTimeout(dequeue, interval);\n        }\n        else {\n            timeout = undefined;\n        }\n    };\n    return function (fn) { return new Promise(function (resolve, reject) {\n        var callback = function () { return Promise.resolve().then(fn).then(resolve).catch(reject); };\n        var now = Date.now();\n        if (timeout === undefined && (now - lastIntervalStart) > interval) {\n            lastIntervalStart = now;\n            numRequestsPerInterval = 0;\n        }\n        if (numRequestsPerInterval++ < maxRequestsPerInterval) {\n            void callback();\n        }\n        else {\n            queue.push(callback);\n            if (timeout === undefined) {\n                timeout = setTimeout(dequeue, lastIntervalStart + interval - now);\n            }\n        }\n    }); };\n}\nmodule.exports = throttledQueue;\nexports.default = throttledQueue;\n//# sourceMappingURL=throttledQueue.js.map","// TODO: Use indexedDb\nimport { MemoryBlockStore } from 'ipfs-car/blockstore/memory'\n\nexport const fetch = globalThis.fetch\nexport const Request = globalThis.Request\nexport const Response = globalThis.Response\nexport const Blob = globalThis.Blob\nexport const File = globalThis.File\nexport const Blockstore = MemoryBlockStore\n","/**\n * A client library for the https://web3.storage/ service. It provides a convenient\n * interface for working with the [Raw HTTP API](https://web3.storage/#api-docs)\n * from a web browser or [Node.js](https://nodejs.org/) and comes bundled with\n * TS for out-of-the box type inference and better IntelliSense.\n *\n * @example\n * ```js\n * import { Web3Storage, File } from 'web3.storage'\n * const client = new Web3Storage({ token: API_TOKEN })\n *\n * const cid = await client.put([new File(['hello world'], 'hello.txt', { type: 'text/plain' })])\n * ```\n * @module\n */\nimport { transform } from 'streaming-iterables'\nimport pRetry from 'p-retry'\nimport { pack } from 'ipfs-car/pack'\nimport { parseLinkHeader } from '@web3-storage/parse-link-header'\nimport { unpackStream } from 'ipfs-car/unpack'\nimport { TreewalkCarSplitter } from 'carbites/treewalk'\nimport { CarReader } from '@ipld/car'\nimport { filesFromPath, getFilesFromPath } from 'files-from-path'\nimport throttledQueue from 'throttled-queue'\nimport {\n  fetch,\n  File,\n  Blob,\n  Blockstore\n} from './platform.js'\n\nconst MAX_PUT_RETRIES = 5\nconst MAX_CONCURRENT_UPLOADS = 3\nconst DEFAULT_CHUNK_SIZE = 1024 * 1024 * 10 // chunk to ~10MB CARs\nconst MAX_BLOCK_SIZE = 1048576\nconst MAX_CHUNK_SIZE = 104857600\n// These match what is enforced server-side\nconst RATE_LIMIT_REQUESTS = 30\nconst RATE_LIMIT_PERIOD = 10 * 1000\n\n/** @typedef { import('./lib/interface.js').API } API */\n/** @typedef { import('./lib/interface.js').Status} Status */\n/** @typedef { import('./lib/interface.js').Upload} Upload */\n/** @typedef { import('./lib/interface.js').Service } Service */\n/** @typedef { import('./lib/interface.js').Web3File} Web3File */\n/** @typedef { import('./lib/interface.js').Filelike } Filelike */\n/** @typedef { import('./lib/interface.js').CIDString} CIDString */\n/** @typedef { import('./lib/interface.js').PutOptions} PutOptions */\n/** @typedef { import('./lib/interface.js').PutCarOptions} PutCarOptions */\n/** @typedef { import('./lib/interface.js').RateLimiter } RateLimiter */\n/** @typedef { import('./lib/interface.js').UnixFSEntry} UnixFSEntry */\n/** @typedef { import('./lib/interface.js').Web3Response} Web3Response */\n\n/**\n * Creates a rate limiter which limits at the same rate as is enforced\n * server-side, to allow the client to avoid exceeding the requests limit and\n * being blocked for 30 seconds.\n * @returns {RateLimiter}\n */\nexport function createRateLimiter () {\n  const throttle = throttledQueue(RATE_LIMIT_REQUESTS, RATE_LIMIT_PERIOD)\n  return () => throttle(() => {})\n}\n\n/**\n * Rate limiter used by static API if no rate limiter is passed. Note that each\n * instance of the Web3Storage class gets it's own limiter if none is passed.\n * This is because rate limits are enforced per API token.\n */\nconst globalRateLimiter = createRateLimiter()\n\n/**\n * @implements Service\n */\nclass Web3Storage {\n  /**\n   * Constructs a client bound to the given `options.token` and\n   * `options.endpoint`.\n   *\n   * @example\n   * ```js\n   * import { Web3Storage } from 'web3.storage'\n   * const client = new Web3Storage({ token: API_TOKEN })\n   * ```\n   *\n   * @param {{token: string, endpoint?:URL, rateLimiter?: RateLimiter}} options\n   */\n  constructor ({\n    token,\n    endpoint = new URL('https://api.web3.storage'),\n    rateLimiter\n  }) {\n    /**\n     * Authorization token.\n     *\n     * @readonly\n     */\n    this.token = token\n    /**\n     * Service API endpoint `URL`.\n     * @readonly\n     */\n    this.endpoint = endpoint\n    /**\n     * @readonly\n     */\n    this.rateLimiter = rateLimiter || createRateLimiter()\n  }\n\n  /**\n   * @hidden\n   * @param {string} token\n   * @returns {Record<string, string>}\n   */\n  static headers (token) {\n    if (!token) throw new Error('missing token')\n    return {\n      Authorization: `Bearer ${token}`,\n      'X-Client': 'web3.storage/js'\n    }\n  }\n\n  /**\n   * @param {Service} service\n   * @param {Iterable<Filelike>} files\n   * @param {PutOptions} [options]\n   * @returns {Promise<CIDString>}\n   */\n  static async put ({ endpoint, token, rateLimiter = globalRateLimiter }, files, {\n    onRootCidReady,\n    onStoredChunk,\n    maxRetries = MAX_PUT_RETRIES,\n    maxChunkSize = DEFAULT_CHUNK_SIZE,\n    wrapWithDirectory = true,\n    name\n  } = {}) {\n    if (maxChunkSize >= MAX_CHUNK_SIZE || maxChunkSize < MAX_BLOCK_SIZE) {\n      throw new Error('maximum chunk size must be less than 100MiB and greater than or equal to 1MB')\n    }\n    const blockstore = new Blockstore()\n    try {\n      const { out, root } = await pack({\n        input: Array.from(files).map(toImportCandidate),\n        blockstore,\n        wrapWithDirectory,\n        maxChunkSize: MAX_BLOCK_SIZE,\n        maxChildrenPerNode: 1024\n      })\n      onRootCidReady && onRootCidReady(root.toString())\n      const car = await CarReader.fromIterable(out)\n      return await Web3Storage.putCar({ endpoint, token, rateLimiter }, car, { onStoredChunk, maxRetries, maxChunkSize, name })\n    } finally {\n      await blockstore.close()\n    }\n  }\n\n  /**\n   * @param {Service} service\n   * @param {import('@ipld/car/api').CarReader} car\n   * @param {PutCarOptions} [options]\n   * @returns {Promise<CIDString>}\n   */\n  static async putCar ({ endpoint, token, rateLimiter = globalRateLimiter }, car, {\n    name,\n    onStoredChunk,\n    maxRetries = MAX_PUT_RETRIES,\n    maxChunkSize = DEFAULT_CHUNK_SIZE,\n    decoders\n  } = {}) {\n    if (maxChunkSize >= MAX_CHUNK_SIZE || maxChunkSize < MAX_BLOCK_SIZE) {\n      throw new Error('maximum chunk size must be less than 100MiB and greater than or equal to 1MB')\n    }\n    const targetSize = maxChunkSize\n    const url = new URL('car', endpoint)\n    let headers = Web3Storage.headers(token)\n\n    if (name) {\n      headers = { ...headers, 'X-Name': encodeURIComponent(name) }\n    }\n\n    const roots = await car.getRoots()\n    if (roots[0] == null) {\n      throw new Error('missing root CID')\n    }\n    if (roots.length > 1) {\n      throw new Error('too many roots')\n    }\n\n    const carRoot = roots[0].toString()\n    const splitter = new TreewalkCarSplitter(car, targetSize, { decoders })\n\n    /**\n     * @param {AsyncIterable<Uint8Array>} car\n     * @returns {Promise<CIDString>}\n     */\n    const onCarChunk = async car => {\n      const carParts = []\n      for await (const part of car) {\n        carParts.push(part)\n      }\n\n      const carFile = new Blob(carParts, { type: 'application/vnd.ipld.car' })\n      const res = await pRetry(\n        async () => {\n          await rateLimiter()\n          const request = await fetch(url.toString(), {\n            method: 'POST',\n            headers,\n            body: carFile\n          })\n          /* c8 ignore next 3 */\n          if (request.status === 429) {\n            throw new Error('rate limited')\n          }\n          const res = await request.json()\n          if (!request.ok) {\n            throw new Error(res.message)\n          }\n\n          if (res.cid !== carRoot) {\n            throw new Error(`root CID mismatch, expected: ${carRoot}, received: ${res.cid}`)\n          }\n          return res.cid\n        },\n        { retries: maxRetries }\n      )\n\n      onStoredChunk && onStoredChunk(carFile.size)\n      return res\n    }\n\n    const upload = transform(MAX_CONCURRENT_UPLOADS, onCarChunk)\n    for await (const _ of upload(splitter.cars())) {} // eslint-disable-line\n    return carRoot\n  }\n\n  /**\n   * @param {Service} service\n   * @param {CIDString} cid\n   * @returns {Promise<Web3Response | null>}\n   */\n  static async get ({ endpoint, token, rateLimiter = globalRateLimiter }, cid) {\n    const url = new URL(`car/${cid}`, endpoint)\n    await rateLimiter()\n    const res = await fetch(url.toString(), {\n      method: 'GET',\n      headers: Web3Storage.headers(token)\n    })\n    /* c8 ignore next 3 */\n    if (res.status === 429) {\n      throw new Error('rate limited')\n    }\n    return toWeb3Response(res)\n  }\n\n  /**\n   * @param {Service} service\n   * @param {CIDString} cid\n   * @returns {Promise<CIDString>}\n   */\n  /* c8 ignore next 4 */\n  static async delete ({ endpoint, token, rateLimiter = globalRateLimiter }, cid) {\n    console.log('Not deleting', cid, endpoint, token, rateLimiter)\n    throw Error('.delete not implemented yet')\n  }\n\n  /**\n   * @param {Service} service\n   * @param {CIDString} cid\n   * @returns {Promise<Status | undefined>}\n   */\n  static async status ({ endpoint, token, rateLimiter = globalRateLimiter }, cid) {\n    const url = new URL(`status/${cid}`, endpoint)\n    await rateLimiter()\n    const res = await fetch(url.toString(), {\n      method: 'GET',\n      headers: Web3Storage.headers(token)\n    })\n    /* c8 ignore next 3 */\n    if (res.status === 429) {\n      throw new Error('rate limited')\n    }\n    if (res.status === 404) {\n      return undefined\n    }\n    if (!res.ok) {\n      throw new Error(res.statusText)\n    }\n    return res.json()\n  }\n\n  /**\n   * @param {Service} service\n   * @param {object} [opts]\n   * @param {string} [opts.before] list items uploaded before this ISO 8601 date string\n   * @param {number} [opts.maxResults] maximum number of results to return\n   * @returns {AsyncIterable<Upload>}\n   */\n  static async * list (service, { before = new Date().toISOString(), maxResults = Infinity } = {}) {\n  /**\n   * @param {Service} service\n   * @param {{before: string, size: number}} opts\n   * @returns {Promise<Response>}\n   */\n    async function listPage ({ endpoint, token, rateLimiter = globalRateLimiter }, { before, size }) {\n      const search = new URLSearchParams({ before, size: size.toString() })\n      const url = new URL(`user/uploads?${search}`, endpoint)\n      await rateLimiter()\n      return fetch(url.toString(), {\n        method: 'GET',\n        headers: {\n          ...Web3Storage.headers(token),\n          'Access-Control-Request-Headers': 'Link'\n        }\n      })\n    }\n    let count = 0\n    const size = maxResults > 100 ? 100 : maxResults\n    for await (const res of paginator(listPage, service, { before, size })) {\n      if (!res.ok) {\n        /* c8 ignore next 3 */\n        if (res.status === 429) {\n          throw new Error('rate limited')\n        }\n\n        /* c8 ignore next 2 */\n        const errorMessage = await res.json()\n        throw new Error(`${res.status} ${res.statusText} ${errorMessage ? '- ' + errorMessage.message : ''}`)\n      }\n      const page = await res.json()\n      for (const upload of page) {\n        if (++count > maxResults) {\n          return\n        }\n        yield upload\n      }\n    }\n  }\n\n  // Just a sugar so you don't have to pass around endpoint and token around.\n\n  /**\n   * Uploads files to web3.storage. Files are hashed in the client and uploaded as a single\n   * [Content Addressed Archive(CAR)](https://github.com/ipld/specs/blob/master/block-layer/content-addressable-archives.md).\n   * Takes a [Blob](https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob)\n   *\n   * Returns the corresponding Content Identifier (CID).\n   *\n   * @example\n   * ```js\n   * const file = new File(['hello world'], 'hello.txt', { type: 'text/plain' })\n   * const cid = await client.put([file])\n   * ```\n   * @param {Iterable<Filelike>} files\n   * @param {PutOptions} [options]\n   */\n  put (files, options) {\n    return Web3Storage.put(this, files, options)\n  }\n\n  /**\n   * Uploads a CAR ([Content Addressed Archive](https://github.com/ipld/specs/blob/master/block-layer/content-addressable-archives.md)) file to web3.storage.\n   * Takes a CarReader interface from @ipld/car\n   *\n   * Returns the corresponding Content Identifier (CID).\n   *\n   * @example\n   * ```js\n   * import fs from 'fs'\n   * import { Readable } from 'stream'\n   * import { CarReader, CarWriter } from '@ipld/car'\n   * import * as raw from 'multiformats/codecs/raw'\n   * import { CID } from 'multiformats/cid'\n   * import { sha256 } from 'multiformats/hashes/sha2'\n   *\n   * async function getCar() {\n   *    const bytes = new TextEncoder().encode('random meaningless bytes')\n   *    const hash = await sha256.digest(raw.encode(bytes))\n   *    const cid = CID.create(1, raw.code, hash)\n   *\n   *    // create the writer and set the header with a single root\n   *    const { writer, out } = await CarWriter.create([cid])\n   *    Readable.from(out).pipe(fs.createWriteStream('example.car'))\n\n   *    // store a new block, creates a new file entry in the CAR archive\n   *    await writer.put({ cid, bytes })\n   *    await writer.close()\n\n   *    const inStream = fs.createReadStream('example.car')\n   *    // read and parse the entire stream in one go, this will cache the contents of\n   *    // the car in memory so is not suitable for large files.\n   *    const reader = await CarReader.fromIterable(inStream)\n   *    return reader\n   * }\n   *\n   * const car = await getCar()\n   * const cid = await client.putCar(car)\n   * ```\n   * @param {import('@ipld/car/api').CarReader} car\n   * @param {PutCarOptions} [options]\n   */\n  putCar (car, options) {\n    return Web3Storage.putCar(this, car, options)\n  }\n\n  /**\n   * Fetch the Content Addressed Archive by its root CID.\n   * @param {CIDString} cid\n   */\n  get (cid) {\n    return Web3Storage.get(this, cid)\n  }\n\n  /**\n   * @param {CIDString} cid\n   */\n  /* c8 ignore next 3 */\n  delete (cid) {\n    return Web3Storage.delete(this, cid)\n  }\n\n  /**\n   * Fetch info on Filecoin deals and IPFS pins that a given CID is replicated in.\n   * @param {CIDString} cid\n   */\n  status (cid) {\n    return Web3Storage.status(this, cid)\n  }\n\n  /**\n   * Find all uploads for this account. Use a `for await...of` loop to fetch them all.\n   * @example\n   * Fetch all the uploads\n   * ```js\n   * const uploads = []\n   * for await (const item of client.list()) {\n   *    uploads.push(item)\n   * }\n   * ```\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n   * @param {object} [opts]\n   * @param {string} [opts.before] list items uploaded before this ISO 8601 date string\n   * @param {number} [opts.maxResults] maximum number of results to return\n   * @returns {AsyncIterable<Upload>}\n   */\n  list (opts) {\n    return Web3Storage.list(this, opts)\n  }\n}\n\n/**\n * Map a UnixFSEntry to a File with a cid property\n * @param {UnixFSEntry} entry\n * @returns {Promise<Web3File>}\n */\nasync function toWeb3File ({ content, path, cid }) {\n  const chunks = []\n  for await (const chunk of content()) {\n    chunks.push(chunk)\n  }\n  const file = new File(chunks, toFilenameWithPath(path))\n  return Object.assign(file, { cid: cid.toString() })\n}\n\n/**\n * Trim the root cid from the path if there is anyting after it.\n * bafy...ic2q/path/to/pinpie.jpg => path/to/pinpie.jpg\n *         bafy...ic2q/pinpie.jpg => pinpie.jpg\n *                    bafk...52zy => bafk...52zy\n * @param {string} unixFsPath\n * @returns {string}\n */\nfunction toFilenameWithPath (unixFsPath) {\n  const slashIndex = unixFsPath.indexOf('/')\n  return slashIndex === -1 ? unixFsPath : unixFsPath.substring(slashIndex + 1)\n}\n\n/**\n * Add car unpacking smarts to the response object,\n * @param {Response} res\n * @returns {Web3Response}\n */\nfunction toWeb3Response (res) {\n  const response = Object.assign(res, {\n    unixFsIterator: async function * () {\n      if (!res.ok) {\n        throw new Error(`Response was not ok: ${res.status} ${res.statusText} - Check for { \"ok\": false } on the Response object before calling .unixFsIterator`)\n      }\n      /* c8 ignore next 3 */\n      if (!res.body) {\n        throw new Error('No body on response')\n      }\n      const blockstore = new Blockstore()\n      try {\n        for await (const entry of unpackStream(res.body, { blockstore })) {\n          yield entry\n        }\n      } finally {\n        await blockstore.close()\n      }\n    },\n    files: async () => {\n      if (!res.ok) {\n        throw new Error(`Response was not ok: ${res.status} ${res.statusText} - Check for { \"ok\": false } on the Response object before calling .files`)\n      }\n      const files = []\n      // @ts-ignore we're using the enriched response here\n      for await (const entry of response.unixFsIterator()) {\n        if (entry.type === 'directory') {\n          continue\n        }\n        const file = await toWeb3File(entry)\n        files.push(file)\n      }\n      return files\n    }\n  })\n  return response\n}\n\n/**\n * Convert the passed file to an \"import candidate\" - an object suitable for\n * passing to the ipfs-unixfs-importer. Note: content is an accessor so that\n * the stream is only created when needed.\n *\n * @param {Filelike} file\n */\nfunction toImportCandidate (file) {\n  /** @type {ReadableStream} */\n  let stream\n  return {\n    path: file.name,\n    get content () {\n      stream = stream || file.stream()\n      return stream\n    }\n  }\n}\n\n/**\n * Follow Link headers on a Response, to fetch all the things.\n *\n * @param {(service: Service, opts: any) => Promise<Response>} fn\n * @param {Service} service\n * @param {{}} opts\n */\nasync function * paginator (fn, service, opts) {\n  let res = await fn(service, opts)\n  yield res\n  let link = parseLinkHeader(res.headers.get('Link') || '')\n  // @ts-ignore\n  while (link && link.next) {\n    // @ts-ignore\n    res = await fn(service, link.next)\n    yield res\n    link = parseLinkHeader(res.headers.get('Link') || '')\n  }\n}\n\nexport { Web3Storage, File, Blob, filesFromPath, getFilesFromPath }\n\n/**\n * Just to verify API compatibility.\n * TODO: convert lib to a regular class that can be type checked.\n * @type {API}\n */\nconst api = Web3Storage\nvoid api // eslint-disable-line no-void\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["getIterator","iterable","next","Symbol","iterator","asyncIterator","TypeError","defer","reject","resolve","promise","Promise","resolveFunc","rejectFunc","_transform","concurrency","func","resultQueue","readQueue","ended","reading","inflightCount","lastError","fulfillReadQueue","length","shift","done","value","undefined","async","fillQueue","itrValue","push","error","mapAndQueue","asyncIterableIterator","deferred","transform","curriedFunc","curriedIterable","RetryOperation","timeouts","options","forever","this","_originalTimeouts","JSON","parse","stringify","_timeouts","_options","_maxRetryTime","maxRetryTime","Infinity","_fn","_errors","_attempts","_operationTimeout","_operationTimeoutCb","_timeout","_operationStart","_timer","_cachedTimeouts","slice","retry_operation","prototype","reset","stop","clearTimeout","retry","err","currentTime","Date","getTime","unshift","Error","timeout","splice","self","setTimeout","unref","attempt","fn","timeoutOps","cb","try","console","log","start","errors","attempts","mainError","counts","mainErrorCount","i","message","count","require$$0","exports","retries","Array","concat","opts","factor","minTimeout","maxTimeout","randomize","key","createTimeout","sort","a","b","random","Math","round","max","pow","min","obj","methods","method","original","op","operation","args","call","arguments","callback","pop","apply","bind","networkErrorMsgs","AbortError","constructor","super","originalError","stack","name","decorateErrorWithCounts","attemptNumber","retriesLeft","isNetworkError","errorMessage","includes","pRetry","input","onFailedAttempt","pRetryModule","last","source","res","entry","itLast","rawPipe","fns","isIterable","isDuplex","sink","duplexPipelineFn","duplex","pipe","itPipeModule","encode_1","encode","MSB","REST","MSBALL","INT","num","out","offset","Number","MAX_SAFE_INTEGER","bytes","RangeError","oldOffset","decode","read","buf","counter","l","N1","N2","N3","N4","N5","N6","N7","N8","N9","varint","require$$1","encodingLength","require$$2","MSB$1","REST$1","_brrp_varint","data","encodeTo","int","target","empty","Uint8Array","fromHex","hex","hexes","match","map","parseInt","equals","aa","bb","byteLength","ii","coerce","o","ArrayBuffer","isView","buffer","byteOffset","fromString","str","TextEncoder","toString","TextDecoder","create","code","digest","size","sizeOffset","varint.encodingLength","digestOffset","varint.encodeTo","set","Digest","multihash","varint.decode","subarray","equalBytes","base","ALPHABET","BASE_MAP","j","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","carry","it3","it4","vch","isArray","from","pbegin","pend","b58","it1","it2","repeat","string","src","_brrp__multiformats_scope_baseX","Encoder","prefix","baseEncode","Decoder","baseDecode","text","or","decoder","ComposedDecoder","decoders","Object","keys","left","right","Codec","encoder","baseX","alphabet","basex","bitsPerChar","codes","end","bits","written","SyntaxError","pad","mask","rfc4648","base58btc","base58flickr","base32","base32upper","base32pad","base32padupper","base32hex","base32hexupper","base32hexpad","base32hexpadupper","base32z","CID","version","asCID","_baseCache","Map","defineProperties","hidden","readonly","toV0","DAG_PB_CODE","SHA_256_CODE","createV0","toV1","Digest.create","createV1","other","Digest.equals","toStringV0","toStringV1","toJSON","hash","toStringTag","for","static","deprecate","IS_CID_DEPRECATION","cidSymbol","toBaseEncodedString","codec","multibaseName","encodeCID","Digest.decode","cid","remainder","decodeFirst","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","digestBytes","digestSize","Digest.Digest","multihashCode","initialBytes","parseCIDtoBytes","cache","get","codeOffset","hashOffset","writable","configurable","enumerable","range","test","warn","typeofs","objectTypeNames","is","typeOf","isBuffer","objectType","getObjectType","objectTypeName","Type","major","terminal","majorEncoded","compare","typ","uint","negint","array","tag","float","false","true","null","break","Token","type","encodedLength","encodedBytes","byteValue","useBuffer","globalThis","process","browser","Buffer","textDecoder","textEncoder","asU8A","utf8Slice","utf8ToBytes","fromArray","arr","chunks","c","off","alloc","allocUnsafe","b1","b2","units","codePoint","leadSurrogate","firstByte","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","len","String","fromCharCode","defaultChunkSize","Bl","chunkSize","cursor","maxCursor","_initReuseChunk","topChunk","chunkPos","toBytes","byts","chunk","decodeErrPrefix","encodeErrPrefix","assertEnoughData","pos","need","uintBoundaries","BigInt","readUint8","strict","readUint16","readUint32","readUint64","hi","lo","allowBigInt","decodeUint8","_minor","decodeUint16","decodeUint32","decodeUint64","encodeUint","token","encodeUintValue","nuint","buint","decodeNegint8","uint.readUint8","decodeNegint16","uint.readUint16","decodeNegint32","uint.readUint32","encodedSize","compareTokens","tok1","tok2","neg1b","pos1b","decodeNegint64","uint.readUint64","MIN_SAFE_INTEGER","encodeNegint","unsigned","uint.encodeUintValue","toToken","decodeBytesCompact","minor","decodeBytes8","decodeBytes16","decodeBytes32","decodeBytes64","tokenBytes","encodeBytes","compareBytes","totLength","tok","retainStringBytes","decodeStringCompact","decodeString8","decodeString16","decodeString32","decodeString64","uint.uintBoundaries","encodeString","_data","_pos","decodeArrayCompact","decodeArray8","decodeArray16","decodeArray32","decodeArray64","decodeArrayIndefinite","allowIndefinite","encodeArray","decodeMapCompact","decodeMap8","decodeMap16","decodeMap32","decodeMap64","decodeMapIndefinite","encodeMap","decodeTagCompact","decodeTag8","decodeTag16","decodeTag32","decodeTag64","encodeTag","uint.encodeUint","MINOR_FALSE","MINOR_TRUE","MINOR_NULL","MINOR_UNDEFINED","decodeUndefined","allowUndefined","coerceUndefinedToNull","decodeBreak","createToken","allowNaN","isNaN","allowInfinity","decodeFloat16","readFloat16","decodeFloat32","readFloat32","decodeFloat64","readFloat64","encodeFloat","decoded","success","float64","encodeFloat16","ui8a","encodeFloat32","encodeFloat64","dataView","DataView","inp","setUint16","setFloat32","valu32","getUint32","exponent","mantissa","logicalExponent","half","NaN","exp","mant","val","getFloat32","setFloat64","getFloat64","invalidMinor","errorer","msg","jump","uint.decodeUint8","uint.decodeUint16","uint.decodeUint32","uint.decodeUint64","negint.decodeNegint8","negint.decodeNegint16","negint.decodeNegint32","negint.decodeNegint64","bytes.decodeBytesCompact","bytes.decodeBytes8","bytes.decodeBytes16","bytes.decodeBytes32","bytes.decodeBytes64","string.decodeStringCompact","string.decodeString8","string.decodeString16","string.decodeString32","string.decodeString64","array.decodeArrayCompact","array.decodeArray8","array.decodeArray16","array.decodeArray32","array.decodeArray64","array.decodeArrayIndefinite","map.decodeMapCompact","map.decodeMap8","map.decodeMap16","map.decodeMap32","map.decodeMap64","map.decodeMapIndefinite","tag.decodeTagCompact","tag.decodeTag8","tag.decodeTag16","tag.decodeTag32","tag.decodeTag64","float.decodeUndefined","float.decodeFloat16","float.decodeFloat32","float.decodeFloat64","float.decodeBreak","quick","quickEncodeToken","defaultEncodeOptions","mapSorter","cborEncoders","Ref","parent","p","simpleTokens","emptyArray","emptyMap","typeEncoders","number","_typ","_refStack","isInteger","isSafeInteger","bigint","boolean","_obj","refStack","addBreakTokens","createCheck","entries","e","objectToTokens","isMap","sortMapEntries","split","customTypeEncoder","tokens","typeEncoder","e1","e2","keyToken1","keyToken2","tcmp","tokensToEncoded","encoders","encodeCustom","quickBytes","assign","defaultDecodeOptions","Tokeniser","byt","padStart","DONE","BREAK","tokenToArray","tokeniser","tokensToObject","tokenToMap","useMaps","m","tags","tagged","tokenizer","CID_CBOR_TAG","cidEncoder","cborg.Token","cborg.Type","undefinedEncoder","numberEncoder","encodeOptions","cidDecoder","decodeOptions","node","cborg.encode","cborg.decode","CIDV0_BYTES","SHA2_256","LENGTH","DAG_PB","readVarint","reader","upTo","seek","readHeader","header","exactly","block","decodeDagCbor","roots","filter","readMultihash","codeLength","mhLength","readCid","first","readBlockHead","blockLength","readBlock","readBlockIndex","index","blockOffset","createDecoder","headerPromise","bytesReader","chunkReader","readChunk","have","currentChunk","bufa","reduce","asyncIterableReader","asyncIterable","CarReader","blocks","_version","_roots","_blocks","_keys","indexOf","decodeReaderComplete","CarIteratorBase","_iterable","_decoded","CarBlockIterator","fromBytes","fromIterable","decodeIterator","createHeader","headerBytes","dagCborEncode","varintBytes","createEncoder","writer","write","noop","chunkQueue","drainer","drainerResolver","outWait","outWaitResolver","makeDrainer","CarWriter","_encoder","_mutex","setRoots","_ended","then","writeBlock","close","toRoots","encodeWriter","CarWriterOut","newHeader","_iterator","_iterating","iw","iteratorChannel","root","_root","batch","things","thing","itBatch","parallelBatch","tasks","ok","result","itParallelBatch","isPlainObj","getPrototypeOf","isOptionObject","hasOwnProperty","propertyIsEnumerable","defineProperty","object","defaultMergeOptions","concatArrays","ignoreUndefined","getEnumerableOwnPropertyKeys","getOwnPropertySymbols","symbols","symbol","clone","cloneArray","cloneOptionObject","forEach","mergeKeys","merged","config","merge","resultIndex","indices","k","mergeOptions","_","option","Hasher","sha","crypto","subtle","sha256","sha512","library","x86","x64","inputValidation","_validBytes","_x86Multiply","n","_x86Rotl","_x86Fmix","h","_x64Add","_x64Multiply","_x64Rotl","_x64LeftShift","_x64Xor","_x64Fmix","hash32","seed","h1","k1","c1","c2","hash128","h2","h3","h4","k2","k3","k4","c3","c4","module","murmurhash3jsRevisited","fromNumberTo32BitBuf","mur","murmur3128","bytes.fromHex","hamtHashFn","reverse","defaultOptions","chunker","strategy","rawLeaves","onlyHash","reduceSingleLeafToSelf","hasher","leafType","cidVersion","progress","shardSplitThreshold","fileImportConcurrency","blockWriteConcurrency","minChunkSize","maxChunkSize","avgChunkSize","window","polynomial","maxChildrenPerNode","layerRepeat","wrapWithDirectory","recursive","hamtHashCode","hamtBucketBits","defaults","props","createError","ErrClass","errCode","aspromise","asPromise","ctx","params","pending","base64","ceil","b64","s64","t","parts","join","invalidEncoding","eventemitter","EventEmitter","_listeners","on","evt","listeners","emit","factory","Float32Array","f32","f8b","le","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","floor","LN2","readFloat_ieee754","readUint","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","inquire_1","inquire","moduleName","mod","eval","replace","utf8","pool_1","pool","SIZE","MAX","slab","longbits","LongBits","util","zero","toNumber","zzEncode","zzDecode","zeroHash","fromNumber","isString","Long","low","high","toLong","Boolean","fromHash","toHash","part0","part1","part2","dst","ifNotSet","newError","CustomError","properties","captureStackTrace","require$$3","require$$4","require$$5","require$$6","require$$7","isNode","global","versions","freeze","emptyObject","isFinite","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","lcFirst","toLowerCase","substring","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","json","_configure","encoding","Writer","BufferWriter","Op","State","head","tail","states","writeByte","writeVarint32","VarintOp","writeVarint64","writeFixed32","_push","uint32","int32","sint32","uint64","int64","sint64","bool","fixed32","sfixed32","fixed64","sfixed64","double","writeBytes","fork","ldelim","finish","BufferWriter_","writer_buffer","writeStringBuffer","writeBytesBuffer","copy","Reader","BufferReader","indexOutOfRange","writeLength","create_array","readLongVarint","readFixed32_end","readFixed64","_slice","skip","skipType","wireType","BufferReader_","reader_buffer","service","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","requestCtor","responseCtor","request","response","endedByRPC","protobuf","configure","build","rpc","minimal","$Reader","$protobuf","$Writer","$util","$root","Data","blocksizes","ks","filesize","hashType","fanout","mode","mtime","w","UnixTime","r","instance","fromObject","d","fromValue","toObject","arrays","DataType","valuesById","values","Seconds","FractionalNanoseconds","Metadata","MimeType","PBData","Pb.Data","types","dirTypes","DEFAULT_FILE_MODE","DEFAULT_DIRECTORY_MODE","parseMode","parseMtime","secs","nsecs","ms","errcode","UnixFS","marshaled","objects","blockSizes","_originalMode","_mode","isDirectory","parsedMode","addBlockSize","removeBlockSize","fileSize","sum","marshal","Raw","Directory","File","Symlink","HAMTShard","parsed","pbData","decodeVarint","v","decodeBytes","byteLen","postOffset","decodeKey","wire","decodeLink","link","fieldNum","Hash","Name","Tsize","decodeNode","links","linksBeforeData","Links","maxInt32","maxUInt32","encodeLink","encodeVarint","nameBytes","encodeNode","sizeNode","sizeLink","sov","len64","len8tab","pbNodeProperties","pbLinkProperties","linkComparator","abuf","bbuf","y","hasOnlyProperties","some","asLink","pbl","prepare","pbn","validate","createNode","createLink","persist","blockstore","dagPb","put","signal","dirBuilder","item","unixfs","path","all","itAll","flat","balanced","reduceToParents","chunked","trickleStream","Root","iteration","maxDepth","subTree","layer","isFull","addChild","SubTree","append","currentDepth","children","depth","maxChildren","_addNextNodeToParent","distantRelative","_findParent","nextNode","_reduce","child","bufferImporter","file","content","raw","dagPb.encode","dagBuilders","dagFlat","dagBalanced","trickle","dagTrickle","buildFileBatch","previous","bufferImporterFn","single","leaves","leaf","rawCodec.code","f","acc","curr","fileBuilder","dagBuilder","toByteArray","fromByteArray","lookup","revLookup","Arr","getLens","validLen","lens","placeHoldersLen","_byteLength","tmp","curByte","tripletToBase64","encodeChunk","uint8","output","extraBytes","maxChunkLength","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","rt","abs","ieee754","customInspectSymbol","K_MAX_LENGTH","createBuffer","setPrototypeOf","arg","encodingOrOffset","isEncoding","actual","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","checked","numberIsNaN","toPrimitive","assertSize","mustMatch","loweredCase","base64ToBytes","slowToString","hexSlice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","substr","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","poolSize","fill","allocUnsafeSlow","_isBuffer","list","swap16","swap32","swap64","toLocaleString","inspect","INSPECT_MAX_BYTES","trim","thisStart","thisEnd","thisCopy","targetCopy","_arr","ret","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUIntLE","mul","readUIntBE","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","writeUIntLE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","E","sym","getMessage","Base","addNumericalSeparator","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","INVALID_BASE64_RE","base64clean","table","i16","BufferBigIntNotDefined","BufferList","_init","_bufs","_new","_offset","tot","_t","_reverseOffset","blOffset","bufferId","dstStart","srcStart","srcEnd","bufoff","shallowSlice","startOffset","endOffset","buffers","consume","trunc","duplicate","_appendBuffer","_isBufferList","search","blIndex","buffOffset","buff","nativeSearchResult","revOffset","_match","searchOffset","isBufferList","BufferList_1","Rabin","asModule","windowSize","rabin","fingerprint","__retain","__release","__allocArray","__getInt32Array","Int32Array_ID","Uint8Array_ID","lengthsPtr","Int32Array","pointer","processed","ID_OFFSET","SIZE_OFFSET","ARRAYBUFFER_ID","STRING_ID","ARRAYBUFFERVIEW","ARRAY","VAL_ALIGN_OFFSET","VAL_SIGNED","VAL_FLOAT","VAL_MANAGED","ARRAYBUFFERVIEW_BUFFER_OFFSET","ARRAYBUFFERVIEW_DATASTART_OFFSET","ARRAYBUFFERVIEW_DATALENGTH_OFFSET","ARRAYBUFFERVIEW_SIZE","ARRAY_LENGTH_OFFSET","ARRAY_SIZE","BIGINT","BigUint64Array","THIS","CHUNKSIZE","getStringImpl","ptr","U32","Uint32Array","U16","Uint16Array","preInstantiate","imports","baseModule","getString","memory","env","abort","mesg","line","colm","trace","postInstantiate","rawExports","retain","rttiBase","getInfo","id","getBase","getValueAlign","info","clz32","getView","alignLog2","signed","Int8Array","Int16Array","BigInt64Array","__getArrayView","align","getTypedArray","getTypedArrayView","bufPtr","__allocString","__getString","view","__getArray","__getArrayBuffer","__getInt8Array","__getInt8ArrayView","__getUint8Array","__getUint8ArrayView","__getUint8ClampedArray","Uint8ClampedArray","__getUint8ClampedArrayView","__getInt16Array","__getInt16ArrayView","__getUint16Array","__getUint16ArrayView","__getInt32ArrayView","__getUint32Array","__getUint32ArrayView","__getInt64Array","__getInt64ArrayView","__getUint64Array","__getUint64ArrayView","__getFloat32Array","__getFloat32ArrayView","__getFloat64Array","__getFloat64ArrayView","__instanceof","baseId","demangle","isResponse","Response","instantiate","instantiateStreaming","WebAssembly","Module","compile","instantiateSync","Instance","arrayBuffer","setArgumentsLength","internalName","elem","part","className","classElem","ctor","wrap","thisValue","getOwnPropertyNames","getOwnPropertyDescriptor","getter","setter","loadWebAssembly","imp","supported","wasm","Blob","rabinWasm","getRabin","avg","compiled","rabinChunker","sizepow","log2","sizes","fixedSizeChunker","bl","currentLength","emitted","newBl","identity","base2","base8","base10","base16","base16upper","base36","base36upper","base64pad","base64url","base64urlpad","bases","identityBase","base58","createCodec","ascii","BASES","latin1","binary","validateChunks","uint8ArrayFromString","isAsyncIterable","contentAsAsyncIterable","chunkValidator","fixedSize","Dir","dirty","parentKey","DirFlat","_children","childCount","directChildrenCount","onlyChild","flush","BITS_PER_BYTE","sparseArray","_bitArrays","_length","_changedLength","_changedData","_internalPositionFor","_unsetInternalPos","_unsetBit","needsSort","_setBit","_setInternalPos","unset","_sortData","mapped","reducer","initialValue","find","finder","noCreate","bytePos","_bytePosFor","byte","bitPos","popCountReduce","popCount","targetLength","randomIndex","sortInternal","bitField","newByte","pendingBitsForResultingByte","pendingBitsForNewByte","resultingByte","usingBits","compactArray","valueOnly","_v","SparseArray","Bucket","posAtParent","_popCount","_parent","_posAtParent","place","_findNewBucketAndPos","bucket","_putAt","_findChild","_findPlace","_at","_delAt","leafCount","childrenCount","eachLeafSeries","serialize","asyncTransform","asyncMap","asyncReduce","asyncTransformBucket","mapNode","reduceNodes","prettyPrint","tableSize","hashValue","take","existingChild","_putObjectAt","newPlace","_level","exists","untake","nodes","mappedChildren","START_MASKS","STOP_MASKS","consumableBuffer","_value","_currentBytePos","_currentBitPos","availableBits","totalBits","pendingBits","_haveBits","taking","byteBitsToInt","maskFor","ConsumableBuffer","uint8ArrayConcat","wrapHash","hashFn","InfiniteHash","_hashFn","_depth","_availableBits","_currentBufferIndex","_buffers","_produceMoreBits","available","availableForUntake","consumableHashModule","createHAMT","bucketOptions","DirSharded","_bucket","shardRoot","childrenSize","labelPrefix","toUpperCase","shard","subShard","flushedDir","label","flatToShard","threshold","newDir","convertToShard","oldDir","eachChildSeries","toPathComponents","addToTree","tree","pathElems","lastIndex","currentPath","pathElem","flushAndYield","treeBuilder","unwrapped","importer","candidates","dagBuilderFn","treeBuilderFn","browserReadableStreamToIt","stream","getReader","preventCancel","cancel","releaseLock","browserReadablestreamToIt","blobToIt","blob","body","blobToIt_1","peekableIterator","queue","peek","itPeekable","itMap","isBytes","isBlob","isFileObject","isReadableStream","toAsyncIterable","normaliseContent","browserStreamToIt","peekable","normaliseCandidateSingle","toFileObject","normaliseInput","normaliseCandidateMultiple","_readableState","isSingle","getNormaliser","normaliseInputSingle","normaliseInputMultiple","notFoundError","abortedError","drain","itDrain","itFilter","items","itTake","sortAll","sorter","BaseBlockstore","open","has","delete","puts","dels","commit","putMany","deleteMany","q","query","it","_all","startsWith","filters","orders","queryKeys","_allKeys","MemoryBlockStore","store","cidStr","clear","unixfsImporterOptionsDefault","pack","userBlockstore","rootEntry","carOut","carOutIter","writingPromise","writeAll","MAX_HEADER_LENGTH","THROW_ON_MAX_HEADER_LENGTH_EXCEEDED","hasRel","rel","intoRels","createObjects","parseLink","linkUrl","qry","url","URL","searchParams","checkHeader","linkHeader","maxHeaderLength","throwOnMaxHeaderLengthExceeded","parseLinkHeader","addLinksToHamtBucket","rootBucket","toPrefix","position","toBucketPath","findShardCid","context","hamtDepth","lastBucket","bucketPath","entryPrefix","entryName","extractDataFromBlock","blockStart","requestedStart","requestedEnd","blockEnd","validateOffsetAndLength","emitBytes","streamPosition","unmarshal","childStart","childLink","childEnd","dagPb.code","dagPb.decode","raw.code","dagCbor.code","dagCbor.decode","fileContent","directoryContent","hamtShardedDirectoryContent","listDirectory","findLinkCid","contentExporters","contentFile","directory","contentDirectory","contentHamtShardedDirectory","metadata","symlink","unixFsResolver","toResolve","linkCid","nextName","rawContent","subObject","subPath","subObjectCid","mh.decode","resolvers","code$5","dagPbResolver","code$4","rawResolver","code$1","dagCborResolver","identifyResolver","resolver","cidAndRest","walkPath","entryPath","startingDepth","exporter","recurse","VerifyingGetOnlyBlockStore","isValid","cr","unpackStream","readable","carIterator","asAsyncIterable","verifyingBlockStore","fromBlockstore","getRoots","unixFsExporter","toIterable","element","elementPath","Block","asBlock","TreewalkCarSplitter","targetSize","_reader","_targetSize","_decoders","pb","cbor","channel","_cars","rawBlock","parents","_get","newCar","ch","getFilesFromPath","filesFromPath","throttledQueue","maxRequestsPerInterval","interval","evenlySpaced","lastIntervalStart","numRequestsPerInterval","dequeue","intervalEnd","now","_i","_a","catch","fetch","Blockstore","MAX_PUT_RETRIES","MAX_CONCURRENT_UPLOADS","DEFAULT_CHUNK_SIZE","MAX_BLOCK_SIZE","MAX_CHUNK_SIZE","RATE_LIMIT_REQUESTS","RATE_LIMIT_PERIOD","createRateLimiter","throttle","globalRateLimiter","Web3Storage","endpoint","rateLimiter","Authorization","files","onRootCidReady","onStoredChunk","maxRetries","toImportCandidate","car","putCar","headers","encodeURIComponent","carRoot","splitter","upload","carParts","carFile","status","cars","toWeb3Response","statusText","before","toISOString","maxResults","paginator","URLSearchParams","page","toWeb3File","toFilenameWithPath","unixFsPath","slashIndex","unixFsIterator"],"version":3,"file":"index.975ef6c8.js.map","sourceRoot":"/__parcel_source_root/"}